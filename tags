!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	bundle/jedi-vim/test/goto.vim	/^        normal! \$$/;"	m
.	bundle/jedi-vim/ftplugin/python/jedi.vim	/^        inoremap <silent> <buffer> . .<C-R>=jedi#complete_string(1)<CR>$/;"	m
2jdd	bundle/vim-gitgutter/test/testHunkRevertNearbyHunk.vim	/^normal 2jdd$/;"	m
2jdd	bundle/vim-gitgutter/test/testHunkStageNearbyHunk.vim	/^normal 2jdd$/;"	m
5G	bundle/vim-gitgutter/test/testHunkOutsideNoop.vim	/^normal 5G$/;"	m
5Gi*	bundle/vim-gitgutter/test/testEditAmbiguousFile.vim	/^normal 5Gi*$/;"	m
5Gi*	bundle/vim-gitgutter/test/testHunkRevert.vim	/^normal 5Gi*$/;"	m
5Gi*	bundle/vim-gitgutter/test/testHunkStage.vim	/^normal 5Gi*$/;"	m
5Go*	bundle/vim-gitgutter/test/testKeepModified.vim	/^normal 5Go*$/;"	m
5Go*	bundle/vim-gitgutter/test/testKeepOpMarks.vim	/^normal 5Go*$/;"	m
<C-c>	bundle/jedi-vim/plugin/jedi.vim	/^        inoremap <C-c> <ESC>$/;"	m
<Leader>C	fzf.vim	/^nnoremap <silent><Leader>C :call fzf#run({$/;"	m
<Leader>b	fzf.vim	/^nnoremap <silent><Leader>b :call fzf#run({$/;"	m
<Leader>dets	bundle/vim-colorschemes/colors/detailed.vim	/^nmap <Leader>dets :call <SID>SynStack()<CR>$/;"	m
<Leader>e	keys.vim	/^nnoremap <silent> <Leader>e :NERDTreeToggle<CR>$/;"	m
<Leader>hp	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterRevertHunk$/;"	m
<Leader>hs	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>l	keys.vim	/^nnoremap <silent> <Leader>l :set list!<CR>$/;"	m
<Leader>s	fzf.vim	/^nnoremap <silent> <Leader>s :call fzf#run({$/;"	m
<Leader>v	fzf.vim	/^nnoremap <silent> <Leader>v :call fzf#run({$/;"	m
<Leader>w	keys.vim	/^nnoremap <silent> <Leader>w :confirm :Bclose<CR>$/;"	m
<M-0>	bundle/vim-colorschemes/colors/nefertiti.vim	/^        map <silent> <M-0>  <Plug>NefertitiReset$/;"	m
<M-1>	bundle/vim-colorschemes/colors/nefertiti.vim	/^        map <silent> <M-1>  <Plug>NefertitiDarken$/;"	m
<M-2>	bundle/vim-colorschemes/colors/nefertiti.vim	/^        map <silent> <M-2>  <Plug>NefertitiBrighten$/;"	m
<Nul>	bundle/jedi-vim/after/ftplugin/python/jedi.vim	/^            imap <buffer> <Nul> <C-Space>$/;"	m
<Plug>(vimfiler_create)	bundle/vimfiler.vim/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_create)$/;"	m
<Plug>(vimfiler_simple)	bundle/vimfiler.vim/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_simple)$/;"	m
<Plug>(vimfiler_split_create)	bundle/vimfiler.vim/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_split_create)$/;"	m
<Plug>(vimfiler_split_switch)	bundle/vimfiler.vim/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_split_switch)$/;"	m
<Plug>(vimfiler_switch)	bundle/vimfiler.vim/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_switch)$/;"	m
<Plug>AirlineSelectNextTab	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectNextTab :<C-u>call <SID>jump_to_tab(v:count1)<CR>$/;"	m
<Plug>AirlineSelectPrevTab	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectPrevTab :<C-u>call <SID>jump_to_tab(-v:count1)<CR>$/;"	m
<Plug>AirlineSelectTab1	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab1 :call <SID>select_tab(0)<CR>$/;"	m
<Plug>AirlineSelectTab2	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab2 :call <SID>select_tab(1)<CR>$/;"	m
<Plug>AirlineSelectTab3	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab3 :call <SID>select_tab(2)<CR>$/;"	m
<Plug>AirlineSelectTab4	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab4 :call <SID>select_tab(3)<CR>$/;"	m
<Plug>AirlineSelectTab5	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab5 :call <SID>select_tab(4)<CR>$/;"	m
<Plug>AirlineSelectTab6	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab6 :call <SID>select_tab(5)<CR>$/;"	m
<Plug>AirlineSelectTab7	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab7 :call <SID>select_tab(6)<CR>$/;"	m
<Plug>AirlineSelectTab8	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab8 :call <SID>select_tab(7)<CR>$/;"	m
<Plug>AirlineSelectTab9	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  noremap <unique> <Plug>AirlineSelectTab9 :call <SID>select_tab(8)<CR>$/;"	m
<Plug>GitGutterNextHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterRevertHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterRevertHunk  :GitGutterRevertHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>NefertitiBrighten	bundle/vim-colorschemes/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiBrighten     :NefertitiBrighten<CR>$/;"	m
<Plug>NefertitiColors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiColors       :NefertitiColors<CR>$/;"	m
<Plug>NefertitiDarken	bundle/vim-colorschemes/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiDarken       :NefertitiDarken<CR>$/;"	m
<Plug>NefertitiReset	bundle/vim-colorschemes/colors/nefertiti.vim	/^    nnoremap <silent> <Plug>NefertitiReset        :NefertitiReset<CR>$/;"	m
<Plug>TComment_<Leader>_<space>	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_<space> :TComment $/;"	m
<Plug>TComment_<Leader>__	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>__ :TComment<cr>$/;"	m
<Plug>TComment_<Leader>_a	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_a :TCommentAs $/;"	m
<Plug>TComment_<Leader>_b	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_b :TCommentBlock<cr>$/;"	m
<Plug>TComment_<Leader>_n	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_n :TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<Leader>_p	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_p vip:TComment<cr>$/;"	m
<Plug>TComment_<Leader>_r	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_r :TCommentRight<cr>$/;"	m
<Plug>TComment_<Leader>_s	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<Leader>_s :TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_<c-_><c-_>	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_><c-_> <c-o>:TComment<cr>$/;"	m
<Plug>TComment_<c-_><c-_>	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_><c-_> :TComment<cr>$/;"	m
<Plug>TComment_<c-_><c-_>	bundle/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_<c-_><c-_> :TCommentMaybeInline<cr>$/;"	m
<Plug>TComment_<c-_><space>	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_><space> <c-o>:TComment $/;"	m
<Plug>TComment_<c-_><space>	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_><space> :TComment $/;"	m
<Plug>TComment_<c-_>a	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>a <c-o>:TCommentAs $/;"	m
<Plug>TComment_<c-_>a	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>a :TCommentAs $/;"	m
<Plug>TComment_<c-_>b	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>b <c-\\><c-o>:TCommentBlock mode=#<cr>$/;"	m
<Plug>TComment_<c-_>b	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>b :TCommentBlock<cr>$/;"	m
<Plug>TComment_<c-_>ca	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>ca :<c-u>call tcomment#SetOption("as", input("Comment as: ", &filetype, "customlist,tcomment#Complete"))<cr>$/;"	m
<Plug>TComment_<c-_>cc	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>cc :<c-u>call tcomment#SetOption("count", v:count1)<cr>$/;"	m
<Plug>TComment_<c-_>i	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>i <c-\\><c-o>v:TCommentInline mode=#<cr>$/;"	m
<Plug>TComment_<c-_>i	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>i v:TCommentInline mode=I#<cr>$/;"	m
<Plug>TComment_<c-_>i	bundle/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_<c-_>i :TCommentInline<cr>$/;"	m
<Plug>TComment_<c-_>n	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>n <c-o>:TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<c-_>n	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>n :TCommentAs <c-r>=&ft<cr> $/;"	m
<Plug>TComment_<c-_>p	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>p <c-o>:norm! m`vip<cr>:TComment<cr><c-o>``$/;"	m
<Plug>TComment_<c-_>p	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>p m`vip:TComment<cr>``$/;"	m
<Plug>TComment_<c-_>r	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>r <c-o>:TCommentRight<cr>$/;"	m
<Plug>TComment_<c-_>r	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>r :TCommentRight<cr>$/;"	m
<Plug>TComment_<c-_>s	bundle/tcomment_vim/plugin/tcomment.vim	/^inoremap <Plug>TComment_<c-_>s <c-o>:TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_<c-_>s	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_<c-_>s :TCommentAs <c-r>=&ft<cr>_$/;"	m
<Plug>TComment_ic	bundle/tcomment_vim/plugin/tcomment.vim	/^noremap <Plug>TComment_ic :<c-U>call tcomment#TextObjectInlineComment()<cr>$/;"	m
<Plug>TComment_ic	bundle/tcomment_vim/plugin/tcomment.vim	/^vnoremap <Plug>TComment_ic :<c-U>call tcomment#TextObjectInlineComment()<cr>$/;"	m
<SID>xx	bundle/vim-gotosymbol/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<Space>	bundle/vim-comfortable/ftplugin/python.vim	/^inoremap <buffer> <expr> <Space> CompleteAndImport()$/;"	m
<leader>;	bundle/vim-colorschemes/colors/midnight.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>;	bundle/vim-colorschemes/colors/midnight2.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>;	bundle/vim-colorschemes/colors/tomatosoup.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>;	bundle/vim-colorschemes/colors/vj.vim	/^nmap <silent> <leader>; :call ToggleSemicolonHighlighting()<cr>$/;"	m
<leader>f	fzf.vim	/^nnoremap <leader>f :FZF<CR>$/;"	m
<leader>sc	bundle/vim-colorschemes/colors/sean.vim	/^nmap <silent> <leader>sc :call ToggleSemicolonHighlighting()<cr>$/;"	m
A	bundle/jedi-vim/jedi/test/completion/basic.py	/^class A():$/;"	c
A	bundle/jedi-vim/jedi/test/completion/basic.py	/^class A(object): pass$/;"	c
A	bundle/jedi-vim/jedi/test/completion/classes.py	/^class A():$/;"	c
A	bundle/jedi-vim/jedi/test/completion/classes.py	/^class A(object):$/;"	c
A	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class A():$/;"	c
A	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^class A():$/;"	c
A	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^class A(): pass$/;"	c
A	bundle/jedi-vim/jedi/test/completion/goto.py	/^    class A():$/;"	c	function:func
A	bundle/jedi-vim/jedi/test/completion/ordering.py	/^class A(object):$/;"	c
A	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^class A(object):$/;"	c
A	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^class A(): pass$/;"	c
ALLSPHINXOPTS	bundle/jedi-vim/jedi/docs/Makefile	/^ALLSPHINXOPTS   = -d $(BUILDDIR)\/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
ALWAYS_BREAK_TOKENS	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^ALWAYS_BREAK_TOKENS = (';', 'import', 'from', 'class', 'def', 'try', 'except',$/;"	v
Abc	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def Abc(self):$/;"	m	class:Abc
Abc	bundle/jedi-vim/jedi/test/completion/usages.py	/^Abc = 3$/;"	v
Abc	bundle/jedi-vim/jedi/test/completion/usages.py	/^class Abc():$/;"	c
AcceptSelection	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f
Ack	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack           call ack#Ack('grep<bang>', <q-args>)$/;"	c
AckAdd	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd        call ack#Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile       call ack#Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call ack#AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckHelp	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help AckHelp       call ack#AckHelp('grep<bang>', <q-args>)$/;"	c
AckWindow	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help AckWindow     call ack#AckWindow('grep<bang>', <q-args>)$/;"	c
AddCterm	bundle/vim-colorschemes/colors/lucius.vim	/^function! s:AddCterm(name)$/;"	f
AddGroundValues	bundle/vim-colorschemes/colors/gotham.vim	/^function! s:AddGroundValues(accumulator, ground, color)$/;"	f
AddGroundValues	bundle/vim-colorschemes/colors/gotham256.vim	/^function! s:AddGroundValues(accumulator, ground, color)$/;"	f
AddHighlighting	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:AddHighlighting()$/;"	f
AddModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:AddModeExtra(comment_mode, extra, beg, end) "{{{3$/;"	f
AddScopedTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddSpCterm	bundle/vim-colorschemes/colors/lucius.vim	/^function! s:AddSpCterm(name)$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
Ag	fzf.vim	/^command! -nargs=1 Ag call fzf#run({$/;"	c
AirlineRefresh	bundle/vim-airline/plugin/airline.vim	/^command! -bar AirlineRefresh call airline#load_theme() | call airline#update_statusline()$/;"	c
AirlineTheme	bundle/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	bundle/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	bundle/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AirlineWebDevIcons	bundle/vim-webdevicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
AlreadyEvaluated	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluated$/;"	i
AlreadyEvaluated	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class AlreadyEvaluated(frozenset):$/;"	c
AlreadyEvaluated	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^                from jedi.evaluate.iterable import AlreadyEvaluated$/;"	i
AltFiletype	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:AltFiletype(filetype) "{{{3$/;"	f
Angry	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Angry(object):$/;"	c
ApplyMappings	bundle/ack.vim/autoload/ack.vim	/^function! s:ApplyMappings() "{{{$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
Arguments	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^            from jedi.evaluate.param import Arguments$/;"	i
Arguments	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    from jedi.evaluate.param import ExecutedParam, Arguments$/;"	i
Arguments	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^class Arguments(tree.Base):$/;"	c
Array	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluated$/;"	i
Array	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class Array(IterableWrapper, ArrayMixin):$/;"	c
ArrayInstance	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class ArrayInstance(IterableWrapper):$/;"	c
ArrayMixin	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class ArrayMixin(object):$/;"	c
AssertStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class AssertStmt(KeywordStatement):$/;"	c
Assertions	bundle/jedi-vim/jedi/test/test_evaluate/absolute_import/local_module.py	/^class Assertions(unittest.TestCase):$/;"	c
Assertions	bundle/jedi-vim/jedi/test/test_evaluate/absolute_import/unittest.py	/^from local_module import Assertions$/;"	i
Attr	bundle/vim-colorschemes/colors/gotham.vim	/^function! s:Attr(group, attr)$/;"	f
Attr	bundle/vim-colorschemes/colors/gotham256.vim	/^function! s:Attr(group, attr)$/;"	f
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
B	bundle/jedi-vim/jedi/test/completion/basic.py	/^class B(): pass$/;"	c
B	bundle/jedi-vim/jedi/test/completion/classes.py	/^        class B():$/;"	c	function:A.b
B	bundle/jedi-vim/jedi/test/completion/classes.py	/^    class B():$/;"	c	class:A
B	bundle/jedi-vim/jedi/test/completion/classes.py	/^class B():$/;"	c
B	bundle/jedi-vim/jedi/test/completion/classes.py	/^class B(A()):$/;"	c
B	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class B():$/;"	c
B	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^class B(object):$/;"	c
BACKQUOTE	bundle/jedi-vim/jedi/jedi/parser/token.py	/^    BACKQUOTE = N_TOKENS$/;"	v
BUILDDIR	bundle/jedi-vim/jedi/docs/Makefile	/^BUILDDIR      = _build$/;"	m
Bar	bundle/jedi-vim/jedi/test/test_evaluate/flask-site-packages/flaskext/bar.py	/^class Bar(object):$/;"	c
Base	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
Base	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Base(object):$/;"	c
Base	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Base():$/;"	c
Base	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Base(object):$/;"	c
Base	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Base(str):$/;"	c
Base	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class Base():$/;"	c
BaseDefinition	bundle/jedi-vim/jedi/jedi/api/classes.py	/^class BaseDefinition(object):$/;"	c
BaseNode	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class BaseNode(Base):$/;"	c
BaseTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
Baz	bundle/jedi-vim/jedi/test/test_evaluate/flask-site-packages/flask_baz/__init__.py	/^Baz = 1$/;"	v
Bclose	bundle/vim-comfortable/plugin/bclose.vim	/^command! -bang -complete=buffer -nargs=? Bclose call s:Bclose('<bang>', '<args>')$/;"	c
Bclose	bundle/vim-comfortable/plugin/bclose.vim	/^function! s:Bclose(bang, buffer)$/;"	f
Black	bundle/vim-colorschemes/colors/mango.vim	/^    let Black = "guifg=#444444 guibg=NONE gui=NONE ctermfg=238 ctermbg=NONE cterm=NONE"$/;"	v
Black	bundle/vim-colorschemes/colors/mango.vim	/^    let Black = "guifg=#585858 guibg=NONE gui=NONE ctermfg=240 ctermbg=NONE cterm=NONE"$/;"	v
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockGetCommentRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
Blue	bundle/vim-colorschemes/colors/mango.vim	/^  let Blue = "guifg=#5fafdf guibg=NONE gui=NONE ctermfg=74 ctermbg=NONE cterm=NONE"$/;"	v
Bookmark.AddBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Brightness	bundle/vim-colorschemes/colors/xterm16.vim	/^command! -nargs=* Brightness$/;"	c
Brightness	bundle/vim-colorschemes/colors/xterm16.vim	/^function! Brightness(...)$/;"	f
BrokenPartsOfClass	bundle/jedi-vim/jedi/test/completion/invalid.py	/^class BrokenPartsOfClass():$/;"	c
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook() abort " {{{2$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufReadPostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook() abort " {{{2$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BufWritePostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook() abort " {{{2$/;"	f
BuildPrompt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f
Builtin	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^class Builtin(CompiledObject):$/;"	c
Bundle	bundle/vundle/autoload/vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
BundleClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	bundle/vundle/autoload/vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
C	bundle/jedi-vim/jedi/test/completion/arrays.py	/^class C():$/;"	c
C	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class C(object):$/;"	c
C	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^class C(): pass$/;"	c
C	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^class C():$/;"	c
C	bundle/jedi-vim/jedi/test/completion/goto.py	/^class C(object):$/;"	c
C	bundle/jedi-vim/jedi/test/completion/import_tree/recurse_class1.py	/^class C(recurse_class2.C):$/;"	c
C	bundle/jedi-vim/jedi/test/completion/import_tree/recurse_class2.py	/^class C(recurse_class1.C):$/;"	c
C	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^class C():$/;"	c
CACHE_FOLDER	bundle/jedi-vim/conftest.py	/^CACHE_FOLDER = '.cache'$/;"	v
CODES	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^CODES = {$/;"	v
COMMENT	bundle/jedi-vim/jedi/jedi/parser/token.py	/^COMMENT = N_TOKENS$/;"	v
COMMENT	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^COMMENT = N_TOKENS$/;"	v
COMPARISON_OPERATORS	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^COMPARISON_OPERATORS = {$/;"	v
CSAHi	bundle/vim-colorschemes/colors/herokudoc.vim	/^    command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	bundle/vim-colorschemes/colors/herokudoc.vim	/^    command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	bundle/vim-colorschemes/colors/iangenzo.vim	/^    command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	bundle/vim-colorschemes/colors/iangenzo.vim	/^    command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	bundle/vim-colorschemes/colors/legiblelight.vim	/^        command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	bundle/vim-colorschemes/colors/legiblelight.vim	/^        command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CSAHi	bundle/vim-colorschemes/colors/maroloccio.vim	/^   command! -nargs=+ CSAHi exe "hi" <q-args>$/;"	c
CSAHi	bundle/vim-colorschemes/colors/maroloccio.vim	/^   command! -nargs=+ CSAHi exe "hi" substitute(substitute(<q-args>, "undercurl", "underline", "g"), "guisp\\\\S\\\\+", "", "g")$/;"	c
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checker_names) abort " {{{2$/;"	f
CachedFastParser	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^class CachedFastParser(type):$/;"	c
CachedMetaClass	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass$/;"	i
CachedMetaClass	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^class CachedMetaClass(type):$/;"	c
CachedMetaClass	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate.cache import CachedMetaClass, memoize_default$/;"	i
CachedMetaClass	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULT$/;"	i
CallClass	bundle/jedi-vim/jedi/test/completion/classes.py	/^class CallClass():$/;"	c
CallSignature	bundle/jedi-vim/jedi/jedi/api/classes.py	/^class CallSignature(Definition):$/;"	c
Cat	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
CheckAttribute	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^class CheckAttribute(object):$/;"	c
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
Class	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class Class(use_metaclass(CachedMetaClass, Wrapper)):$/;"	c
Class	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Class(ClassOrFunc):$/;"	c
ClassDec	bundle/jedi-vim/jedi/test/completion/goto.py	/^class ClassDec():$/;"	c
ClassDef	bundle/jedi-vim/jedi/test/completion/goto.py	/^class ClassDef():$/;"	c
ClassOrFunc	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class ClassOrFunc(Scope):$/;"	c
ClassSep	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
ClassVar	bundle/jedi-vim/jedi/test/completion/goto.py	/^class ClassVar():$/;"	c
Clear	bundle/vim-colorschemes/colors/gotham.vim	/^function! s:Clear(group)$/;"	f
Clear	bundle/vim-colorschemes/colors/gotham256.vim	/^function! s:Clear(group)$/;"	f
ClearAllCtrlPCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache() abort " {{{2$/;"	f
ClearCtrlPCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
Cls	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^class Cls():$/;"	c
Cls	bundle/jedi-vim/jedi/test/static_analysis/attribute_warnings.py	/^class Cls():$/;"	c
Col	bundle/vim-colorschemes/colors/gotham.vim	/^function! s:Col(group, fg_name, ...)$/;"	f
Col	bundle/vim-colorschemes/colors/gotham256.vim	/^function! s:Col(group, fg_name, ...)$/;"	f
Color	bundle/vim-colorschemes/colors/mdark.vim	/^function s:Color(name, color_settings)$/;"	f
ColorDictParser	bundle/vim-colorschemes/colors/distinguished.vim	/^	function! s:ColorDictParser(color_dict)$/;"	f
Comment	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
CommentBlock	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, cbeg, cend, comment_mode, comment_do, checkRx, cdef)$/;"	f
CommentDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, comment_mode, cbeg, cend)$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompFor	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class CompFor(BaseNode):$/;"	c
CompareByKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompiledName	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^class CompiledName(FakeName):$/;"	c
CompiledObject	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^from jedi.evaluate.compiled import CompiledObject$/;"	i
CompiledObject	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^class CompiledObject(Base):$/;"	c
CompiledObject	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate.compiled import (CompiledObject, create, builtin,$/;"	i
CompleteAndImport	bundle/vim-comfortable/ftplugin/python.vim	/^function! CompleteAndImport()$/;"	f
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
Completion	bundle/jedi-vim/jedi/jedi/api/classes.py	/^class Completion(BaseDefinition):$/;"	c
Comprehension	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class Comprehension(IterableWrapper):$/;"	c
ConstructFromCommentsOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ConstructFromCommentsOption(comment_mode)$/;"	f
CorrectFocusOnStartup	bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
Count	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:Count(string, rx)$/;"	f
Counter	bundle/jedi-vim/jedi/test/completion/generators.py	/^class Counter:$/;"	c
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateNewFile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f
CreatePseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
Creator.BufNamePrefix	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path)$/;"	f
Creator._createTreeWin	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
CtagsErrMsg	bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CtrlP	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	bundle/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init(1)$/;"	c
CtrlPChange	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCurFile	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init(0, { 'mode': 'c' })$/;"	c
CtrlPCurWD	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init(0, { 'mode': '' })$/;"	c
CtrlPDir	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLine	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUFiles	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init(2, { 'dir': <q-args> })$/;"	c
CtrlPMixed	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPQuickfix	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init(0, { 'mode': 'r' })$/;"	c
CtrlPTag	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CurrentBufferIsModule	bundle/jedi-vim/test/utils.vim	/^function! CurrentBufferIsModule(module_name)$/;"	f
Cursor	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from sqlite3 import Cursor$/;"	i
CursorColor	bundle/vim-colorschemes/colors/getfresh.vim	/^let CursorColor   = '#FF8939'$/;"	v
CursorHoldUpdate	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:CursorHoldUpdate()$/;"	f
CursorLColor	bundle/vim-colorschemes/colors/getfresh.vim	/^let CursorLColor  = '#202020'$/;"	v
D	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^class D(): pass$/;"	c
D	bundle/jedi-vim/jedi/test/completion/goto.py	/^D = C$/;"	v
DEDENT	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
DFAState	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^class DFAState(object):$/;"	c
DOCSTRING_PARAM_PATTERNS	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^DOCSTRING_PARAM_PATTERNS = [$/;"	v
DOCSTRING_RETURN_PATTERNS	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^DOCSTRING_RETURN_PATTERNS = [$/;"	v
DarkBlue	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkBlue      = '#1CA1DB'$/;"	v
DarkCyan	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkCyan      = '#EA7D24'$/;"	v
DarkGray	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkGray      = '#393939'$/;"	v
DarkGreen	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkGreen     = '#9DBA3A'$/;"	v
DarkMagenta	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkMagenta   = '#652F90'$/;"	v
DarkRed	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkRed       = '#BF1E2D'$/;"	v
DarkYellow	bundle/vim-colorschemes/colors/getfresh.vim	/^let DarkYellow    = '#F5B915'$/;"	v
Dec2hex	bundle/vim-colorschemes/colors/spectro.vim	/^fun! Dec2hex(s)$/;"	f
Decorator	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Decorator(BaseNode):$/;"	c
Decorator	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class Decorator(object):$/;"	c
DecoratorWithoutCall	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class DecoratorWithoutCall():$/;"	c
DefaultValue	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
Definition	bundle/jedi-vim/jedi/jedi/api/classes.py	/^class Definition(use_metaclass(CachedMetaClass, BaseDefinition)):$/;"	c
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,...) abort$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Dispatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DoMatchParen	bundle/matchparenpp/plugin/matchparen++.vim	/^command! DoMatchParen runtime plugin\/matchparen++.vim | doau CursorMoved$/;"	c
DoReplacements	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) "{{{3$/;"	f
DocstringMixin	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class DocstringMixin(object):$/;"	c
Dude	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Dude(classgetter()):$/;"	c
Dump	bundle/vim-gitgutter/test/helper.vim	/^function! Dump(text, filename)$/;"	f
DumpGitDiff	bundle/vim-gitgutter/test/helper.vim	/^function! DumpGitDiff(filename)$/;"	f
DumpGitDiffStaged	bundle/vim-gitgutter/test/helper.vim	/^function! DumpGitDiffStaged(filename)$/;"	f
DumpSigns	bundle/vim-gitgutter/test/helper.vim	/^function! DumpSigns(filename)$/;"	f
DynamicParam	bundle/jedi-vim/jedi/test/completion/usages.py	/^class DynamicParam():$/;"	c
E	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class E(object):$/;"	c
E	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^class E(): pass$/;"	c
E2T	bundle/vim-colorschemes/colors/bocau.vim	/^function! E2T(a)$/;"	f
E2T	bundle/vim-colorschemes/colors/jiks.vim	/^function! E2T(a)$/;"	f
E2T	bundle/vim-colorschemes/colors/vividchalk.vim	/^function! E2T(a)$/;"	f
ELLIPSIS	bundle/jedi-vim/jedi/jedi/parser/token.py	/^    ELLIPSIS = N_TOKENS$/;"	v
ENDMARKER	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
ENDMARKER	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,$/;"	i
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EncodeCommentPart	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndColRx(comment_mode, lnum, pos)$/;"	f
EndLineRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndPosRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:EndPosRx(comment_mode, lnum, col)$/;"	f
EndsWith	bundle/jedi-vim/test/utils.vim	/^function EndsWith(string, end)$/;"	f
Error	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Error	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^class Error(object):$/;"	c
ErrorStatement	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^class ErrorStatement(object):$/;"	c
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! Errors              call SyntasticErrors()$/;"	c
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
Evaluator	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^class Evaluator(object):$/;"	c
Evaluator	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi.evaluate import Evaluator$/;"	i
Evaluator	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^from jedi.evaluate import sys_path, Evaluator$/;"	i
Event.New	bundle/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
Executed	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class Executed(tree.Base):$/;"	c
ExecutedParam	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    from jedi.evaluate.param import ExecutedParam, Arguments$/;"	i
ExecutedParam	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^class ExecutedParam(tree.Param):$/;"	c
ExecutionRecursionDetector	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^class ExecutionRecursionDetector(object):$/;"	c
Expfloat	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^Expfloat = r'[0-9]+' + exponent$/;"	v
ExprStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class ExprStmt(BaseNode, DocstringMixin):$/;"	c
ExtendCDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ExtendCDef(beg, end, comment_mode, cdef, args)$/;"	f
Extension	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/setup.py	/^from distutils.core import setup, Extension$/;"	i
ExtractCommentsPart	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ExtractCommentsPart()$/;"	f
FLOWS	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^FLOWS = 'if', 'else', 'elif', 'while', 'with', 'try', 'except', 'finally', 'for'$/;"	v
FZFTags	fzf.vim	/^command! -bar FZFTags if !empty(tagfiles()) | call fzf#run({$/;"	c
FakeDict	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class FakeDict(_FakeArray):$/;"	c
FakeImport	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^class FakeImport(tree.ImportName):$/;"	c
FakeName	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate.helpers import FakeName, get_module_names$/;"	i
FakeName	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeName	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeName	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeName	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^class FakeName(tree.Name):$/;"	c
FakeName	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi.evaluate.helpers import FakeName$/;"	i
FakeSequence	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.iterable import Array, FakeSequence, AlreadyEvaluated$/;"	i
FakeSequence	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class FakeSequence(_FakeArray):$/;"	c
False	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
FastModule	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^class FastModule(tree.Module):$/;"	c
FastParser	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.parser.fast import FastParser$/;"	i
FastParser	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^class FastParser(use_metaclass(CachedFastParser)):$/;"	c
FastParser	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi.parser.fast import FastParser$/;"	i
FastParser	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^from jedi.parser.fast import FastParser$/;"	i
FastTokenizer	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^class FastTokenizer(object):$/;"	c
FileInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.clearOldFolds	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
FileUpdate	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:FileUpdate(fname)$/;"	f
Filetype	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
FindClass	bundle/jedi-vim/jedi/test/completion/classes.py	/^class FindClass():$/;"	c
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FlagSet.New	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FlaskyStyle	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^class FlaskyStyle(Style):$/;"	c
Flow	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Flow(BaseNode):$/;"	c
FoldColBG	bundle/vim-colorschemes/colors/getfresh.vim	/^let FoldColBG     = '#050505'$/;"	v
FoldFG	bundle/vim-colorschemes/colors/getfresh.vim	/^let FoldFG        = DarkCyan$/;"	v
FoldLineBG	bundle/vim-colorschemes/colors/getfresh.vim	/^let FoldLineBG    = NormalBG$/;"	v
Foo	bundle/jedi-vim/jedi/test/completion/complex.py	/^class Foo(object):$/;"	c
Foo	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        class Foo():$/;"	c	function:TestInterpreterAPI.test_getitem_side_effects
Foo	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        class Foo():$/;"	c	function:TestInterpreterAPI.test_property_error
Foo	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        class Foo():$/;"	c	function:TestInterpreterAPI.test_slice
Foo	bundle/jedi-vim/jedi/test/test_evaluate/flask-site-packages/flask_foo.py	/^class Foo(object):$/;"	c
Foo	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
Foo	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
Foo	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
Foo	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
FooBar	bundle/jedi-vim/jedi/test/completion/precedence.py	/^class FooBar(object):$/;"	c
ForStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class ForStmt(Flow):$/;"	c
ForceUpdate	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f
Fore	bundle/jedi-vim/jedi/jedi/debug.py	/^        from colorama import Fore, init$/;"	i
Fore	bundle/jedi-vim/jedi/jedi/debug.py	/^    class Fore(object):$/;"	c
FormatRGB	bundle/vim-colorschemes/colors/spectro.vim	/^fun! FormatRGB(rgb)$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
Function	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class Function(use_metaclass(CachedMetaClass, Wrapper)):$/;"	c
Function	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Function(ClassOrFunc):$/;"	c
Function	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi.parser.tree import Function$/;"	i
FunctionExecution	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^        from jedi.evaluate.representation import FunctionExecution$/;"	i
FunctionExecution	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class FunctionExecution(Executed):$/;"	c
G$	bundle/jedi-vim/test/goto.vim	/^        normal G\$$/;"	m
G$	bundle/jedi-vim/test/goto.vim	/^        normal! G\$$/;"	m
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GK	bundle/jedi-vim/test/documentation.vim	/^        normal GK$/;"	m
GREEN	bundle/jedi-vim/jedi/jedi/debug.py	/^        GREEN = ''$/;"	v	class:Fore
GUI	bundle/vim-colorschemes/colors/getfresh.vim	/^let GUI           = 'none'$/;"	v
Generator	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class Generator(use_metaclass(CachedMetaClass, IterableWrapper, GeneratorMixin)):$/;"	c
GeneratorComprehension	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class GeneratorComprehension(Comprehension, GeneratorMixin):$/;"	c
GeneratorMethod	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class GeneratorMethod(IterableWrapper):$/;"	c
GeneratorMixin	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class GeneratorMixin(object):$/;"	c
Generic	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Get	bundle/jedi-vim/jedi/test/completion/generators.py	/^class Get():$/;"	c
GetArrayBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:GetArrayBeg(lnum)$/;"	f
GetCommentDefinition	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinition(beg, end, comment_mode, ...)$/;"	f
GetCommentDefinitionForType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, comment_mode, filetype) "{{{3$/;"	f
GetCommentReplace	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetContinuationBegin	bundle/vim-web-indent/indent/javascript.vim	/^function! s:GetContinuationBegin(lnum) $/;"	f
GetDialect	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect() " {{{2$/;"	f
GetDocLocations	bundle/ack.vim/autoload/ack.vim	/^function! s:GetDocLocations() "{{{$/;"	f
GetFileWinnr	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetItem	bundle/jedi-vim/jedi/test/completion/arrays.py	/^class GetItem():$/;"	c
GetItemWithList	bundle/jedi-vim/jedi/test/completion/arrays.py	/^class GetItemWithList():$/;"	c
GetJsIndent	bundle/vim-web-indent/indent/javascript.vim	/^function! GetJsIndent(lnum)$/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg() " {{{2$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetNonCommentLine	bundle/vim-web-indent/indent/javascript.vim	/^function! s:GetNonCommentLine(lnum)$/;"	f
GetObjectBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:GetObjectBeg(lnum)$/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg() " {{{2$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg() " {{{2$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg() " {{{2$/;"	f
GetParenBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:GetParenBeg(lnum)$/;"	f
GetProfile	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile() " {{{2$/;"	f
GetPythonPEPIndent	bundle/vim-python-pep8-indent/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell() " {{{2$/;"	f
GetStartEnd	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetStartEnd(beg, end, comment_mode) "{{{3$/;"	f
GetSupportedFiletypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSyntaxName	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetTempOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GetTempOption(name, default) "{{{3$/;"	f
GetValaModules	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules() " {{{2$/;"	f
GetValaVapiDirs	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs() " {{{2$/;"	f
GetattrArray	bundle/jedi-vim/jedi/test/completion/classes.py	/^class GetattrArray():$/;"	c
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutter    call gitgutter#process_buffer(bufnr(''), 0)$/;"	c
GitGutterAll	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterRevertHunk  call gitgutter#revert_hunk()$/;"	c
GitGutterSignsDisable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	bundle/vim-gitgutter/plugin/gitgutter.vim	/^command GitGutterToggle  call gitgutter#toggle()$/;"	c
GlobPath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f
GlobalName	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class GlobalName(helpers.FakeName):$/;"	c
GlobalStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class GlobalStmt(KeywordStatement):$/;"	c
GotoByAlpha	bundle/vim-signature/plugin/signature/mark.vim	/^function! s:GotoByAlpha(dir)                                                                                      " {{{2$/;"	f
GotoByAlphaGlobal	bundle/vim-signature/plugin/signature/mark.vim	/^function! s:GotoByAlphaGlobal(dir)                                                                                " {{{2$/;"	f
GotoByPos	bundle/vim-signature/plugin/signature/mark.vim	/^function! s:GotoByPos(dir)                                                                                        " {{{2$/;"	f
GotoFileWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
GotoSymbol	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -bar -nargs=1 -complete=customlist,s:completeSymbols GotoSymbol :call s:gotoSymbol('<args>')$/;"	c
Grammar	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^class Grammar(object):$/;"	c
Gray	bundle/vim-colorschemes/colors/mango.vim	/^  let Gray = "guifg=#bcbcbc guibg=NONE gui=NONE ctermfg=250 ctermbg=NONE cterm=NONE"$/;"	v
Green	bundle/vim-colorschemes/colors/mango.vim	/^  let Green = "guifg=#87af5f guibg=NONE gui=NONE ctermfg=107 ctermbg=NONE cterm=NONE"$/;"	v
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GruvboxHlsHideCursor	bundle/vim-colorschemes/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	bundle/vim-colorschemes/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
GuessCommentMode	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCommentMode(comment_mode, supported_comment_modes) "{{{3$/;"	f
GuessCustomCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessCustomCommentString(ft, comment_mode, ...)$/;"	f
GuessFileType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, comment_mode, filetype, ...)$/;"	f
GuessVimOptionsCommentString	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:GuessVimOptionsCommentString(comment_mode)$/;"	f
H	bundle/vim-colorschemes/colors/saturn.vim	/^fu! <SID>H(group, fg, bg, attr)$/;"	f
HI	bundle/vim-colorschemes/colors/jellyx.vim	/^command! -nargs=+ HI call s:HI(<f-args>)$/;"	c
HI	bundle/vim-colorschemes/colors/jellyx.vim	/^function! s:HI(group, fg, bg, fx, ...)$/;"	f
HL	bundle/vim-colorschemes/colors/badwolf.vim	/^function! s:HL(group, fg, ...)$/;"	f
HL	bundle/vim-colorschemes/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HiLink	bundle/vim-colorschemes/colors/ciscoacl.vim	/^	   command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/ciscoacl.vim	/^	   command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/pic.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/pic.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/psql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/psql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/rtl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/vim-colorschemes/colors/rtl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Highlight	bundle/ack.vim/autoload/ack.vim	/^function! s:Highlight(args) "{{{$/;"	f
Highlight	bundle/vim-colorschemes/colors/flatcolor.vim	/^function! s:Highlight(group_name, guifg, guibg, gui, guisp)$/;"	f
Highlight	bundle/vim-colorschemes/colors/gotham.vim	/^function! s:Highlight(args)$/;"	f
Highlight	bundle/vim-colorschemes/colors/gotham256.vim	/^function! s:Highlight(args)$/;"	f
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HighlightX	bundle/vim-colorschemes/colors/flatcolor.vim	/^function! s:HighlightX(group_name, guifg, guibg, gui, guisp)$/;"	f
Highlight_Matching_Pair	bundle/matchparenpp/plugin/matchparen++.vim	/^function! s:Highlight_Matching_Pair() "{{{$/;"	f
Hsl2rgb	bundle/vim-colorschemes/colors/spectro.vim	/^fun! Hsl2rgb(h)$/;"	f
HtmlDjangoDebug	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^function! HtmlDjangoDebug(on)$/;"	f
HtmlIndentClose	bundle/vim-web-indent/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	bundle/vim-web-indent/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGetter	bundle/vim-web-indent/indent/html.vim	/^fun! HtmlIndentGetter(lnum)$/;"	f
HtmlIndentOpen	bundle/vim-web-indent/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	bundle/vim-web-indent/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	bundle/vim-web-indent/indent/html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	bundle/vim-web-indent/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
Hue2rgb	bundle/vim-colorschemes/colors/spectro.vim	/^fun! Hue2rgb(v1,v2,H)$/;"	f
I18NSPHINXOPTS	bundle/jedi-vim/jedi/docs/Makefile	/^I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .$/;"	m
INDENT	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
INDENT	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
IfStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class IfStmt(Flow):$/;"	c
IgnoreError	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
ImplicitTuple	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class ImplicitTuple(_FakeArray):$/;"	c
Import	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
Import	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Import(BaseNode):$/;"	c
ImportFrom	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class ImportFrom(Import):$/;"	c
ImportName	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class ImportName(Import):$/;"	c
ImportWrapper	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^class ImportWrapper(tree.Base):$/;"	c
Importer	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^class Importer(object):$/;"	c
IndentIssues	bundle/jedi-vim/jedi/test/completion/parser.py	/^class IndentIssues():$/;"	c
IndentLinesDisable	bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
IndentLinesEnable	bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
IndentLinesReset	bundle/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	bundle/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentLinesToggle	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
Inherited	bundle/jedi-vim/jedi/test/static_analysis/attribute_warnings.py	/^class Inherited(Cls):$/;"	c
Init	bundle/ack.vim/autoload/ack.vim	/^function! s:Init(cmd) "{{{$/;"	f
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitColor	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
InlineReplacement	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) "{{{3$/;"	f
InsertStatuslineColor	bundle/vim-colorschemes/colors/getfresh.vim	/^function! InsertStatuslineColor(mode)$/;"	f
Instance	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    from jedi.evaluate.representation import Instance$/;"	i
Instance	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^                from jedi.evaluate.representation import Instance$/;"	i
Instance	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate.representation import Instance$/;"	i
Instance	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    from jedi.evaluate.representation import Instance$/;"	i
Instance	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class Instance(use_metaclass(CachedMetaClass, Executed)):$/;"	c
Instance	bundle/jedi-vim/jedi/test/static_analysis/arguments.py	/^class Instance():$/;"	c
InstanceElement	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    from jedi.evaluate.representation import InstanceElement$/;"	i
InstanceElement	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class InstanceElement(use_metaclass(CachedMetaClass, tree.Base)):$/;"	c
InstanceName	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class InstanceName(tree.Name):$/;"	c
IntegrationTestCase	bundle/jedi-vim/jedi/test/run.py	/^class IntegrationTestCase(object):$/;"	c
IntegrationTestFile	bundle/jedi-vim/conftest.py	/^class IntegrationTestFile(object):$/;"	c
Interpreter	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
Interpreter	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^class Interpreter(Script):$/;"	c
Interpreter	bundle/jedi-vim/jedi/jedi/utils.py	/^from jedi import Interpreter$/;"	i
IsArrayBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsArrayBeg(line)$/;"	f
IsArrayEnd	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsArrayEnd(line)$/;"	f
IsComment	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsComment(lnum)$/;"	f
IsContinuationLine	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsContinuationLine(line)$/;"	f
IsControlBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsControlBeg(line)$/;"	f
IsControlEnd	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsControlEnd(line)$/;"	f
IsControlMid	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsControlMid(line)$/;"	f
IsControlMidStrict	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsControlMidStrict(line)$/;"	f
IsInComment	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsInComment(lnum, cnum)$/;"	f
IsObjectBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsObjectBeg(line)$/;"	f
IsObjectEnd	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsObjectEnd(line)$/;"	f
IsParenBeg	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsParenBeg(line)$/;"	f
IsParenEnd	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsParenEnd(line)$/;"	f
IsScope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class IsScope(use_metaclass(IsScopeMeta)):$/;"	c
IsScopeMeta	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class IsScopeMeta(type):$/;"	c
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid() " {{{2$/;"	f
IsSwitchBeginNextLine	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsSwitchBeginNextLine(line) $/;"	f
IsSwitchBeginSameLine	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsSwitchBeginSameLine(line) $/;"	f
IsSwitchMid	bundle/vim-web-indent/indent/javascript.vim	/^function! s:IsSwitchMid(line)$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
IterableWrapper	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class IterableWrapper(tree.Base):$/;"	c
JediRL	bundle/jedi-vim/jedi/jedi/utils.py	/^    class JediRL(object):$/;"	c	function:setup_readline
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
JustAClass	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class JustAClass:$/;"	c
K	bundle/jedi-vim/test/documentation.vim	/^        normal K$/;"	m
KeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f
KeyMap.Add	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
Keyword	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Keyword	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^class Keyword(object):$/;"	c
Keyword	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Keyword(Leaf):$/;"	c
KeywordStatement	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class KeywordStatement(BaseNode):$/;"	c
KindheaderTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
LAck	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck          call ack#Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd       call ack#Ack('lgrepadd<bang>', <q-args>)$/;"	c
LAckHelp	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help LAckHelp      call ack#AckHelp('lgrep<bang>', <q-args>)$/;"	c
LAckWindow	bundle/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=help LAckWindow    call ack#AckWindow('lgrep<bang>', <q-args>)$/;"	c
Lambda	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Lambda(Function):$/;"	c
LambdaWrapper	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class LambdaWrapper(Function):$/;"	c
LandscapeMatch	bundle/vim-colorschemes/colors/landscape.vim	/^augroup LandscapeMatch$/;"	a
LazyInstanceDict	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class LazyInstanceDict(object):$/;"	c
LazyName	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^class LazyName(helpers.FakeName):$/;"	c
LazyName	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^class LazyName(FakeName):$/;"	c
LazyNamesDict	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^class LazyNamesDict(object):$/;"	c
LeadingSpaceDisable	bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
LeadingSpaceEnable	bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
LeadingSpaceToggle	bundle/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
LeadingSpaceToggle	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
Leaf	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Leaf(Base):$/;"	c
LeafWithNewLines	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class LeafWithNewLines(Leaf):$/;"	c
LightBlue	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightBlue     = '#00AFDA'$/;"	v
LightCyan	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightCyan     = '#F79321'$/;"	v
LightGray	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightGray     = '#AF875F'$/;"	v
LightGreen	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightGreen    = '#A9C938'$/;"	v
LightLine	bundle/lightline.vim/plugin/lightline.vim	/^augroup LightLine$/;"	a
LightMagenta	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightMagenta  = '#894E9F'$/;"	v
LightRed	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightRed      = '#E7212A'$/;"	v
LightYellow	bundle/vim-colorschemes/colors/getfresh.vim	/^let LightYellow   = '#F7D325'$/;"	v
LineNrBG	bundle/vim-colorschemes/colors/getfresh.vim	/^let LineNrBG      = '#101010'$/;"	v
LineNrFG	bundle/vim-colorschemes/colors/getfresh.vim	/^let LineNrFG      = '#555555'$/;"	v
ListComprehension	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class ListComprehension(Comprehension, ArrayMixin):$/;"	c
Literal	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Literal	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Literal(LeafWithNewLines):$/;"	c
LoadConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
LoadRandomColorScheme	bundle/vim-colorschemes/colors/random.vim	/^  function s:LoadRandomColorScheme()$/;"	f
LoadUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Log	bundle/vim-web-indent/indent/javascript.vim	/^function! s:Log(msg)$/;"	f
LuciusBlack	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusBlack call SetLucius("dark", "normal", "high")$/;"	c
LuciusBlackHighContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusBlackHighContrast call SetLucius("dark", "high", "high")$/;"	c
LuciusBlackLowContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusBlackLowContrast call SetLucius("dark", "low", "high")$/;"	c
LuciusDark	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusDark call SetLucius("dark", "normal", "normal")$/;"	c
LuciusDarkHighContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusDarkHighContrast call SetLucius("dark", "high", "normal")$/;"	c
LuciusDarkLowContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusDarkLowContrast call SetLucius("dark", "low", "normal")$/;"	c
LuciusLight	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusLight call SetLucius("light", "normal", "normal")$/;"	c
LuciusLightHighContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusLightHighContrast call SetLucius("light", "high", "normal")$/;"	c
LuciusLightLowContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusLightLowContrast call SetLucius("light", "low", "normal")$/;"	c
LuciusWhite	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusWhite call SetLucius("light", "normal", "high")$/;"	c
LuciusWhiteHighContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusWhiteHighContrast call SetLucius("light", "high", "high")$/;"	c
LuciusWhiteLowContrast	bundle/vim-colorschemes/colors/lucius.vim	/^command! LuciusWhiteLowContrast call SetLucius("light", "low", "high")$/;"	c
M	bundle/vim-colorschemes/colors/bocau.vim	/^fun! s:M(a)$/;"	f
M	bundle/vim-colorschemes/colors/inkpot.vim	/^fun! <SID>M(a)$/;"	f
M	bundle/vim-colorschemes/colors/jiks.vim	/^fun! s:M(a)$/;"	f
M	bundle/vim-colorschemes/colors/pf_earth.vim	/^fun! <SID>M(a)$/;"	f
M	bundle/vim-colorschemes/colors/vividchalk.vim	/^fun! s:M(a)$/;"	f
Map	bundle/vim-signature/plugin/signature/utils.vim	/^function! s:Map(mode, key, map_lhs_default, map_rhs)                                                              " {{{1$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
MapNorms	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f
MapOp	bundle/tcomment_vim/plugin/tcomment.vim	/^function! s:MapOp(name, extra, op, invoke) "{{{3$/;"	f
MapSpecs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f
MarkToOpen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f
Marklar	bundle/vim-colorschemes/colors/marklar.vim	/^        command! -nargs=*  Marklar  :call s:Marklar(<f-args>)$/;"	c
Marklar	bundle/vim-colorschemes/colors/marklar.vim	/^        function! s:Marklar(...)$/;"	f
MatchIt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f
MatchedItems	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f
MavenOutputDirectory	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
Memoize	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class Memoize():$/;"	c
MemoizeTest	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class MemoizeTest():$/;"	c
MenuController.New	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
MergedArray	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class MergedArray(_FakeArray):$/;"	c
MergedNamesDict	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^class MergedNamesDict(object):$/;"	c
MergedNodes	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    from jedi.evaluate.iterable import MergedNodes$/;"	i
MergedNodes	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class MergedNodes(frozenset):$/;"	c
MethodDecoratorAsClass	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class MethodDecoratorAsClass():$/;"	c
MethodDecoratorDoesntExist	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class MethodDecoratorDoesntExist(Base):$/;"	c
MethodDecorators	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class MethodDecorators():$/;"	c
Mixin	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Mixin(SuperClass):$/;"	c
MixinTestFullName	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^class MixinTestFullName(object):$/;"	c
Mock	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^        class Mock(FastParser):$/;"	c	function:test_split_parts.splits
Module	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Module(Scope):$/;"	c
ModuleWrapper	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class ModuleWrapper(use_metaclass(CachedMetaClass, tree.Module, Wrapper)):$/;"	c
Modules	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
Moo	bundle/jedi-vim/jedi/test/test_evaluate/flask-site-packages/flaskext/moo/__init__.py	/^Moo = 1$/;"	v
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MyAppend1	bundle/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	bundle/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyException	bundle/jedi-vim/jedi/test/completion/basic.py	/^class MyException(Exception):$/;"	c
MyFuncref	bundle/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	bundle/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NAME	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.GetWinNum	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path)$/;"	f
NERDTree.PathFilters	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.render	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCacheDirtyDir	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeCacheDirtyDir(pathStr)$/;"	f
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeGetCWDGitStatus	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetCWDGitStatus()$/;"	f
NERDTreeGetFileGitStatusKey	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetFileGitStatusKey(us, them)$/;"	f
NERDTreeGetGitStatusPrefix	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetGitStatusPrefix(path)$/;"	f
NERDTreeGetIndicator	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetIndicator(statusKey)$/;"	f
NERDTreeGitStatusKeyMapping	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGitStatusKeyMapping()$/;"	f
NERDTreeGitStatusRefresh	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGitStatusRefresh()$/;"	f
NERDTreeGitStatusRefreshListener	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! NERDTreeGitStatusRefreshListener(event)$/;"	f
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	options.vim	/^let NERDTreeIgnore = ['\\.pyc$']$/;"	v
NERDTreeMinimalUI	options.vim	/^let NERDTreeMinimalUI = 1$/;"	v
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeTrimDoubleQuotes	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeTrimDoubleQuotes(pathStr)$/;"	f
NERDTreeWebDevIconsRefreshListener	bundle/vim-webdevicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NEWLINE	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
NEWLINE	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi.parser.tokenize import (source_tokens, NEWLINE,$/;"	i
NEWLINE	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
NFAState	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^class NFAState(object):$/;"	c
NL	bundle/jedi-vim/jedi/jedi/parser/token.py	/^NL = N_TOKENS$/;"	v
NOTICE	bundle/jedi-vim/jedi/jedi/debug.py	/^NOTICE = object()$/;"	v
NO_DEFAULT	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^NO_DEFAULT = object()$/;"	v
NO_DEFAULT	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.evaluate.cache import memoize_default, NO_DEFAULT$/;"	i
NO_DEFAULT	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULT$/;"	i
NUMBER	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.token import (DEDENT, INDENT, ENDMARKER, NEWLINE, NUMBER,$/;"	i
NUMBER	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,$/;"	i
N_TOKENS	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,$/;"	i
Name	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Name(Leaf):$/;"	c
NameFinder	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^class NameFinder(object):$/;"	c
NameSpace	bundle/jedi-vim/jedi/test/test_utils.py	/^    class NameSpace(object):$/;"	c	class:TestSetupReadline
NamespaceModule	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^            class NamespaceModule(object):$/;"	c	function:Interpreter._simple_complete
NefertitiBrighten	bundle/vim-colorschemes/colors/nefertiti.vim	/^    command! -nargs=? NefertitiBrighten :call <SID>_nefertiti_change_brightness(<q-args>, 1)$/;"	c
NefertitiColors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    command! -nargs=0 NefertitiColors :call <SID>_nefertiti_set_colors()$/;"	c
NefertitiDarken	bundle/vim-colorschemes/colors/nefertiti.vim	/^    command! -nargs=? NefertitiDarken :call <SID>_nefertiti_change_brightness(<q-args>, 0)$/;"	c
NefertitiReset	bundle/vim-colorschemes/colors/nefertiti.vim	/^    command! -nargs=0 NefertitiReset :call <SID>_nefertiti_reset_brightness()$/;"	c
NestedClass	bundle/jedi-vim/jedi/test/completion/usages.py	/^class NestedClass():$/;"	c
NestedImportModule	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^class NestedImportModule(tree.Module):$/;"	c
NewTags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
NextNormalWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
NoMatchParen	bundle/matchparenpp/plugin/matchparen++.vim	/^command! NoMatchParen 3match none | unlet! g:loaded_matchparen | au! matchparen$/;"	c
Node	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Node(BaseNode):$/;"	c
NormalBG	bundle/vim-colorschemes/colors/getfresh.vim	/^let NormalBG      = '#151515'$/;"	v
NormalFG	bundle/vim-colorschemes/colors/getfresh.vim	/^let NormalFG      = '#DDCCBB'$/;"	v
NormalTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
NotCalled	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^class NotCalled():$/;"	c
NotFoundError	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
NotFoundError	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^class NotFoundError(Exception):$/;"	c
NotInStdLib	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^class NotInStdLib(LookupError):$/;"	c
Notifier.AddListener	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, params)$/;"	f
Number	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Number	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Number(Literal):$/;"	c
NumpyDocString	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^    from numpydoc.docscrape import NumpyDocString$/;"	i
OP	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
OPERATOR_KEYWORDS	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^OPERATOR_KEYWORDS = 'and', 'for', 'if', 'else', 'in', 'is', 'lambda', 'not', 'or'$/;"	v
ObjectDoesNotExist	bundle/jedi-vim/jedi/test/completion/thirdparty/django_.py	/^from django.core.exceptions import ObjectDoesNotExist$/;"	i
Open	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenMulti	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f
OpenNoMarks	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Operator	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Operator	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
Operator	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Operator(Leaf):$/;"	c
Orange	bundle/vim-colorschemes/colors/mango.vim	/^    let Orange = "guifg=#ff5f00 guibg=NONE gui=NONE ctermfg=202 ctermbg=NONE cterm=NONE"$/;"	v
Orange	bundle/vim-colorschemes/colors/mango.vim	/^    let Orange = "guifg=#ffaf00 guibg=NONE gui=NONE ctermfg=214 ctermbg=NONE cterm=NONE"$/;"	v
Other	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
OtherFont	bundle/vim-colorschemes/colors/getfresh.vim	/^let OtherFont     = '-*-neep-medium-*-*-*-10-*-*-*-*-*-*-*'$/;"	v
PAPER	bundle/jedi-vim/jedi/docs/Makefile	/^PAPER         =$/;"	m
PAPEROPT_a4	bundle/jedi-vim/jedi/docs/Makefile	/^PAPEROPT_a4     = -D latex_paper_size=a4$/;"	m
PAPEROPT_letter	bundle/jedi-vim/jedi/docs/Makefile	/^PAPEROPT_letter = -D latex_paper_size=letter$/;"	m
Param	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
Param	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Param(BaseNode):$/;"	c
ParamListener	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^class ParamListener(object):$/;"	c
ParseArgs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ParseArgs(beg, end, comment_mode, arglist) "{{{3$/;"	f
ParseError	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^class ParseError(Exception):$/;"	c
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
Parser	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.parser import Parser$/;"	i
Parser	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi.parser import Parser$/;"	i
Parser	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^class Parser(object):$/;"	c
Parser	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi.parser import Parser$/;"	i
Parser	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi.parser import tokenize, Parser$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_new_parser.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from jedi.parser import Parser, load_grammar$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser import Parser, load_grammar, tokenize$/;"	i
Parser	bundle/jedi-vim/jedi/test/test_regression.py	/^from jedi.parser import Parser, load_grammar$/;"	i
ParserCacheItem	bundle/jedi-vim/jedi/jedi/cache.py	/^class ParserCacheItem(object):$/;"	c
ParserCacheItem	bundle/jedi-vim/jedi/test/test_cache.py	/^from jedi.cache import ParserCacheItem, ParserPickling$/;"	i
ParserGenerator	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^class ParserGenerator(object):$/;"	c
ParserNode	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^class ParserNode(object):$/;"	c
ParserPickling	bundle/jedi-vim/jedi/jedi/cache.py	/^ParserPickling = ParserPickling()$/;"	v
ParserPickling	bundle/jedi-vim/jedi/jedi/cache.py	/^class ParserPickling(object):$/;"	c
ParserPickling	bundle/jedi-vim/jedi/test/test_cache.py	/^ParserPickling = ParserPicklingCls()$/;"	v
ParserPickling	bundle/jedi-vim/jedi/test/test_cache.py	/^from jedi.cache import ParserCacheItem, ParserPickling$/;"	i
ParserPicklingCls	bundle/jedi-vim/jedi/test/test_cache.py	/^ParserPicklingCls = type(ParserPickling)$/;"	v
ParserSyntaxError	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^class ParserSyntaxError(object):$/;"	c
Path.AbsolutePathFor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh()$/;"	f
Path.refreshFlags	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags()$/;"	f
Path.rename	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
Peach	bundle/vim-colorschemes/colors/mango.vim	/^    let Peach = "guifg=#ff875f guibg=NONE gui=NONE ctermfg=209 ctermbg=NONE cterm=NONE"$/;"	v
Peach	bundle/vim-colorschemes/colors/mango.vim	/^    let Peach = "guifg=#ffd787 guibg=NONE gui=NONE ctermfg=222 ctermbg=NONE cterm=NONE"$/;"	v
Person	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
PgenParser	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.pgen2.parse import PgenParser$/;"	i
PgenParser	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^class PgenParser(object):$/;"	c
Pink	bundle/vim-colorschemes/colors/mango.vim	/^  let Pink = "guifg=#ff5faf guibg=NONE gui=NONE ctermfg=205 ctermbg=NONE cterm=NONE"$/;"	v
Plugin	bundle/vundle/autoload/vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=* -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	bundle/vundle/autoload/vundle.vim	/^com! -nargs=* -complete=custom,vundle#scripts#complete PluginUpdate PluginInstall! <args>$/;"	c
PositionModifier	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class PositionModifier(object):$/;"	c
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
Printf1	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:Printf1(fmt, expr)$/;"	f
PrivateVar	bundle/jedi-vim/jedi/test/completion/classes.py	/^class PrivateVar():$/;"	c
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ProcessLine(comment_do, match, checkRx, replace)$/;"	f
ProcessPseudoChildren	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
ProgramNode	bundle/jedi-vim/jedi/test/completion/docstring.py	/^class ProgramNode():$/;"	c
ProgramNode2	bundle/jedi-vim/jedi/test/completion/docstring.py	/^class ProgramNode2():$/;"	c
PropClass	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class PropClass():$/;"	c
PrtAdd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f
PrtBS	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f
PrtClear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f
PrtClearCache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f
PrtCurEnd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f
PrtCurLeft	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f
PrtCurRight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f
PrtCurStart	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f
PrtDelete	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f
PrtDeleteEnt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f
PrtDeleteMRU	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f
PrtDeleteWord	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f
PrtExit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f
PrtExpandDir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f
PrtFocusMap	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f
PrtHistory	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f
PrtInsert	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f
PrtSelectJump	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f
PrtSelectMove	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f
PrtSwitcher	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f
PseudoTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
Punctuation	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Purple	bundle/vim-colorschemes/colors/mango.vim	/^  let Purple = "guifg=#af87ff guibg=NONE gui=NONE ctermfg=141 ctermbg=NONE cterm=NONE"$/;"	v
PushBackIterator	bundle/jedi-vim/jedi/jedi/common.py	/^class PushBackIterator(object):$/;"	c
PushBackIterator	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi.common import PushBackIterator$/;"	i
PyInit_init_extension_module	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/module.c	/^PyMODINIT_FUNC PyInit_init_extension_module(void){$/;"	f
Pyimport	bundle/jedi-vim/plugin/jedi.vim	/^command! -nargs=1 -complete=custom,jedi#py_import_completions Pyimport :call jedi#py_import(<q-args>)$/;"	c
Python	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    from itertools import izip_longest as zip_longest  # Python 2$/;"	i
Python	bundle/jedi-vim/jedi_vim.py	/^    from itertools import izip_longest as zip_longest  # Python 2$/;"	i
Python3Method	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^class Python3Method(object):$/;"	c
Python3Method	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method$/;"	i
Python3Method	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
PythonToVimStr	bundle/jedi-vim/jedi_vim.py	/^class PythonToVimStr(unicode):$/;"	c
QtGui	bundle/jedi-vim/jedi/test/completion/thirdparty/PyQt4_.py	/^from PyQt4 import QtGui$/;"	i
QuickHelp	bundle/ack.vim/autoload/ack.vim	/^function! s:QuickHelp() "{{{$/;"	f
QuitIfOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
QuitPreHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook() abort " {{{2$/;"	f
RARROW	bundle/jedi-vim/jedi/jedi/parser/token.py	/^    RARROW = N_TOKENS$/;"	v
REACHABLE	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^REACHABLE = Status(True, 'reachable')$/;"	v
RED	bundle/jedi-vim/jedi/jedi/debug.py	/^        RED = ''$/;"	v	class:Fore
REPLACE_STR	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^REPLACE_STR = r"[bBuU]?[rR]?" + (r"(?:(')[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*(?:'|$)" +$/;"	v
REPLACE_STR	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^REPLACE_STR = re.compile(REPLACE_STR)$/;"	v
RESET	bundle/jedi-vim/jedi/jedi/debug.py	/^        RESET = ''$/;"	v	class:Fore
REST_ROLE_PATTERN	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^REST_ROLE_PATTERN = re.compile(r':[^`]+:`([^`]+)`')$/;"	v
Recursion	bundle/jedi-vim/jedi/test/completion/classes.py	/^def Recursion():$/;"	f
RecursionDetector	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^class RecursionDetector(object):$/;"	c
Red	bundle/vim-colorschemes/colors/mango.vim	/^    let Red = "guifg=#ff0000 guibg=NONE gui=NONE ctermfg=196 ctermbg=NONE cterm=NONE"$/;"	v
Red	bundle/vim-colorschemes/colors/mango.vim	/^    let Red = "guifg=#ff5f5f guibg=NONE gui=NONE ctermfg=203 ctermbg=NONE cterm=NONE"$/;"	v
Refactoring	bundle/jedi-vim/jedi/jedi/refactoring.py	/^class Refactoring(object):$/;"	c
RefactoringCase	bundle/jedi-vim/jedi/test/refactor.py	/^class RefactoringCase(object):$/;"	c
RehighlightBlame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
RemoteComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveCarriageReturn	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
Render	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
RepeatCommentstring	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceInLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
ReportNoAvailableMarks	bundle/vim-signature/plugin/signature/mark.vim	/^function! s:ReportNoAvailableMarks()                                                                              " {{{2$/;"	f
Reset	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f
ResetWidth	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
ReturnStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class ReturnStmt(KeywordStatement):$/;"	c
RevealAccess	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^class RevealAccess(object):$/;"	c
RevisionComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
SID	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
SID	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SID_PREFIX	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:SID_PREFIX()$/;"	f
SPEED	bundle/jedi-vim/jedi/jedi/debug.py	/^SPEED = object()$/;"	v
SPHINXBUILD	bundle/jedi-vim/jedi/docs/Makefile	/^SPHINXBUILD   = sphinx-build$/;"	m
SPHINXOPTS	bundle/jedi-vim/jedi/docs/Makefile	/^SPHINXOPTS    =$/;"	m
STATEMENT_KEYWORDS	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    'return', 'yield', 'pass', 'continue', 'break'$/;"	v
STRING	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,$/;"	i
STRING	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser.token import NAME, OP, NEWLINE, STRING, INDENT$/;"	i
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
Scope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Scope(BaseNode, DocstringMixin):$/;"	c
Scr	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    docstr('import jedi\\njedi.Scr', cleandoc(Script.__doc__))$/;"	i
Script	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
Script	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^class Script(object):$/;"	c
Script	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
Script	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_evaluate/test_representation.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_integration_analysis.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_integration_import.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_integration_keyword.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^from jedi import Script$/;"	i
Script	bundle/jedi-vim/jedi/test/test_regression.py	/^from jedi import Script$/;"	i
SearchForPair	bundle/vim-web-indent/indent/javascript.vim	/^function! s:SearchForPair(lnum, beg, end)$/;"	f
SearchWithDispatch	bundle/ack.vim/autoload/ack.vim	/^function! s:SearchWithDispatch(grepprg, grepargs, grepformat) "{{{$/;"	f
SearchWithGrep	bundle/ack.vim/autoload/ack.vim	/^function! s:SearchWithGrep(grepcmd, grepprg, grepargs, grepformat) "{{{$/;"	f
SearchingFilepaths	bundle/ack.vim/autoload/ack.vim	/^function! s:SearchingFilepaths() "{{{$/;"	f
SectionSpec	bundle/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
SelfVars	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class SelfVars():$/;"	c
SetCompilerType	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetConcealOption	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:SetConcealOption()$/;"	f
SetDefTxt	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetLucius	bundle/vim-colorschemes/colors/lucius.vim	/^function! SetLucius(style, contrast, contrast_bg)$/;"	f
SetOption	bundle/vim-colorschemes/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetSQLinoreabbrev	bundle/vim-comfortable/ftplugin/sql/AutoSQLUpperCase.vim	/^fun! s:SetSQLinoreabbrev(SQLList) abort$/;"	f
SetStatusLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
SetWD	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f
SetWhitespaceMode	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:SetWhitespaceMode(cdef) "{{{3$/;"	f
SetattrCls	bundle/jedi-vim/jedi/test/static_analysis/attribute_warnings.py	/^class SetattrCls():$/;"	c
Setup	bundle/indentLine/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
Setup	bundle/vim-gitgutter/test/helper.vim	/^function! Setup()$/;"	f
SetupListeners	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:SetupListeners()$/;"	f
SetupListeners	bundle/vim-webdevicons/nerdtree_plugin/webdevicons.vim	/^function! SetupListeners()$/;"	f
ShowInPreviewWin	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShrinkIfExpanded	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
SignatureListMarkers	bundle/vim-signature/plugin/signature.vim	/^command! -nargs=? SignatureListMarkers call signature#marker#List(<args>)$/;"	c
SignatureListMarks	bundle/vim-signature/plugin/signature.vim	/^command! -nargs=0 SignatureListMarks   call signature#mark#List('buf_curr')$/;"	c
SignatureRefresh	bundle/vim-signature/plugin/signature.vim	/^command! -nargs=0 SignatureRefresh     call signature#sign#Refresh('force')$/;"	c
SignatureToggleSigns	bundle/vim-signature/plugin/signature.vim	/^command! -nargs=0 SignatureToggleSigns call signature#Toggle()$/;"	c
Silver	bundle/vim-colorschemes/colors/mango.vim	/^  let Silver = "guifg=#8a8a8a guibg=NONE gui=NONE ctermfg=245 ctermbg=NONE cterm=NONE"$/;"	v
Slice	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class Slice(object):$/;"	c
SolarizedHiTrail	bundle/vim-colorschemes/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	bundle/vim-colorschemes/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	bundle/vim-colorschemes/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	bundle/vim-colorschemes/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	bundle/vim-colorschemes/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Something	bundle/jedi-vim/jedi/test/completion/functions.py	/^class Something():$/;"	c
SortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
SourceFinder	bundle/jedi-vim/jedi/sith.py	/^class SourceFinder(object):$/;"	c
SpecInputs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f
SplitBG	bundle/vim-colorschemes/colors/getfresh.vim	/^let SplitBG       = SplitFG$/;"	v
SplitClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
SplitFG	bundle/vim-colorschemes/colors/getfresh.vim	/^let SplitFG       = '#1B1B1B'$/;"	v
SplitPattern	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StartColRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartColRx(comment_mode, col, ...)$/;"	f
StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
StartLineRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:StartPosRx(comment_mode, line, col)$/;"	f
StaticAnalysisCase	bundle/jedi-vim/jedi/test/conftest.py	/^class StaticAnalysisCase(object):$/;"	c
Status	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^class Status(object):$/;"	c
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StatusBG	bundle/vim-colorschemes/colors/getfresh.vim	/^let StatusBG      = DarkGray$/;"	v
StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
Strdisplaywidth	bundle/tcomment_vim/autoload/tcomment.vim	/^    function! s:Strdisplaywidth(...) "{{{3$/;"	f
Strdisplaywidth	bundle/tcomment_vim/autoload/tcomment.vim	/^    function! s:Strdisplaywidth(string, ...) "{{{3$/;"	f
String	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
String	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class String(Literal):$/;"	c
StringIO	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from io import StringIO$/;"	i
StringIO	bundle/jedi-vim/jedi/test/run.py	/^from io import StringIO$/;"	i
StringIO	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from io import StringIO$/;"	i
Style	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^from pygments.style import Style$/;"	i
SubClass	bundle/jedi-vim/jedi/test/completion/classes.py	/^class SubClass(SuperClass):$/;"	c
Super	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Super(object):$/;"	c
Super	bundle/jedi-vim/jedi/test/completion/usages.py	/^class Super(object):$/;"	c
SuperClass	bundle/jedi-vim/jedi/test/completion/classes.py	/^class SuperClass(Base):$/;"	c
SuperInstance	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^class SuperInstance(er.Instance):$/;"	c
SynStack	bundle/vim-colorschemes/colors/detailed.vim	/^fun! <SID>SynStack()$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args) abort " {{{2$/;"	f
SyntasticChecker._getOpt	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getExec	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.log	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec() dict " {{{2$/;"	f
SyntasticChecker.wantSort	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^    command! SyntasticJavacEditConfig call s:EditConfig()$/;"	c
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current() abort " {{{2$/;"	f
SyntasticLoclist.decorate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist() abort " {{{2$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking() abort " {{{2$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_snowcrash_GetLocList	bundle/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^function! SyntaxCheckers_apiblueprint_snowcrash_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	bundle/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	bundle/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	bundle/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	bundle/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	bundle/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	bundle/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	bundle/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
Syntax_extensions	bundle/vim-colorschemes/colors/lettuce.vim	/^augroup Syntax_extensions$/;"	a
TComment	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	bundle/tcomment_vim/plugin/tcomment.vim	/^command! -bar -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TEST_ASSIGNMENTS	bundle/jedi-vim/jedi/test/run.py	/^TEST_ASSIGNMENTS = 2$/;"	v
TEST_COMPLETIONS	bundle/jedi-vim/jedi/test/run.py	/^TEST_COMPLETIONS = 0$/;"	v
TEST_DEFINITIONS	bundle/jedi-vim/jedi/test/run.py	/^TEST_DEFINITIONS = 1$/;"	v
TEST_DIR	bundle/jedi-vim/conftest.py	/^TEST_DIR = 'test'$/;"	v
TEST_USAGES	bundle/jedi-vim/jedi/test/run.py	/^TEST_USAGES = 3$/;"	v
Tabula	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula()$/;"	f
Tabula_1	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_1()$/;"	f
Tabula_2	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_2()$/;"	f
Tabula_3	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_3()$/;"	f
Tabula_4	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_4()$/;"	f
Tabula_5	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_5()$/;"	f
Tabula_6	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_6()$/;"	f
Tabula_7	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_7()$/;"	f
Tabula_8	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_8()$/;"	f
Tabula_9	bundle/vim-colorschemes/colors/tabula.vim	/^function! Tabula_9()$/;"	f
TagList_IsValid	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	bundle/vim-gotosymbol/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
Tagbar	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TarFile	bundle/jedi-vim/jedi/test/static_analysis/descriptors.py	/^class TarFile():$/;"	c
Test	bundle/jedi-vim/jedi/test/completion/docstring.py	/^class Test(object):$/;"	c
Test	bundle/jedi-vim/jedi/test/completion/isinstance.py	/^class Test():$/;"	c
Test	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^class Test(object):$/;"	c
TestCallAndName	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^class TestCallAndName():$/;"	c
TestCallSignatures	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^class TestCallSignatures(TestCase):$/;"	c
TestCase	bundle/jedi-vim/jedi/sith.py	/^class TestCase(object):$/;"	c
TestCase	bundle/jedi-vim/jedi/test/helpers.py	/^TestCase = unittest.TestCase$/;"	v
TestCase	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^from ..helpers import TestCase$/;"	i
TestCase	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from ..helpers import TestCase$/;"	i
TestCase	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^from ..helpers import TestCase$/;"	i
TestCase	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^from ..helpers import TestCase$/;"	i
TestCase	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^from ..helpers import TestCase$/;"	i
TestCase	bundle/jedi-vim/jedi/test/test_evaluate/absolute_import/unittest.py	/^class TestCase(Assertions):$/;"	c
TestCase	bundle/jedi-vim/jedi/test/test_regression.py	/^from .helpers import TestCase, cwd_at$/;"	i
TestCase	bundle/jedi-vim/jedi/test/test_speed.py	/^from .helpers import TestCase, cwd_at$/;"	i
TestClass	bundle/jedi-vim/jedi/test/completion/classes.py	/^class TestClass(object):$/;"	c
TestClass	bundle/jedi-vim/jedi/test/completion/usages.py	/^class TestClass(Super):$/;"	c
TestClassVar	bundle/jedi-vim/jedi/test/completion/usages.py	/^class TestClassVar(object):$/;"	c
TestDefinedNames	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^class TestDefinedNames(TestCase):$/;"	c
TestDocstring	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^class TestDocstring(unittest.TestCase):$/;"	c
TestFullDefinedName	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^class TestFullDefinedName(TestCase):$/;"	c
TestFullNameWithCompletions	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^class TestFullNameWithCompletions(MixinTestFullName, TestCase):$/;"	c
TestFullNameWithGotoDefinitions	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^class TestFullNameWithGotoDefinitions(MixinTestFullName, TestCase):$/;"	c
TestGotoAssignments	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^class TestGotoAssignments(TestCase):$/;"	c
TestImports	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^class TestImports():$/;"	c
TestInstanceVar	bundle/jedi-vim/jedi/test/completion/usages.py	/^class TestInstanceVar():$/;"	c
TestInterpreterAPI	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^class TestInterpreterAPI(TestCase):$/;"	c
TestIsDefinition	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^class TestIsDefinition(TestCase):$/;"	c
TestLoadLibs	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^function! TestLoadLibs()$/;"	f
TestMethods	bundle/jedi-vim/jedi/test/completion/usages.py	/^class TestMethods(object):$/;"	c
TestParams	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^class TestParams(TestCase):$/;"	c
TestParent	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^class TestParent(TestCase):$/;"	c
TestProperty	bundle/jedi-vim/jedi/test/completion/usages.py	/^class TestProperty:$/;"	c
TestRegression	bundle/jedi-vim/jedi/test/test_regression.py	/^class TestRegression(TestCase):$/;"	c
TestSetupReadline	bundle/jedi-vim/jedi/test/test_utils.py	/^class TestSetupReadline(unittest.TestCase):$/;"	c
TestSpeed	bundle/jedi-vim/jedi/test/test_speed.py	/^class TestSpeed(TestCase):$/;"	c
TestSubscopes	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^class TestSubscopes():$/;"	c
TestSuper	bundle/jedi-vim/jedi/test/completion/classes.py	/^class TestSuper(Super):$/;"	c
TestX	bundle/jedi-vim/jedi/test/completion/classes.py	/^class TestX(object):$/;"	c
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Tlist	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	bundle/vim-gotosymbol/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	bundle/vim-gotosymbol/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
ToggleAutoclose	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleByFname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f
ToggleFocus	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleKeyLoop	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f
ToggleMRURelative	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f
ToggleRegex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f
ToggleSemicolonHighlighting	bundle/vim-colorschemes/colors/midnight.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	bundle/vim-colorschemes/colors/midnight2.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	bundle/vim-colorschemes/colors/sean.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	bundle/vim-colorschemes/colors/tomatosoup.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSemicolonHighlighting	bundle/vim-colorschemes/colors/vj.vim	/^function! ToggleSemicolonHighlighting()$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleType	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
TokenTest	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^class TokenTest(unittest.TestCase):$/;"	c
TransformUserTypeDef	bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TreatText	bundle/matchparenpp/plugin/matchparen++.vim	/^function! s:TreatText(linenum) "{{{$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
True	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
TryStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class TryStmt(Flow):$/;"	c
TypeInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.createKinddict	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
UI.IndentWid	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.render	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.toggleIgnoreFilter	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNREACHABLE	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^UNREACHABLE = Status(False, 'unreachable')$/;"	v
UNSURE	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^UNSURE = Status(None, 'unsure')$/;"	v
UncaughtAttributeError	bundle/jedi-vim/jedi/jedi/common.py	/^class UncaughtAttributeError(Exception):$/;"	c
Unite	bundle/unite.vim/plugin/unite.vim	/^      \\ Unite$/;"	c
UniteBookmarkAdd	bundle/unite.vim/plugin/unite/bookmark.vim	/^command! -nargs=? -complete=file UniteBookmarkAdd$/;"	c
UniteClose	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteClose call unite#view#_close(<q-args>)$/;"	c
UniteFirst	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteFirst call unite#start#_pos(<q-args>, 'first', 1)$/;"	c
UniteLast	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteLast call unite#start#_pos(<q-args>, 'last', 1)$/;"	c
UniteNext	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteNext call unite#start#_pos(<q-args>, 'next', expand('<count>'))$/;"	c
UnitePrevious	bundle/unite.vim/plugin/unite.vim	/^      \\ UnitePrevious call unite#start#_pos(<q-args>, 'previous', expand('<count>'))$/;"	c
UniteResume	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteResume call s:call_unite_resume(<q-args>)$/;"	c
UniteWithBufferDir	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithBufferDir$/;"	c
UniteWithCurrentDir	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithCurrentDir$/;"	c
UniteWithCursorWord	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithCursorWord call s:call_unite_cursor_word(<q-args>)$/;"	c
UniteWithInput	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithInput call s:call_unite_input(<q-args>)$/;"	c
UniteWithInputDirectory	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithInputDirectory call s:call_unite_input_directory(<q-args>)$/;"	c
UniteWithProjectDir	bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithProjectDir$/;"	c
UnreplaceInLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
Update	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, checker_names) abort " {{{2$/;"	f
UserCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f
UserContext	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.parser.user_context import UserContext, UserContextParser$/;"	i
UserContext	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^class UserContext(object):$/;"	c
UserContext	bundle/jedi-vim/jedi/jedi/utils.py	/^from jedi.parser.user_context import UserContext$/;"	i
UserContextParser	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.parser.user_context import UserContext, UserContextParser$/;"	i
UserContextParser	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^class UserContextParser(object):$/;"	c
UserContextParser	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from jedi.parser.user_context import UserContextParser$/;"	i
UsingListMappings	bundle/ack.vim/autoload/ack.vim	/^function! s:UsingListMappings() "{{{$/;"	f
UsingLocList	bundle/ack.vim/autoload/ack.vim	/^function! s:UsingLocList() "{{{$/;"	f
Util1	bundle/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	bundle/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	bundle/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
V	bundle/jedi-vim/jedi/test/completion/classes.py	/^class V:$/;"	c
VSPEC_FOLDER	bundle/jedi-vim/conftest.py	/^VSPEC_FOLDER = os.path.join(CACHE_FOLDER, 'vim-vspec-1.4.1')$/;"	v
VSPEC_RUNNER	bundle/jedi-vim/conftest.py	/^VSPEC_RUNNER = os.path.join(VSPEC_FOLDER, 'bin\/vspec')$/;"	v
VSPEC_URL	bundle/jedi-vim/conftest.py	/^VSPEC_URL = 'https:\/\/github.com\/kana\/vim-vspec\/archive\/1.4.1.zip'$/;"	v
VimError	bundle/jedi-vim/jedi_vim.py	/^class VimError(Exception):$/;"	c
VimFiler	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFiler$/;"	c
VimFilerBufferDir	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerBufferDir$/;"	c
VimFilerClose	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=1 VimFilerClose call vimfiler#mappings#close(<q-args>)$/;"	c
VimFilerCreate	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerCreate$/;"	c
VimFilerCurrentDir	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerCurrentDir$/;"	c
VimFilerDouble	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerDouble$/;"	c
VimFilerEdit	bundle/vimfiler.vim/plugin/vimfiler.vim	/^        \\ VimFilerEdit  edit<bang> <args>$/;"	c
VimFilerExplorer	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerExplorer$/;"	c
VimFilerRead	bundle/vimfiler.vim/plugin/vimfiler.vim	/^        \\ VimFilerRead  read<bang> <args>$/;"	c
VimFilerSimple	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerSimple$/;"	c
VimFilerSource	bundle/vimfiler.vim/plugin/vimfiler.vim	/^        \\ VimFilerSource  source<bang> <args>$/;"	c
VimFilerSplit	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerSplit$/;"	c
VimFilerTab	bundle/vimfiler.vim/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerTab$/;"	c
VimFilerWrite	bundle/vimfiler.vim/plugin/vimfiler.vim	/^        \\ VimFilerWrite  <line1>,<line2>write<bang> <args>$/;"	c
VundleClean	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	bundle/vundle/autoload/vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	bundle/vundle/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	bundle/vundle/autoload/vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
VundleUpdate	bundle/vundle/autoload/vundle.vim	/^com! -nargs=*       -complete=custom,vundle#scripts#complete VundleUpdate  PluginInstall! <args>$/;"	c
WARNING	bundle/jedi-vim/jedi/jedi/debug.py	/^WARNING = object()$/;"	v
Warn	bundle/ack.vim/autoload/ack.vim	/^function! s:Warn(msg) "{{{$/;"	f
Warn	bundle/vim-comfortable/plugin/bclose.vim	/^function! s:Warn(msg)$/;"	f
Warning	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^class Warning(Error):$/;"	c
Warning	bundle/jedi-vim/jedi/test/conftest.py	/^from jedi.evaluate.analysis import Warning$/;"	i
WebDevIconsGetFileTypeSymbol	bundle/vim-webdevicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...)$/;"	f
WhileStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class WhileStmt(Flow):$/;"	c
White	bundle/vim-colorschemes/colors/getfresh.vim	/^let White         = '#E7E8E9'$/;"	v
White	bundle/vim-colorschemes/colors/mango.vim	/^  let White = "guifg=#eeeeee guibg=NONE gui=NONE ctermfg=255 ctermbg=NONE cterm=NONE"$/;"	v
Whitespace	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^     Number, Operator, Generic, Whitespace, Punctuation, Other, Literal$/;"	i
Whitespace	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class Whitespace(LeafWithNewLines):$/;"	c
WithStmt	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class WithStmt(Flow):$/;"	c
WithoutMethod	bundle/jedi-vim/jedi/test/completion/classes.py	/^class WithoutMethod():$/;"	c
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Wrapper	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^class Wrapper(tree.Base):$/;"	c
Wrapper	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Wrapper():$/;"	c
Wrapper2	bundle/jedi-vim/jedi/test/completion/classes.py	/^class Wrapper2():$/;"	c
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	bundle/jedi-vim/jedi/test/completion/decorators.py	/^class X():$/;"	c
X	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^class X():$/;"	c
X	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/bluedrake.vim	/^    function! <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/bocau.vim	/^fun! s:X(a)$/;"	f
X	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/inkpot.vim	/^fun! <SID>X(a)$/;"	f
X	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
X	bundle/vim-colorschemes/colors/jiks.vim	/^fun! s:X(a)$/;"	f
X	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/pf_earth.vim	/^fun! <SID>X(a)$/;"	f
X	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/vividchalk.vim	/^fun! s:X(a)$/;"	f
X	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
X	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>X(group, fg, bg, attr)$/;"	f
YELLOW	bundle/jedi-vim/jedi/jedi/debug.py	/^        YELLOW = ''$/;"	v	class:Fore
YieldExpr	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^class YieldExpr(BaseNode):$/;"	c
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
[c	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
]c	bundle/vim-gitgutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
_FLOWS_NEED_COLON	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    _FLOWS_NEED_COLON = 'else', 'try', 'except', 'finally'$/;"	v	class:FastParser
_FLOWS_NEED_SPACE	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    _FLOWS_NEED_SPACE = 'if', 'elif', 'while', 'with', 'except', 'for'$/;"	v	class:FastParser
_FakeArray	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^class _FakeArray(Array):$/;"	c
_Help	bundle/jedi-vim/jedi/jedi/api/classes.py	/^class _Help(object):$/;"	c
_Param	bundle/jedi-vim/jedi/jedi/api/classes.py	/^class _Param(Definition):$/;"	c
_RecursionNode	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^class _RecursionNode(object):$/;"	c
_StrangeSlice	bundle/jedi-vim/jedi/test/completion/arrays.py	/^class _StrangeSlice():$/;"	c
__AUTHOR_EMAIL__	bundle/jedi-vim/jedi/setup.py	/^__AUTHOR_EMAIL__ = 'davidhalter88@gmail.com'$/;"	v
__AUTHOR__	bundle/jedi-vim/jedi/setup.py	/^__AUTHOR__ = 'David Halter'$/;"	v
__and__	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^    def __and__(self, other):$/;"	m	class:Status	file:
__call__	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:CachedMetaClass	file:
__call__	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def __call__(self, execution):$/;"	m	class:ExecutionRecursionDetector	file:
__call__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __call__(self, grammar, source, module_path=None):$/;"	m	class:CachedFastParser	file:
__call__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __call__(self):$/;"	m	class:CallClass	file:
__call__	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:Decorator	file:
__call__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:Memoize	file:
__dir__	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^                def __dir__(_):$/;"	m	class:Interpreter._simple_complete.NamespaceModule	file:
__eq__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __eq__(self, other):$/;"	m	class:Definition	file:
__eq__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __eq__(self, other):$/;"	m	class:Error	file:
__eq__	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def __eq__(self, other):$/;"	m	class:_RecursionNode	file:
__eq__	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def __eq__(self, other):$/;"	m	class:DFAState	file:
__eq__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __eq__(self, other):$/;"	m	class:Keyword	file:
__eq__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __eq__(self, other):$/;"	m	class:Operator	file:
__get__	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    def __get__(self, obj, objtype):$/;"	m	class:Python3Method	file:
__get__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __get__(self, instance, owner):$/;"	m	class:CheckAttribute	file:
__get__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __get__(self, obj, objtype):$/;"	m	class:Memoize	file:
__get__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __get__(self, obj, objtype):$/;"	m	class:RevealAccess	file:
__getattr__	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^                def __getattr__(_, name):$/;"	m	class:Interpreter._simple_complete.NamespaceModule	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def __getattr__(self, name):$/;"	m	class:NestedImportModule	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __getattr__(self, name):$/;"	m	class:Array	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __getattr__(self, name):$/;"	m	class:Generator	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __getattr__(self, name):$/;"	m	class:GeneratorMethod	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def __getattr__(self, name):$/;"	m	class:ExecutedParam	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:Class	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:Function	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:FunctionExecution	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:Instance	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:InstanceElement	file:
__getattr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getattr__(self, name):$/;"	m	class:ModuleWrapper	file:
__getattr__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __getattr__(self, name):$/;"	m	class:GetattrArray	file:
__getattr__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __getattr__(self, name):$/;"	m	class:Wrapper	file:
__getattr__	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def __getattr__(self, name):$/;"	m	class:NestedClass	file:
__getattr__	bundle/jedi-vim/jedi/test/static_analysis/attribute_warnings.py	/^    def __getattr__(self, name):$/;"	m	class:Cls	file:
__getattribute__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __getattribute__(self, name):$/;"	m	class:Wrapper2	file:
__getitem__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __getitem__(self, name):$/;"	m	class:LazyNamesDict	file:
__getitem__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getitem__(self, index):$/;"	m	class:InstanceElement	file:
__getitem__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __getitem__(self, name):$/;"	m	class:LazyInstanceDict	file:
__getitem__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __getitem__(self, value):$/;"	m	class:MergedNamesDict	file:
__getitem__	bundle/jedi-vim/jedi/test/completion/arrays.py	/^    def __getitem__(self, index):$/;"	m	class:GetItem	file:
__getitem__	bundle/jedi-vim/jedi/test/completion/arrays.py	/^    def __getitem__(self, index):$/;"	m	class:GetItemWithList	file:
__getitem__	bundle/jedi-vim/jedi/test/completion/arrays.py	/^    def __getitem__(self, slice):$/;"	m	class:_StrangeSlice	file:
__getitem__	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^            def __getitem__(self, index):$/;"	m	class:TestInterpreterAPI.test_getitem_side_effects.Foo	file:
__hash__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __hash__(self):$/;"	m	class:Definition	file:
__hash__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __hash__(self):$/;"	m	class:Error	file:
__hash__	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    __hash__ = None  # For Py3 compatibility.$/;"	v	class:DFAState
__hash__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __hash__(self):$/;"	m	class:Keyword	file:
__hash__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __hash__(self):$/;"	m	class:Operator	file:
__init__	bundle/jedi-vim/conftest.py	/^    def __init__(self, path):$/;"	m	class:IntegrationTestFile
__init__	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    def __init__(self, func):$/;"	m	class:Python3Method
__init__	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def __init__(self, source, namespaces, **kwds):$/;"	m	class:Interpreter
__init__	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def __init__(self, source=None, line=None, column=None, path=None,$/;"	m	class:Script
__init__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __init__(self, definition):$/;"	m	class:_Help
__init__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, definition):$/;"	m	class:Definition
__init__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, executable_name, call_stmt, index, key_name):$/;"	m	class:CallSignature
__init__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, name):$/;"	m	class:BaseDefinition
__init__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __init__(self, evaluator, name, needs_dot, like_name_length):$/;"	m	class:Completion
__init__	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^    def __init__(self, evaluator, module, name, value):$/;"	m	class:LazyName
__init__	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    def __init__(self, name, pos):$/;"	m	class:Keyword
__init__	bundle/jedi-vim/jedi/jedi/cache.py	/^    def __init__(self):$/;"	m	class:ParserPickling
__init__	bundle/jedi-vim/jedi/jedi/cache.py	/^    def __init__(self, parser, change_time=None):$/;"	m	class:ParserCacheItem
__init__	bundle/jedi-vim/jedi/jedi/common.py	/^    def __init__(self, iterator):$/;"	m	class:PushBackIterator
__init__	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def __init__(self, grammar):$/;"	m	class:Evaluator
__init__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __init__(self, name, module_path, start_pos, message=None):$/;"	m	class:Error
__init__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, compiled_obj, is_instance):$/;"	m	class:LazyNamesDict
__init__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, func):$/;"	m	class:CheckAttribute
__init__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, obj, name):$/;"	m	class:CompiledName
__init__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __init__(self, obj, parent=None):$/;"	m	class:CompiledObject
__init__	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^    def __init__(self):$/;"	m	class:ParamListener
__init__	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def __init__(self, evaluator, scope, name_str, position=None):$/;"	m	class:NameFinder
__init__	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^    def __init__(self, value, name):$/;"	m	class:Status
__init__	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def __init__(self, name, parent, level=0):$/;"	m	class:FakeImport
__init__	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def __init__(self, name, parent_callback, is_definition=None):$/;"	m	class:LazyName
__init__	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def __init__(self, name_str, parent=None, start_pos=(0, 0), is_definition=None):$/;"	m	class:FakeName
__init__	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def __init__(self, evaluator, import_path, module, level=0):$/;"	m	class:Importer
__init__	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def __init__(self, evaluator, name):$/;"	m	class:ImportWrapper
__init__	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def __init__(self, module, nested_import):$/;"	m	class:NestedImportModule
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, arrays):$/;"	m	class:MergedArray
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, atom):$/;"	m	class:Array
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, atom):$/;"	m	class:Comprehension
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, container, type):$/;"	m	class:_FakeArray
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, dct):$/;"	m	class:FakeDict
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, func, var_args):$/;"	m	class:Generator
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, instance):$/;"	m	class:ArrayInstance
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, sequence_values, type):$/;"	m	class:FakeSequence
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, start, stop, step):$/;"	m	class:Slice
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, evaluator, testlist):$/;"	m	class:ImplicitTuple
__init__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __init__(self, generator, builtin_func):$/;"	m	class:GeneratorMethod
__init__	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def __init__(self, evaluator, argument_node, trailer=None):$/;"	m	class:Arguments
__init__	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def __init__(self, original_param, var_args, values):$/;"	m	class:ExecutedParam
__init__	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def __init__(self):$/;"	m	class:ExecutionRecursionDetector
__init__	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def __init__(self):$/;"	m	class:RecursionDetector
__init__	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def __init__(self, stmt, parent):$/;"	m	class:_RecursionNode
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base):$/;"	m	class:Class
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base, *args, **kwargs):$/;"	m	class:FunctionExecution
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base, var_args, is_generated=False):$/;"	m	class:Instance
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, base, var_args=()):$/;"	m	class:Executed
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, func, is_decorated=False):$/;"	m	class:Function
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, instance, dct):$/;"	m	class:LazyInstanceDict
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, instance, var, is_class_var):$/;"	m	class:InstanceElement
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, evaluator, module):$/;"	m	class:ModuleWrapper
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, name):$/;"	m	class:GlobalName
__init__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __init__(self, origin_name, parent):$/;"	m	class:InstanceName
__init__	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^    def __init__(self, evaluator, cls):$/;"	m	class:SuperInstance
__init__	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def __init__(self, grammar, source, module_path=None, tokenizer=None):$/;"	m	class:Parser
__init__	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def __init__(self, message, position):$/;"	m	class:ParserSyntaxError
__init__	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def __init__(self, stack, next_token, position_modifier, next_start_pos):$/;"	m	class:ErrorStatement
__init__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __init__(self, dicts):$/;"	m	class:MergedNamesDict
__init__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __init__(self, fast_module, parser, source):$/;"	m	class:ParserNode
__init__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __init__(self, grammar, source, module_path=None):$/;"	m	class:FastParser
__init__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __init__(self, module_path):$/;"	m	class:FastModule
__init__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __init__(self, source):$/;"	m	class:FastTokenizer
__init__	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^    def __init__(self):$/;"	m	class:Grammar
__init__	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def __init__(self, grammar, convert_node, convert_leaf, error_recovery):$/;"	m	class:PgenParser
__init__	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def __init__(self, msg, type, value, start_pos):$/;"	m	class:ParseError
__init__	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def __init__(self):$/;"	m	class:NFAState
__init__	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def __init__(self, filename, stream=None):$/;"	m	class:ParserGenerator
__init__	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def __init__(self, nfaset, final):$/;"	m	class:DFAState
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self):$/;"	m	class:PositionModifier
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:BaseNode
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Class
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Function
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Lambda
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Module
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children):$/;"	m	class:Scope
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, children, parent):$/;"	m	class:Param
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, position_modifier, value, start_pos, prefix=''):$/;"	m	class:Leaf
__init__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __init__(self, type, children):$/;"	m	class:Node
__init__	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def __init__(self, grammar, source, path, position, user_context,$/;"	m	class:UserContextParser
__init__	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def __init__(self, source, position):$/;"	m	class:UserContext
__init__	bundle/jedi-vim/jedi/jedi/refactoring.py	/^    def __init__(self, change_dct):$/;"	m	class:Refactoring
__init__	bundle/jedi-vim/jedi/sith.py	/^    def __init__(self, operation, path, line, column, traceback=None):$/;"	m	class:TestCase
__init__	bundle/jedi-vim/jedi/test/completion/arrays.py	/^    def __init__(self):$/;"	m	class:C
__init__	bundle/jedi-vim/jedi/test/completion/arrays.py	/^    def __init__(self, el):$/;"	m	class:GetItem
__init__	bundle/jedi-vim/jedi/test/completion/basic.py	/^    def __init__(self):$/;"	m	class:A
__init__	bundle/jedi-vim/jedi/test/completion/basic.py	/^    def __init__(self, my_attr):$/;"	m	class:MyException
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:A
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:PrivateVar
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:SubClass
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:SuperClass
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self):$/;"	m	class:WithoutMethod
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self, a):$/;"	m	class:V
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self, obj):$/;"	m	class:Wrapper
__init__	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def __init__(self2, first_param, second_param, third=1.0):$/;"	m	class:TestClass
__init__	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def __init__(self):$/;"	m	class:Base
__init__	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def __init__(self):$/;"	m	class:MethodDecorators
__init__	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def __init__(self):$/;"	m	class:SelfVars
__init__	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def __init__(self, func):$/;"	m	class:Decorator
__init__	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def __init__(self, func):$/;"	m	class:DecoratorWithoutCall
__init__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __init__(self):$/;"	m	class:C
__init__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __init__(self, a):$/;"	m	class:E
__init__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __init__(self, a):$/;"	m	class:PropClass
__init__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __init__(self, func):$/;"	m	class:Memoize
__init__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __init__(self, initval=None, name='var'):$/;"	m	class:RevealAccess
__init__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __init__(self, x):$/;"	m	class:MemoizeTest
__init__	bundle/jedi-vim/jedi/test/completion/docstring.py	/^    def __init__(self):$/;"	m	class:Test
__init__	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^    def __init__(self, a):$/;"	m	class:A
__init__	bundle/jedi-vim/jedi/test/completion/generators.py	/^    def __init__(self, low, high):$/;"	m	class:Counter
__init__	bundle/jedi-vim/jedi/test/completion/isinstance.py	/^    def __init__(self, testing):$/;"	m	class:Test
__init__	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^    def __init__(self, foo=1.0):$/;"	m	class:C
__init__	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^    def __init__(self, pred=lambda a, b: a):$/;"	m	class:Test
__init__	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    def __init__(self):$/;"	m	class:A
__init__	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    def __init__(self, a):$/;"	m	class:a
__init__	bundle/jedi-vim/jedi/test/conftest.py	/^    def __init__(self, path):$/;"	m	class:StaticAnalysisCase
__init__	bundle/jedi-vim/jedi/test/refactor.py	/^    def __init__(self, name, source, line_nr, index, path,$/;"	m	class:RefactoringCase
__init__	bundle/jedi-vim/jedi/test/run.py	/^    def __init__(self, test_type, correct, line_nr, column, start, line,$/;"	m	class:IntegrationTestCase
__init__	bundle/jedi-vim/jedi/test/static_analysis/arguments.py	/^    def __init__(self, foo):$/;"	m	class:Instance
__init__	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    def __init__(self, input):$/;"	m	class:Cls
__init__	bundle/jedi-vim/jedi/test/static_analysis/attribute_warnings.py	/^    def __init__(self, dct):$/;"	m	class:SetattrCls
__init__	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^            def __init__(self, *args):$/;"	m	class:test_split_parts.splits.Mock
__init__	bundle/jedi-vim/jedi/test/test_utils.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:TestSetupReadline
__init__	bundle/jedi-vim/jedi_vim.py	/^    def __init__(self, message, throwpoint, executing):$/;"	m	class:VimError
__instancecheck__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __instancecheck__(self, other):$/;"	m	class:IsScopeMeta	file:
__iter__	bundle/jedi-vim/jedi/jedi/common.py	/^    def __iter__(self):$/;"	m	class:PushBackIterator	file:
__iter__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __iter__(self):$/;"	m	class:LazyNamesDict	file:
__iter__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __iter__(self):$/;"	m	class:Array	file:
__iter__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __iter__(self):$/;"	m	class:MergedArray	file:
__iter__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __iter__(self):$/;"	m	class:InstanceElement	file:
__iter__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __iter__(self):$/;"	m	class:FastTokenizer	file:
__iter__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __iter__(self):$/;"	m	class:MergedNamesDict	file:
__iter__	bundle/jedi-vim/jedi/test/completion/generators.py	/^    def __iter__(self):$/;"	m	class:Counter	file:
__iter__	bundle/jedi-vim/jedi/test/completion/generators.py	/^    def __iter__(self):$/;"	m	class:Get	file:
__jedi_version__	bundle/jedi-vim/jedi/jedi/api/replstartup.py	/^from jedi import __version__ as __jedi_version__$/;"	i
__len__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __len__(self):$/;"	m	class:MergedArray	file:
__main__	bundle/jedi-vim/jedi/jedi/utils.py	/^import __main__$/;"	i
__ne__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __ne__(self, other):$/;"	m	class:Definition	file:
__ne__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __ne__(self, other):$/;"	m	class:Error	file:
__ne__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __ne__(self, other):$/;"	m	class:Keyword	file:
__ne__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __ne__(self, other):$/;"	m	class:Operator	file:
__new__	bundle/jedi-vim/jedi_vim.py	/^    def __new__(cls, obj, encoding='UTF-8'):$/;"	m	class:PythonToVimStr	file:
__next__	bundle/jedi-vim/jedi/jedi/common.py	/^    def __next__(self):$/;"	m	class:PushBackIterator	file:
__next__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __next__(self):$/;"	m	class:FastTokenizer	file:
__next__	bundle/jedi-vim/jedi/test/completion/generators.py	/^    def __next__(self):$/;"	m	class:Counter	file:
__path__	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^    __path__ = pkgutil.extend_path(__path__, __name__)$/;"	v
__repr__	bundle/jedi-vim/conftest.py	/^    def __repr__(self):$/;"	m	class:IntegrationTestFile	file:
__repr__	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def __repr__(self):$/;"	m	class:Script	file:
__repr__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __repr__(self):$/;"	m	class:BaseDefinition	file:
__repr__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __repr__(self):$/;"	m	class:CallSignature	file:
__repr__	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def __repr__(self):$/;"	m	class:Completion	file:
__repr__	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    def __repr__(self):$/;"	m	class:Keyword	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __repr__(self):$/;"	m	class:Error	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __repr__(self):$/;"	m	class:CompiledName	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def __repr__(self):$/;"	m	class:CompiledObject	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^    def __repr__(self):$/;"	m	class:Status	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def __repr__(self):$/;"	m	class:NestedImportModule	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __repr__(self):$/;"	m	class:Array	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __repr__(self):$/;"	m	class:Comprehension	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def __repr__(self):$/;"	m	class:Generator	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def __repr__(self):$/;"	m	class:Arguments	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:Class	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:Function	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:FunctionExecution	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:Instance	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:InstanceElement	file:
__repr__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def __repr__(self):$/;"	m	class:ModuleWrapper	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def __repr__(self):$/;"	m	class:Parser	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __repr__(self):$/;"	m	class:FastModule	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def __repr__(self):$/;"	m	class:ParserNode	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:BaseNode	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Lambda	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Leaf	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Name	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Node	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Param	file:
__repr__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __repr__(self):$/;"	m	class:Scope	file:
__repr__	bundle/jedi-vim/jedi/test/conftest.py	/^    def __repr__(self):$/;"	m	class:StaticAnalysisCase	file:
__repr__	bundle/jedi-vim/jedi/test/refactor.py	/^    def __repr__(self):$/;"	m	class:RefactoringCase	file:
__repr__	bundle/jedi-vim/jedi/test/run.py	/^    def __repr__(self):$/;"	m	class:IntegrationTestCase	file:
__repr__	bundle/jedi-vim/jedi_vim.py	/^    def __repr__(self):$/;"	m	class:PythonToVimStr	file:
__set__	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def __set__(self, obj, val):$/;"	m	class:RevealAccess	file:
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ('children', 'parent')$/;"	v	class:BaseNode
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ('listeners',)$/;"	v	class:Function
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ('names_dict',)$/;"	v	class:Scope
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ('path', 'global_names', 'used_names', '_name',$/;"	v	class:Module
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ('position_modifier', 'value', 'parent', '_start_pos', 'prefix')$/;"	v	class:Leaf
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ('type',)$/;"	v	class:Node
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:AssertStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Base
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Class
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ClassOrFunc
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:CompFor
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Decorator
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:DocstringMixin
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ExprStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Flow
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ForStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:GlobalStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:IfStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Import
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ImportFrom
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ImportName
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Keyword
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:KeywordStatement
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Lambda
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:LeafWithNewLines
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Literal
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Name
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Number
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Operator
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:ReturnStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:String
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:TryStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:WhileStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:Whitespace
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:WithStmt
__slots__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    __slots__ = ()$/;"	v	class:YieldExpr
__slots__	bundle/jedi-vim/jedi_vim.py	/^    __slots__ = []$/;"	v	class:PythonToVimStr
__str__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __str__(self):$/;"	m	class:Error	file:
__str__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __str__(self):$/;"	m	class:Name	file:
__str__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __str__(self):$/;"	m	class:Operator	file:
__str__	bundle/jedi-vim/jedi_vim.py	/^    def __str__(self):$/;"	m	class:VimError	file:
__unicode__	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def __unicode__(self):$/;"	m	class:Error	file:
__unicode__	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def __unicode__(self):$/;"	m	class:Name	file:
__version__	bundle/jedi-vim/jedi/jedi/__init__.py	/^__version__ = '0.9.0'$/;"	v
__version__	bundle/jedi-vim/jedi/jedi/utils.py	/^    from jedi import __version__$/;"	i
_a_generator	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def _a_generator(foo):$/;"	f
_add_error	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^def _add_error(evaluator, name, message=None):$/;"	f
_add_syntax_error	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def _add_syntax_error(self, message, position):$/;"	m	class:Parser
_add_to_errors	bundle/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_analysis	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _analysis(self):$/;"	m	class:Script
_as_name_tuples	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def _as_name_tuples(self):$/;"	m	class:ImportFrom
_backwards_line_generator	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def _backwards_line_generator(self, start_pos):$/;"	m	class:UserContext
_bool_is_definitions	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def _bool_is_definitions(self, source):$/;"	m	class:TestIsDefinition
_break_check	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^def _break_check(evaluator, stmt, base_scope, element_scope):$/;"	f
_build_module	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_build_module(sid) abort$/;"	f
_builtins	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi._compatibility import builtins as _builtins, unicode$/;"	i
_cache_directory	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _cache_directory(self):$/;"	m	class:ParserPickling
_cache_directory	bundle/jedi-vim/jedi/jedi/settings.py	/^    _cache_directory = os.path.join('~', 'Library', 'Caches', 'Jedi')$/;"	v
_cache_directory	bundle/jedi-vim/jedi/jedi/settings.py	/^    _cache_directory = os.path.join(os.getenv('APPDATA') or '~', 'Jedi',$/;"	v
_cache_directory	bundle/jedi-vim/jedi/jedi/settings.py	/^    _cache_directory = os.path.join(os.getenv('XDG_CACHE_HOME') or '~\/.cache',$/;"	v
_calc_path_until_cursor	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def _calc_path_until_cursor(self, start_pos):$/;"	m	class:UserContext
_catch_exception	bundle/jedi-vim/jedi_vim.py	/^def _catch_exception(string, is_eval):$/;"	f
_checkPackage	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_check_array_additions	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^def _check_array_additions(evaluator, compare_array, module, is_list):$/;"	f
_check_for_exception_catch	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^def _check_for_exception_catch(evaluator, jedi_obj, exception, payload=None):$/;"	f
_check_for_setattr	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^def _check_for_setattr(instance):$/;"	f
_check_getattr	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def _check_getattr(self, inst):$/;"	m	class:NameFinder
_check_if	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^def _check_if(evaluator, node):$/;"	f
_check_isinstance_type	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def _check_isinstance_type(evaluator, element, search_name):$/;"	f
_check_jedi_availability	bundle/jedi-vim/jedi_vim.py	/^def _check_jedi_availability(show_error=False):$/;"	f
_check_module	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _check_module(evaluator, module):$/;"	f
_check_number	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def _check_number(source, result='float'):$/;"	f
_check_recursion	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def _check_recursion(self):$/;"	m	class:RecursionDetector
_check_speed	bundle/jedi-vim/jedi/test/test_speed.py	/^    def _check_speed(time_per_run, number=4, run_warm=True):$/;"	m	class:TestSpeed
_class_var	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    _class_var = 1$/;"	v	class:MethodDecorators
_clean_names	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def _clean_names(self, names):$/;"	m	class:NameFinder
_close	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _close(self):$/;"	m	class:FastTokenizer
_cls	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def _cls(self):$/;"	m	class:CompiledObject
_compare	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_error_items_by_columns	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_compile	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^def _compile(expr):$/;"	f
_complete	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def _complete(self, like_name):$/;"	m	class:Completion
_concat	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_concat(lists) abort$/;"	f
_copy_list	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _copy_list(self, lst):$/;"	m	class:FunctionExecution
_create_from_name	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def _create_from_name(module, parent, name):$/;"	f
_create_hash	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_hash	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_params	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^def _create_params(parent, argslist_list):$/;"	f
_debug_indent	bundle/jedi-vim/jedi/jedi/debug.py	/^_debug_indent = -1$/;"	v
_def	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def _def(self, source, index=-1):$/;"	m	class:TestIsDefinition
_default_compare	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^def _defined_names(current):$/;"	f
_deprecated2	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_deprecated2	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_detect_django_path	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _detect_django_path(module_path):$/;"	f
_disabled_by_eclim	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_do_import	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def _do_import(self, import_path, sys_path):$/;"	m	class:Importer
_dotted_as_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def _dotted_as_names(self):$/;"	m	class:ImportName
_element_calculate	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def _element_calculate(evaluator, left, operator, right):$/;"	f
_encode_name	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_encode_name	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_error_argument_count	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^def _error_argument_count(func, actual_count):$/;"	f
_eval_atom	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def _eval_atom(self, atom):$/;"	m	class:Evaluator
_eval_param	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def _eval_param(evaluator, param, scope):$/;"	f
_evaluate_for_statement_string	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def _evaluate_for_statement_string(evaluator, string, module):$/;"	f
_execute_array_values	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def _execute_array_values(evaluator, array):$/;"	f
_execute_code	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _execute_code(module_path, code):$/;"	f
_execute_function	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def _execute_function(self, evaluator, params):$/;"	m	class:CompiledObject
_execute_types_in_stmt	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def _execute_types_in_stmt(evaluator, stmt):$/;"	f
_expand	bundle/lightline.vim/autoload/lightline.vim	/^function! s:_expand(a, c, _, e, t, i, j, x) abort$/;"	f
_explain_skip	bundle/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_faked	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^def _faked(module, obj, name):$/;"	f
_file2module	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_file2module(file) abort$/;"	f
_files	bundle/jedi-vim/jedi/sith.py	/^    _files = None$/;"	v	class:SourceFinder
_find_index	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_finish_dedents	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _finish_dedents(self):$/;"	m	class:FastTokenizer
_flush_index	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _flush_index(self):$/;"	m	class:ParserPickling
_follow_param	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def _follow_param(evaluator, params, index):$/;"	f
_follow_statements_imports	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def _follow_statements_imports(self):$/;"	m	class:BaseDefinition
_follow_statements_imports	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def _follow_statements_imports(self):$/;"	m	class:Completion
_format_variable	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_generate_name	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def _generate_name(self, name):$/;"	m	class:Importer
_get_backwards_tokenizer	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def _get_backwards_tokenizer(self, start_pos, line_gen=None):$/;"	m	class:UserContext
_get_buildout_scripts	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _get_buildout_scripts(module_path):$/;"	f
_get_calling_var_args	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^def _get_calling_var_args(evaluator, var_args):$/;"	f
_get_cflags	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_checker_var	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_func_self_name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _get_func_self_name(self, func):$/;"	m	class:Instance
_get_functions	bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_hashed_path	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _get_hashed_path(self, path):$/;"	m	class:ParserPickling
_get_include_dirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_init_directory	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _get_init_directory(self):$/;"	m	class:ModuleWrapper
_get_method_execution	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _get_method_execution(self, func):$/;"	m	class:Instance
_get_module_names	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def _get_module_names(self, search_path=None):$/;"	m	class:Importer
_get_module_path	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_nested_import_name	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def _get_nested_import_name(self):$/;"	m	class:NestedImportModule
_get_node	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _get_node(self, source, parser_code, line_offset, nodes):$/;"	m	class:FastParser
_get_params	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _get_params(self):$/;"	m	class:FunctionExecution
_get_parent_dir_with_file	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _get_parent_dir_with_file(path, filename):$/;"	f
_get_parent_dir_with_file	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.evaluate.sys_path import (_get_parent_dir_with_file,$/;"	i
_get_path	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _get_path(self, file):$/;"	m	class:ParserPickling
_get_paths_from_buildout_script	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _get_paths_from_buildout_script(evaluator, buildout_script):$/;"	f
_get_prefix	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _get_prefix(self):$/;"	m	class:FastTokenizer
_get_sid_by_script	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_under_cursor_stmt	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _get_under_cursor_stmt(self, cursor_txt, start_pos=None):$/;"	m	class:Script
_get_venv_sitepackages	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _get_venv_sitepackages(venv):$/;"	f
_goto	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _goto(self, add_import_name=False):$/;"	m	class:Script
_has_copy_exe	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:_has_copy_exe() abort$/;"	f
_has_move_exe	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:_has_move_exe() abort$/;"	f
_ignore_file	bundle/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_implemented	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^_implemented = {$/;"	v
_import	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_import(name) abort$/;"	f
_import	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_import(name) abort$/;"	f
_indent	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _indent(self):$/;"	m	class:ParserNode
_index	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _index(self):$/;"	m	class:ParserPickling
_init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
_invalidate_star_import_cache_module	bundle/jedi-vim/jedi/jedi/cache.py	/^def _invalidate_star_import_cache_module(module, only_main=False):$/;"	f
_isAvailableDefault	bundle/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_absolute_path	bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_list	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def _is_list(obj):$/;"	f
_is_number	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def _is_number(obj):$/;"	f
_is_same_index	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_is_tuple	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def _is_tuple(obj):$/;"	f
_items	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:Array
_items	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:FakeDict
_items	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:FakeSequence
_items	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def _items(self):$/;"	m	class:ImplicitTuple
_iterate_star_args	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^def _iterate_star_args(evaluator, array, input_node, func=None):$/;"	f
_keyword_re	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    _keyword_re = re.compile('^[ \\t]*(def |class |@|(?:%s)|(?:%s)\\s*:)'$/;"	v	class:FastParser
_list	bundle/jedi-vim/jedi/test/completion/functions.py	/^_list = [1,""]$/;"	v
_literals_to_types	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def _literals_to_types(evaluator, result):$/;"	f
_load_faked_module	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^def _load_faked_module(module):$/;"	f
_load_module	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^def _load_module(evaluator, path=None, source=None, sys_path=None):$/;"	f
_loaded_grammars	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^_loaded_grammars = {}$/;"	v
_logRedirect	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp() abort " {{{2$/;"	f
_mapping	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    _mapping = {$/;"	v	class:BaseDefinition
_module_attributes_dict	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _module_attributes_dict(self):$/;"	m	class:ModuleWrapper
_name_to_types	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def _name_to_types(evaluator, name, scope):$/;"	f
_names_dict_ensure_one_dict	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def _names_dict_ensure_one_dict(self, is_instance):$/;"	m	class:CompiledObject
_names_to_types	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def _names_to_types(self, names, search_global):$/;"	m	class:NameFinder
_nefertiti_change_brightness	bundle/vim-colorschemes/colors/nefertiti.vim	/^    function! s:_nefertiti_change_brightness(step, up) "{{{3$/;"	f
_nefertiti_reset_brightness	bundle/vim-colorschemes/colors/nefertiti.vim	/^    function! s:_nefertiti_reset_brightness() "{{{3$/;"	f
_nefertiti_set_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    function! s:_nefertiti_set_colors() "{{{3$/;"	f
_nefertiti_set_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    function! s:_nefertiti_set_dynamic_colors() "{{{3$/;"	f
_nefertiti_set_stable_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    function! s:_nefertiti_set_stable_colors() "{{{3$/;"	f
_nefertiti_validate_brightness_level	bundle/vim-colorschemes/colors/nefertiti.vim	/^    function! s:_nefertiti_validate_brightness_level() "{{{3$/;"	f
_normalise_filetype	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_os_name	bundle/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_pad_with_char	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_parent	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def _parent(self, source, line=None, column=None):$/;"	m	class:TestParent
_parse	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _parse(self, source):$/;"	m	class:FastParser
_parse_function_doc	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def _parse_function_doc(self):$/;"	m	class:CompiledObject
_parse_function_doc	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def _parse_function_doc(doc):$/;"	f
_parsed_callback	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _parsed_callback(self, parser):$/;"	m	class:Script
_parser	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def _parser(self):$/;"	m	class:UserContextParser
_path	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def _path(self):$/;"	m	class:BaseDefinition
_path2project_directory_git	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path_re	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^_path_re = re.compile('(?:\\.[^{0}]+|[{0}]__init__\\.py)$'.format(re.escape(_sep)))$/;"	v
_paths_from_assignment	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _paths_from_assignment(evaluator, expr_stmt):$/;"	f
_paths_from_list_modifications	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def _paths_from_list_modifications(module_path, trailer1, trailer2):$/;"	f
_prepare_goto	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _prepare_goto(self, goto_path, is_completion=False):$/;"	m	class:Script
_redir	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_redir(cmd) abort$/;"	f
_registerHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_remove_old_modules	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _remove_old_modules(self):$/;"	m	class:ParserPickling
_remove_shadowed_items	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_remove_statements	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def _remove_statements(evaluator, stmt, name):$/;"	f
_rename	bundle/jedi-vim/jedi/jedi/refactoring.py	/^def _rename(names, replace_str):$/;"	f
_reorder_var_args	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def _reorder_var_args(var_args):$/;"	m	class:Arguments
_replace	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_reset_caches	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _reset_caches(self):$/;"	m	class:FastParser
_resolve_descriptors	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def _resolve_descriptors(self, name, types):$/;"	m	class:NameFinder
_resolve_filetypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:_resolve_filetypes(filetypes) abort " {{{2$/;"	f
_return_first_param	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def _return_first_param(evaluator, firsts):$/;"	f
_rewrite_last_newline	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _rewrite_last_newline(self):$/;"	m	class:ParserNode
_rmrf	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_run	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def _run(self, source, expected_name, expected_index=0, line=None, column=None):$/;"	m	class:TestCallSignatures
_run_simple	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def _run_simple(self, source, name, index=0, column=None, line=1):$/;"	m	class:TestCallSignatures
_runtime_files	bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_scope_copy	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _scope_copy(self, scope):$/;"	m	class:FunctionExecution
_search_headers	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_search_in_scope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def _search_in_scope(self, typ):$/;"	m	class:Scope
_search_param_in_docstr	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def _search_param_in_docstr(docstr, param_str):$/;"	f
_search_param_in_numpydocstr	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^    def _search_param_in_numpydocstr(docstr, param_str):$/;"	f
_self_names_dict	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _self_names_dict(self, add_mro=True):$/;"	m	class:Instance
_sep	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^_sep = os.path.sep$/;"	v
_set_screen_column	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_simple_complete	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _simple_complete(self, path, dot, like):$/;"	m	class:Interpreter
_simple_complete	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def _simple_complete(self, path, dot, like):$/;"	m	class:Script
_skip_file	bundle/syntastic/plugin/syntastic.vim	/^function! s:_skip_file() abort " {{{2$/;"	f
_split	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def _split(self):$/;"	m	class:Arguments
_split_by_wcswidth	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_parts	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def _split_parts(self, source):$/;"	m	class:FastParser
_sre	bundle/jedi-vim/jedi/test/completion/usages.py	/^import _sre$/;"	i
_sre	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^import _sre$/;"	i
_stack_removal	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def _stack_removal(self, grammar, stack, start_index, value, start_pos):$/;"	m	class:Parser
_star_star_dict	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^def _star_star_dict(evaluator, array, input_node, func):$/;"	f
_start_time	bundle/jedi-vim/jedi/jedi/debug.py	/^_start_time = time.time()$/;"	v
_strip_rst_role	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def _strip_rst_role(type_str):$/;"	f
_sub_modules_dict	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def _sub_modules_dict(self):$/;"	m	class:ModuleWrapper
_tabnew	bundle/jedi-vim/jedi_vim.py	/^def _tabnew(path, options=''):$/;"	f
_temp	bundle/jedi-vim/jedi/jedi/cache.py	/^    def _temp(key_func):$/;"	f	function:time_cache
_tfpdef	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def _tfpdef(self):$/;"	m	class:Param
_time_caches	bundle/jedi-vim/jedi/jedi/cache.py	/^_time_caches = {}$/;"	v
_tokenize	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def _tokenize(self, tokenizer):$/;"	m	class:Parser
_translate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_tuple_mapping	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    _tuple_mapping = dict((tuple(k.split('.')), v) for (k, v) in {$/;"	v	class:BaseDefinition
_type_names_dict	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^_type_names_dict = builtin.get_by_name('type').names_dict$/;"	v
_unify_path	bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^  function! s:_uniq(list) abort$/;"	f
_values	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def _values(self):$/;"	m	class:Array
_vital_depends	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_wcwidth	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
a	bundle/jedi-vim/jedi/test/completion/arrays.py	/^a = (1, "")$/;"	v
a	bundle/jedi-vim/jedi/test/completion/arrays.py	/^a = ['']*2$/;"	v
a	bundle/jedi-vim/jedi/test/completion/arrays.py	/^a = [1, ""]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/arrays.py	/^a = list()$/;"	v
a	bundle/jedi-vim/jedi/test/completion/arrays.py	/^def a(): return ''$/;"	f
a	bundle/jedi-vim/jedi/test/completion/basic.py	/^    a = ''$/;"	v
a	bundle/jedi-vim/jedi/test/completion/basic.py	/^    a = 3$/;"	v
a	bundle/jedi-vim/jedi/test/completion/basic.py	/^a = 'smörbröd'$/;"	v
a	bundle/jedi-vim/jedi/test/completion/basic.py	/^a = 3$/;"	v
a	bundle/jedi-vim/jedi/test/completion/basic.py	/^a = []$/;"	v
a	bundle/jedi-vim/jedi/test/completion/basic.py	/^def a():$/;"	f
a	bundle/jedi-vim/jedi/test/completion/classes.py	/^        def a():$/;"	f	function:TestSuper.test
a	bundle/jedi-vim/jedi/test/completion/classes.py	/^    a = 1$/;"	v	class:WithoutMethod
a	bundle/jedi-vim/jedi/test/completion/classes.py	/^    a = 3$/;"	v	class:A
a	bundle/jedi-vim/jedi/test/completion/classes.py	/^    a = 3$/;"	v	class:Super
a	bundle/jedi-vim/jedi/test/completion/classes.py	/^a = A()$/;"	v
a	bundle/jedi-vim/jedi/test/completion/classes.py	/^a = WithoutMethod().m()$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = ['' for a in [1]]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = [[int(v) for v in line.strip().split() if v] for line in ["123", "123", "123"] if line]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = [a for a in (1, 2)]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = [a for a in [1]]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = [a for a in arr]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = [a for a,b in [(1,'')]]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^a = [a if 1.0 else '' for a in [1] if [1.0]]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def a(self):$/;"	m	class:JustAClass
a	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def a(self):$/;"	m	class:MethodDecoratorDoesntExist
a	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    a = ''$/;"	v	class:E
a	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^a = set([1.0])$/;"	v
a	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^a = set(arr)$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = ''$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = 0$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = 1$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = 1$/;"	v	class:X
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = dict$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = int$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = list$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^    a = set$/;"	v
a	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^a = list$/;"	v
a	bundle/jedi-vim/jedi/test/completion/functions.py	/^a = 'a'$/;"	v
a	bundle/jedi-vim/jedi/test/completion/functions.py	/^def a(): pass$/;"	f
a	bundle/jedi-vim/jedi/test/completion/functions.py	/^def a():$/;"	f
a	bundle/jedi-vim/jedi/test/completion/generators.py	/^a = ''$/;"	v
a	bundle/jedi-vim/jedi/test/completion/goto.py	/^a = definition$/;"	v
a	bundle/jedi-vim/jedi/test/completion/import_tree/__init__.py	/^a = ''$/;"	v
a	bundle/jedi-vim/jedi/test/completion/import_tree/mod1.py	/^a = 1$/;"	v
a	bundle/jedi-vim/jedi/test/completion/import_tree/pkg/__init__.py	/^a = list$/;"	v
a	bundle/jedi-vim/jedi/test/completion/import_tree/pkg/mod1.py	/^a = 1.0$/;"	v
a	bundle/jedi-vim/jedi/test/completion/import_tree/random.py	/^a = set$/;"	v
a	bundle/jedi-vim/jedi/test/completion/import_tree/recurse_class1.py	/^    def a(self):$/;"	m	class:C
a	bundle/jedi-vim/jedi/test/completion/imports.py	/^    a = not_existing_import$/;"	v
a	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a = ''$/;"	v
a	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a = 1 if$/;"	v
a	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a = [a for a in [1,2]$/;"	v
a	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a = [for a in$/;"	v
a	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^a = lambda x: x$/;"	v
a	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^a = lambda: 3$/;"	v
a	bundle/jedi-vim/jedi/test/completion/named_param.py	/^def a(*some_args, **some_kwargs):$/;"	f
a	bundle/jedi-vim/jedi/test/completion/named_param.py	/^def a(abc):$/;"	f
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    a = ""$/;"	v	class:A
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    a = 3$/;"	v	class:A
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    a = list$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    a = list()$/;"	v	class:A
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = ""$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = 1$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = 3$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = A()$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = list$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = temp$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a = tuple$/;"	v
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^class a():$/;"	c
a	bundle/jedi-vim/jedi/test/completion/ordering.py	/^def a(a=3):$/;"	f
a	bundle/jedi-vim/jedi/test/completion/precedence.py	/^    a = ''$/;"	v
a	bundle/jedi-vim/jedi/test/completion/precedence.py	/^a = "a"*3$/;"	v
a	bundle/jedi-vim/jedi/test/completion/precedence.py	/^a = 3 * "a"$/;"	v
a	bundle/jedi-vim/jedi/test/completion/precedence.py	/^a = foobarbaz + 'hello'$/;"	v
a	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^a = functools.partial(function, 0)$/;"	v
a	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def a(self):$/;"	m	class:TestClassVar
a	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def a(self):$/;"	m	class:TestInstanceVar
a	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def a(self):$/;"	m	class:TestProperty
a	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def a(self, Abc):$/;"	m	class:Abc
a	bundle/jedi-vim/jedi/test/completion/usages.py	/^def a(): pass$/;"	f
a	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^        assert self._bool_is_definitions('import x as a') == [False, True]$/;"	i
a	bundle/jedi-vim/test/completions.vim	/^        normal a subproX$/;"	m
a().filenaX	bundle/jedi-vim/test/completions.vim	/^        normal a().filenaX$/;"	m
a2	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a2 = [for a2 in [0]]$/;"	v
a3	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a3 = [a4 for a in for x in y]$/;"	v
a3	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a3 = [a4 for in 'b']$/;"	v
a3	bundle/jedi-vim/jedi/test/completion/invalid.py	/^a3 = [for xyz in]$/;"	v
a_func	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def a_func(self):$/;"	m	class:A
a_func	bundle/jedi-vim/jedi/test/completion/classes.py	/^def a_func():$/;"	f
a_method	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def a_method(self):$/;"	m	class:TestMethods
a_param	bundle/jedi-vim/jedi/test/completion/ordering.py	/^a_param = 3$/;"	v
ab1	bundle/jedi-vim/jedi/test/completion/goto.py	/^def ab1(param): pass$/;"	f
ab2	bundle/jedi-vim/jedi/test/completion/goto.py	/^def ab2(param): pass$/;"	f
ab3	bundle/jedi-vim/jedi/test/completion/goto.py	/^def ab3(a=param): pass$/;"	f
abc	bundle/jedi-vim/jedi/test/completion/import_tree/rename1.py	/^abc = 3$/;"	v
abc	bundle/jedi-vim/jedi/test/completion/import_tree/rename2.py	/^from rename1 import abc$/;"	i
abc	bundle/jedi-vim/jedi/test/completion/usages.py	/^abc = $/;"	v
abc	bundle/jedi-vim/jedi/test/completion/usages.py	/^abc = 5$/;"	v
abc	bundle/jedi-vim/jedi/test/completion/usages.py	/^def abc(): pass$/;"	f
abc	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^        run("import time; abc = time; abc.sleep(", 'sleep', 0)$/;"	i
absolute_import	bundle/jedi-vim/jedi/jedi/parser/token.py	/^from __future__ import absolute_import$/;"	i
absolute_import	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from __future__ import absolute_import$/;"	i
absolute_import	bundle/jedi-vim/jedi/jedi/utils.py	/^from __future__ import absolute_import$/;"	i
absolute_import	bundle/jedi-vim/jedi/test/test_evaluate/absolute_import/local_module.py	/^from __future__ import absolute_import$/;"	i
abspath	bundle/jedi-vim/jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
abspath	bundle/jedi-vim/jedi/scripts/wx_check.py	/^from os.path import abspath, dirname$/;"	i
abspath	bundle/jedi-vim/jedi/test/helpers.py	/^from os.path import abspath, dirname$/;"	i
abspath	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^from os.path import abspath$/;"	i
ack#Ack	bundle/ack.vim/autoload/ack.vim	/^function! ack#Ack(cmd, args) "{{{$/;"	f
ack#AckFromSearch	bundle/ack.vim/autoload/ack.vim	/^function! ack#AckFromSearch(cmd, args) "{{{$/;"	f
ack#AckHelp	bundle/ack.vim/autoload/ack.vim	/^function! ack#AckHelp(cmd, args) "{{{$/;"	f
ack#AckWindow	bundle/ack.vim/autoload/ack.vim	/^function! ack#AckWindow(cmd, args) "{{{$/;"	f
ack#ShowResults	bundle/ack.vim/autoload/ack.vim	/^function! ack#ShowResults() "{{{$/;"	f
action_table.cd.func	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^function! s:action_table.cd.func(candidate) "{{{$/;"	f
action_table.change.func	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^function! s:action_table.change.func(candidate) "{{{$/;"	f
action_table.delete.func	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^function! s:action_table.delete.func(candidates) "{{{$/;"	f
action_table.delete.func	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^function! s:action_table.delete.func(candidates) "{{{$/;"	f
action_table.sort.func	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^function! s:action_table.sort.func(candidate) "{{{$/;"	f
activateAll	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
actual	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^        def actual(evaluator, params):$/;"	f	function:CompiledObject.py__call__
actual	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^        def actual(evaluator, params):$/;"	f	function:Instance.py__call__
add	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^def add(evaluator, name, jedi_obj, message=None, typ=Error, payload=None):$/;"	f
add	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^        def add(cls):$/;"	f	function:Class.py__mro__
add_attribute_error	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^def add_attribute_error(evaluator, scope, name):$/;"	f
add_bracket_after_function	bundle/jedi-vim/jedi/jedi/settings.py	/^add_bracket_after_function = False$/;"	v
add_dot_after_module	bundle/jedi-vim/jedi/jedi/settings.py	/^add_dot_after_module = False$/;"	v
add_history	bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:add_history(type, command) "{{{$/;"	f
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_module	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^def add_module(evaluator, module_name, module):$/;"	f
add_namespaces_to_parser	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^def add_namespaces_to_parser(evaluator, namespaces, parser_module):$/;"	f
add_node	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def add_node(self, node, line_offset):$/;"	m	class:ParserNode
add_nodes	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def add_nodes(nodes):$/;"	f	function:get_module_statements
add_register	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:add_register(name) "{{{$/;"	f
add_section	bundle/vim-airline/autoload/airline/extensions/default.vim	/^  function s:add_section(builder, context, key)$/;"	f
add_to_arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def add_to_arr(arr2, a):$/;"	f
addarc	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def addarc(self, next, label):$/;"	m	class:DFAState
addarc	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def addarc(self, next, label=None):$/;"	m	class:NFAState
addclosure	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^        def addclosure(state, base):$/;"	f	function:ParserGenerator.make_dfa
addfirstsets	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def addfirstsets(self):$/;"	m	class:ParserGenerator
additional_dynamic_modules	bundle/jedi-vim/jedi/jedi/settings.py	/^additional_dynamic_modules = []$/;"	v
addtoken	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def addtoken(self, type, value, prefix, start_pos):$/;"	m	class:PgenParser
addtomrufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f
adjust_scroll	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:adjust_scroll(best_winline) "{{{$/;"	f
after	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    def after(self):$/;"	m	class:A
ag_handler	fzf.vim	/^function! s:ag_handler(lines)$/;"	f
airline#add_inactive_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	bundle/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#builder#new	bundle/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#check_mode	bundle/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	bundle/vim-airline/plugin/airline.vim	/^function airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	bundle/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#deprecation#check	bundle/vim-airline/autoload/airline/deprecation.vim	/^function! airline#deprecation#check()$/;"	f
airline#extensions#append_to_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#bufferline#init	bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	bundle/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	bundle/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#commandt#apply	bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	bundle/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	bundle/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext)$/;"	f
airline#extensions#ctrlspace#statusline	bundle/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...)$/;"	f
airline#extensions#default#apply	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#eclim#creat_line	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	bundle/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	bundle/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#hunks#get_hunks	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#load	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#netrw#apply	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	bundle/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	bundle/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	bundle/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#prepend_to_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#init	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get_warnings	bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warnings()$/;"	f
airline#extensions#syntastic#init	bundle/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#autoshow#off	bundle/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	bundle/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#get	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#invalidate	bundle/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	bundle/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#formatters#default#format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	bundle/vim-webdevicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr)$/;"	f
airline#extensions#tabline#init	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#tabs#get	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#off	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#title	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tagbar#currenttag	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#tmuxline#init	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	bundle/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unite#apply	bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	bundle/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#virtualenv#apply	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#whitespace#check	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#init	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#highlighter#add_accent	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes)$/;"	f
airline#highlighter#highlight_modified_inactive	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#init#bootstrap	bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#sections	bundle/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#parts#define	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	bundle/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#remove_statusline_func	bundle/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	bundle/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	bundle/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	bundle/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#base16#refresh	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
airline#themes#generate_color_map	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#hybrid#refresh	bundle/vim-airline/autoload/airline/themes/hybrid.vim	/^function! airline#themes#hybrid#refresh()$/;"	f
airline#themes#jellybeans#refresh	bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^function! airline#themes#jellybeans#refresh()$/;"	f
airline#themes#kalisi#refresh	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^function! airline#themes#kalisi#refresh()$/;"	f
airline#themes#lucius#refresh	bundle/vim-airline/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
airline#themes#monochrome#refresh	bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
airline#themes#patch	bundle/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#themes#solarized#refresh	bundle/vim-airline/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
airline#themes#tomorrow#refresh	bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
airline#themes#zenburn#refresh	bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
airline#update_statusline	bundle/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	bundle/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#prepend	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#wrap	bundle/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_theme	bundle/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	bundle/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
aliases	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def aliases(self):$/;"	m	class:FakeImport
aliases	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def aliases(self):$/;"	m	class:ImportFrom
aliases	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def aliases(self):$/;"	m	class:ImportName
all	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all_exit	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:all_exit() "{{{$/;"	f
all_sub_nodes	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def all_sub_nodes(self):$/;"	m	class:ParserNode
alphabet	bundle/jedi-vim/jedi/test/speed/precedence.py	/^def alphabet(code4):$/;"	f
analysis	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate import analysis$/;"	i
analysis	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import analysis$/;"	i
analysis	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import analysis$/;"	i
analysis	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import analysis$/;"	i
analysis	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi.evaluate import analysis$/;"	i
analysis	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate import analysis$/;"	i
and	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:and(xs) abort$/;"	f
annotation	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def annotation(self):$/;"	m	class:Function
annotation	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def annotation(self):$/;"	m	class:Param
another	bundle/jedi-vim/jedi/test/speed/precedence.py	/^def another(code2):$/;"	f
any	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
api	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^from jedi import api$/;"	i
api	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^from jedi import api$/;"	i
api	bundle/jedi-vim/jedi/test/test_regression.py	/^from jedi import api$/;"	i
api_type	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def api_type(self):$/;"	m	class:CompiledObject
app	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def app(a):$/;"	f
append	bundle/unite.vim/plugin/unite/buffer.vim	/^function! s:append(path) "{{{$/;"	f
append	bundle/unite.vim/plugin/unite/window.vim	/^function! s:append() "{{{$/;"	f
apply_opts	bundle/vim-colorschemes/colors/marklar.vim	/^        function! s:apply_opts()$/;"	f
apps_dir_from_src	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
arg	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def arg(*args):$/;"	f
arg_func	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^arg_func = lambda *args, **kwargs: (args[0], kwargs['a'])$/;"	v
arg_l	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^arg_l = lambda x, y: (y, x)$/;"	v
arg_l	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^arg_l = lambda x, y: y, x$/;"	v
argmaps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f
args	bundle/jedi-vim/jedi/scripts/profile.py	/^    args = docopt(__doc__)$/;"	v
args	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^args = 1,""$/;"	v
args_func	bundle/jedi-vim/jedi/test/completion/functions.py	/^def args_func(*args):$/;"	f
args_func	bundle/jedi-vim/jedi/test/completion/functions.py	/^def args_func(arg1, *args):$/;"	f
argument_clinic	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def argument_clinic(string, want_obj=False, want_scope=False):$/;"	f
arguments	bundle/jedi-vim/jedi/sith.py	/^    arguments = docopt(__doc__)$/;"	v
arguments	bundle/jedi-vim/jedi/test/run.py	/^    arguments = docopt.docopt(docoptstr)$/;"	v
argv	bundle/jedi-vim/jedi/jedi/__main__.py	/^from sys import argv$/;"	i
argv	bundle/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
argv	bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
arr	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^arr = [1,'']$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr = [""]$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr = [1.0]$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr = []$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr = [tuple()]$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr = list([])$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^arr = ['']$/;"	v
arr	bundle/jedi-vim/jedi/test/completion/types.py	/^arr = []$/;"	v
arr2	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr2 = arr$/;"	v
arr2	bundle/jedi-vim/jedi/test/completion/types.py	/^arr2 = [1,2,3]$/;"	v
arr3	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^arr3 = [1.0]$/;"	v
arr_append	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def arr_append(arr4, a):$/;"	f
array	bundle/jedi-vim/jedi/scripts/profile.py	/^        args['<code>'] = 'import numpy; numpy.array([0])'$/;"	i
array	bundle/jedi-vim/jedi/test/completion/functions.py	/^def array(first_param):$/;"	f
arrays	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from . import arrays$/;"	i
as_imports	bundle/jedi-vim/jedi/test/completion/imports.py	/^def as_imports():$/;"	f
as_tuple	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def as_tuple(self):$/;"	m	class:Arguments
asdf	bundle/jedi-vim/jedi/test/completion/complex.py	/^    asdf = time$/;"	v	class:Foo
asdf	bundle/jedi-vim/jedi/test/completion/functions.py	/^def asdf(a):$/;"	f
asdf	bundle/jedi-vim/jedi/test/completion/invalid.py	/^asdf = ''$/;"	v
asdf	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def asdf(a or b): # multiple param names$/;"	f
asdfy	bundle/jedi-vim/jedi/test/completion/complex.py	/^def asdfy():$/;"	f
assert_case_equal	bundle/jedi-vim/jedi/test/test_integration.py	/^def assert_case_equal(case, actual, desired):$/;"	f
assert_definition_names	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def assert_definition_names(self, definitions, names):$/;"	m	class:TestDefinedNames
assert_static_analysis	bundle/jedi-vim/jedi/test/test_integration.py	/^def assert_static_analysis(case, actual, desired):$/;"	f
assertion	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def assertion(self):$/;"	m	class:AssertStmt
assignment_indexes	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def assignment_indexes(self):$/;"	m	class:Name
ast	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^import ast$/;"	i
at	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f
author	bundle/jedi-vim/jedi/setup.py	/^      author=__AUTHOR__,$/;"	v
author_email	bundle/jedi-vim/jedi/setup.py	/^      author_email=__AUTHOR_EMAIL__,$/;"	v
auto_import_modules	bundle/jedi-vim/jedi/jedi/settings.py	/^auto_import_modules = [$/;"	v
autoclass_content	bundle/jedi-vim/jedi/docs/conf.py	/^autoclass_content = 'both'$/;"	v
autocmds	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f
autodoc_default_flags	bundle/jedi-vim/jedi/docs/conf.py	/^autodoc_default_flags = []$/;"	v
autodoc_member_order	bundle/jedi-vim/jedi/docs/conf.py	/^autodoc_member_order = 'bysource'$/;"	v
b	bundle/jedi-vim/jedi/test/completion/arrays.py	/^b = [6,7]$/;"	v
b	bundle/jedi-vim/jedi/test/completion/basic.py	/^b = '' if a else set()$/;"	v
b	bundle/jedi-vim/jedi/test/completion/basic.py	/^b = [1.0,'']$/;"	v
b	bundle/jedi-vim/jedi/test/completion/classes.py	/^            def b(self):$/;"	m	class:A.b.B
b	bundle/jedi-vim/jedi/test/completion/classes.py	/^    b = ''$/;"	v	class:B
b	bundle/jedi-vim/jedi/test/completion/classes.py	/^    b = 3$/;"	v	class:B
b	bundle/jedi-vim/jedi/test/completion/classes.py	/^    b = ret$/;"	v	class:V
b	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def b(self):$/;"	m	class:A
b	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^b = [a for arr in [[1]] for a in arr]$/;"	v
b	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^b = [a for arr in [[1]] if '' for a in arr if '']$/;"	v
b	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^b = [b for arr in [[[1.0]]] for a in arr for b in a]$/;"	v
b	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def b(self):$/;"	m	class:Base
b	bundle/jedi-vim/jedi/test/completion/functions.py	/^def b():$/;"	f
b	bundle/jedi-vim/jedi/test/completion/generators.py	/^b = []$/;"	v
b	bundle/jedi-vim/jedi/test/completion/goto.py	/^        def b(self):$/;"	m	class:func.A
b	bundle/jedi-vim/jedi/test/completion/goto.py	/^    def b(self):$/;"	m	class:C
b	bundle/jedi-vim/jedi/test/completion/goto.py	/^b = a$/;"	v
b	bundle/jedi-vim/jedi/test/completion/goto.py	/^b = math$/;"	v
b	bundle/jedi-vim/jedi/test/completion/invalid.py	/^from a import (b$/;"	i
b	bundle/jedi-vim/jedi/test/completion/ordering.py	/^b = a$/;"	v
b	bundle/jedi-vim/jedi/test/completion/precedence.py	/^b = [str(1)]$/;"	v
b	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def b(self):$/;"	m	class:TestInstanceVar
b	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def b(self):$/;"	m	class:TestProperty
b	bundle/jedi-vim/jedi/test/static_analysis/import_tree/a.py	/^from . import b$/;"	i
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	bundle/unite.vim/syntax/unite.vim	/^let b:current_syntax = 'unite'$/;"	v
b:current_syntax	bundle/unite.vim/syntax/unite_exrename.vim	/^let b:current_syntax = 'unite_exrename'$/;"	v
b:current_syntax	bundle/vim-colorschemes/colors/ciscoacl.vim	/^let b:current_syntax = "cisco"$/;"	v
b:current_syntax	bundle/vim-colorschemes/colors/pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	bundle/vim-colorschemes/colors/psql.vim	/^let b:current_syntax = "psql"$/;"	v
b:current_syntax	bundle/vim-colorschemes/colors/rtl.vim	/^let b:current_syntax = "rtl"$/;"	v
b:current_syntax	bundle/vim-colorschemes/colors/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let b:current_syntax = 'vimfiler'$/;"	v
b:did_indent	bundle/vim-python-pep8-indent/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	bundle/vim-web-indent/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b_method	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def b_method(self):$/;"	m	class:TestMethods
background_color	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^    background_color = "#f8f8f8"$/;"	v	class:FlaskyStyle
badwolf_tex	bundle/vim-colorschemes/colors/badwolf.vim	/^augroup badwolf_tex$/;"	a
bar	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.mod1 as bar$/;"	i
bar	bundle/jedi-vim/jedi/test/completion/invalid.py	/^    def bar(self):$/;"	m	class:BrokenPartsOfClass
bar	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^            bar = []$/;"	v	class:TestInterpreterAPI.test_slice.Foo
bar	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^            def bar(self):$/;"	m	class:TestInterpreterAPI.test_property_error.Foo
bar	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
base_class	bundle/jedi-vim/jedi/test/completion/usages.py	/^    base_class = 1$/;"	v	class:Super
base_method	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def base_method(self):$/;"	m	class:Super
basetwo	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^basetwo = functools.partial(int, base=2)$/;"	v
baz	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
bclose_multiple	bundle/vim-comfortable/plugin/bclose.vim	/^  let bclose_multiple = 1$/;"	v
before	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    def before(self):$/;"	m	class:A
best_winline	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:best_winline() "{{{$/;"	f
beyond	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^                    debug.warning('Attempted relative import beyond top-level package.')$/;"	i
bg	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:bg(group, bg)$/;"	f
bg	bundle/vim-colorschemes/colors/pink.vim	/^            let bg = s:checkargs(s:col[3])$/;"	v
bg	bundle/vim-colorschemes/colors/pink.vim	/^        let bg = s:checkargs(s:col[3])$/;"	v
bgcolor	bundle/vim-colorschemes/colors/mango.vim	/^  let bgcolor = &background$/;"	v
bin_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^bin_number = r'0[bB][01]+'$/;"	v
binary_search	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
blabla	bundle/jedi-vim/jedi/test/refactor/rename.py	/^def blabla():$/;"	f
black	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:black(x) abort$/;"	f
black	bundle/vim-colorschemes/colors/spectro.vim	/^let black  = "#000000"$/;"	v
blub	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def blub(self):$/;"	m	class:WithoutMethod
blub	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^    def blub(self, b):$/;"	m	class:C
blub	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def blub():$/;"	f
blub	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def blub():$/;"	f
blub2	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^    def blub2(self):$/;"	m	class:C
blubi	bundle/jedi-vim/jedi/test/completion/usages.py	/^def blubi():$/;"	f
bold_fg	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:bold_fg(group, fg)$/;"	f
boo	bundle/jedi-vim/jedi/test/completion/isinstance.py	/^    def boo(self):$/;"	m	class:Test
both	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def both():$/;"	f
bracket	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^bracket = '[][(){}]'$/;"	v
bracket_start	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def bracket_start(self):$/;"	m	class:CallSignature
bracket_start	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def bracket_start(src):$/;"	f	function:test_bracket_start
break	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def break(): pass$/;"	f
break	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break_check	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^def break_check(evaluator, base_scope, stmt, origin_scope=None):$/;"	f
browse_check	bundle/vimfiler.vim/plugin/vimfiler.vim	/^function! s:browse_check(path) "{{{$/;"	f
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_bookmark_action.func	bundle/unite.vim/plugin/unite/bookmark.vim	/^function! s:buffer_bookmark_action.func(candidate) "{{{$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_default_settings	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! s:buffer_default_settings() "{{{$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
bufferline#algos#fixed_position#modify	bundle/vim-bufferline/autoload/bufferline/algos/fixed_position.vim	/^function! bufferline#algos#fixed_position#modify(names)$/;"	f
bufferline#generate_string	bundle/vim-bufferline/plugin/bufferline.vim	/^function! bufferline#generate_string()$/;"	f
bufferline#get_echo_string	bundle/vim-bufferline/autoload/bufferline.vim	/^function! bufferline#get_echo_string()$/;"	f
bufferline#get_status_string	bundle/vim-bufferline/plugin/bufferline.vim	/^function! bufferline#get_status_string()$/;"	f
bufferline#init_echo	bundle/vim-bufferline/autoload/bufferline.vim	/^function! bufferline#init_echo()$/;"	f
bufferline#refresh_status	bundle/vim-bufferline/plugin/bufferline.vim	/^function! bufferline#refresh_status()$/;"	f
buffunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f
buflist	fzf.vim	/^function! s:buflist()$/;"	f
buflisted	bundle/unite.vim/autoload/unite/util.vim	/^function! s:buflisted(bufnr) "{{{$/;"	f
buflisted	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! s:buflisted(bufnr) "{{{$/;"	f
bufopen	fzf.vim	/^function! s:bufopen(e)$/;"	f
buftab	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f
bufwins	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f
build_sections	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
buildpat	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f
builtin	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^builtin = Builtin(_builtins)$/;"	v
builtin	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate.compiled import (CompiledObject, create, builtin,$/;"	i
builtin_test	bundle/jedi-vim/jedi/test/completion/on_import.py	/^def builtin_test():$/;"	f
builtins	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import __builtin__ as builtins$/;"	i
builtins	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
builtins	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi._compatibility import unicode, builtins$/;"	i
builtins	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi._compatibility import builtins$/;"	i
builtins	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode$/;"	i
builtins	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi._compatibility import builtins, is_py3$/;"	i
builtins_getattr	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def builtins_getattr(evaluator, objects, names, defaults=None):$/;"	f
builtins_isinstance	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def builtins_isinstance(evaluator, objects, types):$/;"	f
builtins_reversed	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def builtins_reversed(evaluator, sequences, obj):$/;"	f
builtins_super	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def builtins_super(evaluator, types, objects, scope):$/;"	f
builtins_type	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def builtins_type(evaluator, objects, bases, dicts):$/;"	f
bundle.is_pinned	bundle/vundle/autoload/vundle/config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	bundle/vundle/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
byfname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f
c	bundle/jedi-vim/jedi/test/completion/arrays.py	/^c = [[a,""]]$/;"	v
c	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def c(self):$/;"	m	class:Base
c	bundle/jedi-vim/jedi/test/completion/goto.py	/^c = b$/;"	v
c	bundle/jedi-vim/jedi/test/completion/goto.py	/^def c():$/;"	f
c	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    c = set()$/;"	v	class:A
c	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^c = con.cursor()$/;"	v
c	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^c = re.compile(r'a')$/;"	v
c	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^c = Cls(1)$/;"	v
c	bundle/jedi-vim/jedi/test/static_analysis/attribute_warnings.py	/^c = SetattrCls({'a': 'b'})$/;"	v
c	bundle/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
cProfile	bundle/jedi-vim/jedi/scripts/profile.py	/^import cProfile$/;"	i
c_comm	bundle/vim-colorschemes/colors/spectro.vim	/^let c_comm = Hsl2rgb(71)$/;"	v
c_comment_strings	bundle/vim-colorschemes/colors/mopkai.vim	/^let c_comment_strings = 1$/;"	v
c_curs	bundle/vim-colorschemes/colors/spectro.vim	/^let c_curs = Hsl2rgb(58)$/;"	v
c_erro	bundle/vim-colorschemes/colors/spectro.vim	/^let c_erro = Hsl2rgb(0)$/;"	v
c_gnu	bundle/vim-colorschemes/colors/256-grayvim.vim	/^let c_gnu = 1$/;"	v
c_gnu	bundle/vim-colorschemes/colors/256-jungle.vim	/^let c_gnu = 1$/;"	v
c_gnu	bundle/vim-colorschemes/colors/devbox-dark-256.vim	/^let c_gnu = 1$/;"	v
c_gnu	bundle/vim-colorschemes/colors/mopkai.vim	/^let c_gnu = 1$/;"	v
c_iden	bundle/vim-colorschemes/colors/spectro.vim	/^let c_iden = Hsl2rgb(42)$/;"	v
c_numb	bundle/vim-colorschemes/colors/spectro.vim	/^let c_numb = Hsl2rgb(128)$/;"	v
c_prep	bundle/vim-colorschemes/colors/spectro.vim	/^let c_prep = Hsl2rgb(8)$/;"	v
c_spec	bundle/vim-colorschemes/colors/spectro.vim	/^let c_spec = Hsl2rgb(27)$/;"	v
c_stat	bundle/vim-colorschemes/colors/spectro.vim	/^let c_stat = Hsl2rgb(212)$/;"	v
c_tabl	bundle/vim-colorschemes/colors/spectro.vim	/^let c_tabl = Hsl2rgb(140)$/;"	v
c_visu	bundle/vim-colorschemes/colors/spectro.vim	/^let c_visu = Hsl2rgb(223)$/;"	v
cache	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^    from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
cache	bundle/jedi-vim/jedi/test/test_cache.py	/^from jedi import settings, cache$/;"	i
cache	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^    from jedi import cache$/;"	i
cache	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^from jedi import cache$/;"	i
cache_call_signatures	bundle/jedi-vim/jedi/jedi/cache.py	/^def cache_call_signatures(evaluator, call, source, user_pos):$/;"	f
cache_directory	bundle/jedi-vim/jedi/jedi/settings.py	/^cache_directory = os.path.expanduser(_cache_directory)$/;"	v
cache_star_import	bundle/jedi-vim/jedi/jedi/cache.py	/^def cache_star_import(func):$/;"	f
cache_star_import	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.cache import underscore_memoization, cache_star_import$/;"	i
cachefile	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f
caching_from_neocomplcache_dict	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:caching_from_neocomplcache_dict() "{{{$/;"	f
caching_from_neocomplcache_dict	bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:caching_from_neocomplcache_dict() "{{{$/;"	f
calcfirst	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def calcfirst(self, name):$/;"	m	class:ParserGenerator
calculate	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def calculate(evaluator, left_result, operator, right_result):$/;"	f
calculate	bundle/jedi-vim/jedi/test/completion/precedence.py	/^def calculate(number):$/;"	f
calculate_children	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def calculate_children(evaluator, children):$/;"	f
call	bundle/jedi-vim/jedi/test/completion/invalid.py	/^call = ''$/;"	v
call	bundle/jedi-vim/jedi/test/speed/precedence.py	/^def call(code3):$/;"	f
call_name	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def call_name(self):$/;"	m	class:CallSignature
call_of_name	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^def call_of_name(name, cut_own_trailer=False):$/;"	f
call_signature	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def call_signature(self):$/;"	m	class:UserContext
call_signatures	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def call_signatures(self):$/;"	m	class:Script
call_signatures_validity	bundle/jedi-vim/jedi/jedi/settings.py	/^call_signatures_validity = 3.0$/;"	v
call_unite_buffer_dir	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_buffer_dir(args) "{{{$/;"	f
call_unite_current_dir	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_current_dir(args) "{{{$/;"	f
call_unite_cursor_word	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_cursor_word(args) "{{{$/;"	f
call_unite_empty	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_empty(args) "{{{$/;"	f
call_unite_input	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_input(args) "{{{$/;"	f
call_unite_input_directory	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_input_directory(args) "{{{$/;"	f
call_unite_project_dir	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_project_dir(args) "{{{$/;"	f
call_unite_resume	bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_resume(args) "{{{$/;"	f
can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
capture	bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
capture	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
case_insensitive_completion	bundle/jedi-vim/jedi/jedi/settings.py	/^case_insensitive_completion = True$/;"	v
cases	bundle/jedi-vim/jedi/test/run.py	/^    cases = list(collect_dir_tests(completion_test_dir, test_files))$/;"	v
catch_and_print_exceptions	bundle/jedi-vim/jedi_vim.py	/^def catch_and_print_exceptions(func):$/;"	f
cd	bundle/jedi-vim/jedi/test/completion/goto.py	/^cd = 1$/;"	v
cd	bundle/jedi-vim/jedi/test/completion/goto.py	/^cd = c$/;"	v
cd	bundle/jedi-vim/jedi/test/completion/goto.py	/^cd = e$/;"	v
cd_file_directory	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:cd_file_directory() "{{{$/;"	f
cd_input_directory	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:cd_input_directory() "{{{$/;"	f
cdable_action_file.func	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:cdable_action_file.func(candidate)$/;"	f
cdable_action_rec.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec.func(candidate)$/;"	f
cdable_action_rec_async.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_async.func(candidate)$/;"	f
cdable_action_rec_parent.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent.func(candidate)$/;"	f
cdable_action_rec_parent_async.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent_async.func(candidate)$/;"	f
cdable_action_rec_project.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project.func(candidate)$/;"	f
cdable_action_rec_project_async.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project_async.func(candidate)$/;"	f
chCwd	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
chain	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from itertools import chain$/;"	i
chain	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^from itertools import chain$/;"	i
change_options	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^        def change_options(m):$/;"	f	function:_parse_function_doc
changelist	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f
char_range	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
check	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^    def check(obj):$/;"	f	function:_element_calculate
check	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def check(a):$/;"	f
check	bundle/jedi-vim/jedi/test/completion/usages.py	/^def check(instance):$/;"	f
check	bundle/jedi-vim/jedi/test/refactor.py	/^    def check(self):$/;"	m	class:RefactoringCase
check	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def check(defs):$/;"	f	function:test_signature_params
check	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def check(self, source, desired):$/;"	m	class:MixinTestFullName
check	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def check(self, source, desired):$/;"	m	class:TestFullDefinedName
check	bundle/jedi-vim/jedi/test/test_cache.py	/^    def check(column, call_name, path=None):$/;"	f	function:test_cache_call_signatures
check	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    def check(source, result, column=None):$/;"	f	function:test_after_from
check	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def check(src, result):$/;"	f	function:test_param_splitting
check	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def check(literal):$/;"	f	function:test_ur_literals
check_additions	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def check_additions(arglist, add_name):$/;"	f	function:_check_array_additions
check_array_additions	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^def check_array_additions(evaluator, array):$/;"	f
check_array_instances	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^def check_array_instances(evaluator, instance):$/;"	f
check_bundle_name	bundle/vundle/autoload/vundle/config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
check_children	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def check_children(node):$/;"	f	function:get_module_statements
check_copy_func	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_copy_func(filename) "{{{$/;"	f
check_defined	bundle/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined	bundle/vim-bufferline/plugin/bufferline.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_names	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def check_defined_names(self, source, names):$/;"	m	class:TestDefinedNames
check_defined_section	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_definition_by_marker	bundle/jedi-vim/jedi/test/test_regression.py	/^    def check_definition_by_marker(self, source, after_cursor, names):$/;"	m	class:TestRegression
check_delete_func	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_delete_func(filename) "{{{$/;"	f
check_dotted	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^    def check_dotted(children):$/;"	f	function:importer_from_error_statement
check_error_statements	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^def check_error_statements(module, pos):$/;"	f
check_flow_information	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def check_flow_information(evaluator, flow, search_name, pos):$/;"	f
check_follow_definition_types	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^def check_follow_definition_types(source):$/;"	f
check_force_quit	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:check_force_quit(vimfiler, action) "{{{$/;"	f
check_fp	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def check_fp(src, number_parsers_used, number_of_splits=None, number_of_misses=0):$/;"	f
check_fs	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def check_fs(path):$/;"	f	function:get_modules_containing_name
check_hasattr	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def check_hasattr(node, suite):$/;"	f	function:_check_for_exception_catch
check_in_path	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:check_in_path()$/;"	f
check_interpreter_complete	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def check_interpreter_complete(self, source, namespace, completions,$/;"	m	class:TestInterpreterAPI
check_is_directory	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:check_is_directory(directory)$/;"	f
check_lines	bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:check_lines() "{{{$/;"	f
check_loaded	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^    def check_loaded(*modules):$/;"	f	function:test_preload_modules
check_match	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def check_match(cls, exception):$/;"	f	function:_check_for_exception_catch
check_mixed_indent	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_nodes	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def check_nodes(self):$/;"	m	class:IfStmt
check_old_cache	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_old_cache	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_over_write	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_over_write(dest_dir, filename, overwrite_method, is_reset_method) "{{{$/;"	f
check_python2_nested_param	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def check_python2_nested_param(node):$/;"	f	function:_create_params
check_python_file	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def check_python_file(path):$/;"	f	function:get_modules_containing_name
check_redraw	bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:check_redraw() "{{{$/;"	f
check_tree	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! s:check_tree(files) "{{{$/;"	f
check_try_for_except	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def check_try_for_except(obj, exception):$/;"	f	function:_check_for_exception_catch
check_tuple_assignments	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def check_tuple_assignments(types, name):$/;"	f
check_types	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^        def check_types(types):$/;"	f	function:Script._analysis
check_virtual_env	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    def check_virtual_env(sys_path):$/;"	f	function:get_sys_path
checkargs	bundle/vim-colorschemes/colors/calmar256-light.vim	/^function! s:checkargs(arg)$/;"	f
checkargs	bundle/vim-colorschemes/colors/pink.vim	/^function! s:checkargs(arg)$/;"	f
checkbuf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f
children	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def children(self):$/;"	m	class:InstanceElement
chknearby	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f
choices	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f
chomp	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
choose	bundle/vim-colorschemes/colors/bocau.vim	/^function! s:choose(mediocre,good)$/;"	f
choose	bundle/vim-colorschemes/colors/jiks.vim	/^function! s:choose(mediocre,good)$/;"	f
choose	bundle/vim-colorschemes/colors/vividchalk.vim	/^function! s:choose(mediocre,good)$/;"	f
choose_action	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:choose_action() "{{{$/;"	f
choose_action	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:choose_action() "{{{$/;"	f
chop	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f
chop	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
clamp	bundle/vim-colorschemes/colors/saturn.vim	/^fu! s:clamp(value, bottom, up)$/;"	f
class	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta') == set(['class'])$/;"	i
class	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta; timedelta') == set(['class'])$/;"	i
class_attr	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    class_attr = ''$/;"	v	class:Cls
class_attr	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    class_attr = a$/;"	v	class:Cls
class_func	bundle/jedi-vim/jedi/test/completion/goto.py	/^    def class_func(func):$/;"	m	class:ClassDec
class_sub	bundle/jedi-vim/jedi/test/completion/classes.py	/^    class_sub = 3$/;"	v	class:SubClass
class_super	bundle/jedi-vim/jedi/test/completion/classes.py	/^    class_super = 3$/;"	v	class:SuperClass
class_v	bundle/jedi-vim/jedi/test/completion/usages.py	/^    class_v = 1$/;"	v	class:TestClassVar
class_var	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    class_var = 3$/;"	v	class:MethodDecoratorAsClass
class_var	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def class_var(self):$/;"	m	class:MethodDecorators
class_var	bundle/jedi-vim/jedi/test/completion/usages.py	/^    class_var = 1$/;"	v	class:Super
class_var	bundle/jedi-vim/jedi/test/completion/usages.py	/^    class_var = 1$/;"	v	class:TestClass
classes	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.api import classes$/;"	i
classes	bundle/jedi-vim/jedi/jedi/api/usages.py	/^from jedi.api import classes$/;"	i
classes	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import classes$/;"	i
classes	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    assert 10 < len(Script("from . import classes", 1, 6, '').completions()) < 30$/;"	i
classes	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    assert len(Script("from . import classes", 1, 5, '').completions()) > 30$/;"	i
classgetter	bundle/jedi-vim/jedi/test/completion/classes.py	/^def classgetter():$/;"	f
classifiers	bundle/jedi-vim/jedi/setup.py	/^      classifiers=[$/;"	v
clean_jedi_cache	bundle/jedi-vim/jedi/test/conftest.py	/^def clean_jedi_cache(request):$/;"	f
cleandoc	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from inspect import cleandoc$/;"	i
cleandoc	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from inspect import cleandoc$/;"	i
clear	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	bundle/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear_cache	bundle/jedi-vim/jedi/jedi/cache.py	/^    def clear_cache(self):$/;"	m	class:ParserPickling
clear_call_signatures	bundle/jedi-vim/jedi_vim.py	/^def clear_call_signatures():$/;"	f
clear_complete	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:clear_complete() "{{{$/;"	f
clear_highlight	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:clear_highlight() "{{{$/;"	f
clear_mark_all_lines	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:clear_mark_all_lines() "{{{$/;"	f
clear_marks	bundle/unite.vim/autoload/unite/action.vim	/^function! s:clear_marks(candidates) "{{{$/;"	f
clear_names	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^        def clear_names(children):$/;"	f	function:Parser._stack_removal
clear_previewed_buffer_list	bundle/unite.vim/autoload/unite/view.vim	/^function! s:clear_previewed_buffer_list() "{{{$/;"	f
clear_time_caches	bundle/jedi-vim/jedi/jedi/cache.py	/^def clear_time_caches(delete_all=False):$/;"	f
clipboard_copy	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:clipboard_copy() "{{{$/;"	f
clipboard_move	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:clipboard_move() "{{{$/;"	f
clipboard_paste	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:clipboard_paste() "{{{$/;"	f
close	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def close(self):$/;"	m	class:ParserNode
close	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:close() "{{{$/;"	f
closeChildren	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
closure	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^        def closure(state):$/;"	f	function:ParserGenerator.make_dfa
cls	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^cls = random.choice([A, B])$/;"	v
cmdline_call_signatures	bundle/jedi-vim/jedi_vim.py	/^def cmdline_call_signatures(signatures):$/;"	f
code	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def code(self):$/;"	m	class:Error
codecs	bundle/syntastic/syntax_checkers/python/codec.py	/^import codecs$/;"	i
col	bundle/jedi-vim/jedi/test/completion/docstring.py	/^    import collections as col$/;"	i
collect_comparison	bundle/jedi-vim/jedi/test/conftest.py	/^    def collect_comparison(self):$/;"	m	class:StaticAnalysisCase
collect_dir_tests	bundle/jedi-vim/jedi/test/refactor.py	/^def collect_dir_tests(base_dir, test_files):$/;"	f
collect_dir_tests	bundle/jedi-vim/jedi/test/run.py	/^def collect_dir_tests(base_dir, test_files, check_thirdparty=False):$/;"	f
collect_file_tests	bundle/jedi-vim/jedi/test/refactor.py	/^def collect_file_tests(source, path, lines_to_execute):$/;"	f
collect_file_tests	bundle/jedi-vim/jedi/test/run.py	/^def collect_file_tests(lines, lines_to_execute):$/;"	f
collect_ignore	bundle/jedi-vim/jedi/conftest.py	/^collect_ignore = ["setup.py"]$/;"	v
collect_static_analysis_tests	bundle/jedi-vim/jedi/test/conftest.py	/^def collect_static_analysis_tests(base_dir, test_files):$/;"	f
collect_tests	bundle/jedi-vim/conftest.py	/^    def collect_tests():$/;"	f	function:pytest_generate_tests
collections	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^import collections$/;"	i
collections	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
collections	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
collections_namedtuple	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def collections_namedtuple(evaluator, obj, params):$/;"	f
color	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>color(r, g, b)$/;"	f
color	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>color(r, g, b)$/;"	f
color_for	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:color_for(id, fgbg)$/;"	f
colorama	bundle/jedi-vim/jedi/test/test_utils.py	/^            import colorama$/;"	i
colors	bundle/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
colors_name	bundle/vim-colorschemes/colors/SlateDark.vim	/^let colors_name = "SlateDark"$/;"	v
colors_name	bundle/vim-colorschemes/colors/adaryn.vim	/^let colors_name = "adaryn"$/;"	v
colors_name	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let colors_name = "ansi_blows"$/;"	v
colors_name	bundle/vim-colorschemes/colors/apprentice.vim	/^let colors_name = 'apprentice'$/;"	v
colors_name	bundle/vim-colorschemes/colors/automation.vim	/^let colors_name = "automation"$/;"	v
colors_name	bundle/vim-colorschemes/colors/autumn.vim	/^let colors_name = "autumn"$/;"	v
colors_name	bundle/vim-colorschemes/colors/autumnleaf.vim	/^let colors_name="AutumnLeaf"$/;"	v
colors_name	bundle/vim-colorschemes/colors/babymate256.vim	/^let colors_name = "babymate256"$/;"	v
colors_name	bundle/vim-colorschemes/colors/badwolf.vim	/^let colors_name = "badwolf"$/;"	v
colors_name	bundle/vim-colorschemes/colors/basic.vim	/^let colors_name = "basic"$/;"	v
colors_name	bundle/vim-colorschemes/colors/bensday.vim	/^let colors_name = "bensday"$/;"	v
colors_name	bundle/vim-colorschemes/colors/blacklight.vim	/^let colors_name="blacklight"$/;"	v
colors_name	bundle/vim-colorschemes/colors/blink.vim	/^let colors_name = "blink"$/;"	v
colors_name	bundle/vim-colorschemes/colors/blueprint.vim	/^let colors_name = "blueprint"$/;"	v
colors_name	bundle/vim-colorschemes/colors/blueshift.vim	/^let colors_name = "blueshift"$/;"	v
colors_name	bundle/vim-colorschemes/colors/bocau.vim	/^let colors_name = "bocau"$/;"	v
colors_name	bundle/vim-colorschemes/colors/breeze.vim	/^let colors_name = "breeze"$/;"	v
colors_name	bundle/vim-colorschemes/colors/burnttoast256.vim	/^let colors_name = "burnttoast256"$/;"	v
colors_name	bundle/vim-colorschemes/colors/busierbee.vim	/^let colors_name = "busierbee"$/;"	v
colors_name	bundle/vim-colorschemes/colors/busybee.vim	/^let colors_name = "busybee"$/;"	v
colors_name	bundle/vim-colorschemes/colors/buttercream.vim	/^let colors_name = "buttercream"$/;"	v
colors_name	bundle/vim-colorschemes/colors/bvemu.vim	/^let colors_name="bvemu"$/;"	v
colors_name	bundle/vim-colorschemes/colors/campfire.vim	/^let colors_name = "campfire"$/;"	v
colors_name	bundle/vim-colorschemes/colors/candy.vim	/^let colors_name = "candy"$/;"	v
colors_name	bundle/vim-colorschemes/colors/candyman.vim	/^let colors_name = "candyman"$/;"	v
colors_name	bundle/vim-colorschemes/colors/chance-of-storm.vim	/^let colors_name = "chance-of-storm"$/;"	v
colors_name	bundle/vim-colorschemes/colors/chrysoprase.vim	/^let colors_name = "chrysoprase"$/;"	v
colors_name	bundle/vim-colorschemes/colors/cleanphp.vim	/^let colors_name = "cleanphp"$/;"	v
colors_name	bundle/vim-colorschemes/colors/clearance.vim	/^let colors_name = "clearance"$/;"	v
colors_name	bundle/vim-colorschemes/colors/codeburn.vim	/^let colors_name = "codeburn-0.2"$/;"	v
colors_name	bundle/vim-colorschemes/colors/coffee.vim	/^let colors_name = "coffee"$/;"	v
colors_name	bundle/vim-colorschemes/colors/coldgreen.vim	/^let colors_name = "coldgreen"$/;"	v
colors_name	bundle/vim-colorschemes/colors/colorzone.vim	/^let colors_name = "colorzone"$/;"	v
colors_name	bundle/vim-colorschemes/colors/corn.vim	/^let colors_name = "Corn"$/;"	v
colors_name	bundle/vim-colorschemes/colors/darkblack.vim	/^let colors_name = "darkblack"$/;"	v
colors_name	bundle/vim-colorschemes/colors/darth.vim	/^let colors_name="darth"$/;"	v
colors_name	bundle/vim-colorschemes/colors/dawn.vim	/^let colors_name = "dawn"$/;"	v
colors_name	bundle/vim-colorschemes/colors/delek.vim	/^let colors_name = "delek"$/;"	v
colors_name	bundle/vim-colorschemes/colors/detailed.vim	/^let colors_name = 'detailed'$/;"	v
colors_name	bundle/vim-colorschemes/colors/developer.vim	/^let colors_name = "developer"$/;"	v
colors_name	bundle/vim-colorschemes/colors/disciple.vim	/^let colors_name = 'disciple'$/;"	v
colors_name	bundle/vim-colorschemes/colors/django.vim	/^let colors_name = "django"$/;"	v
colors_name	bundle/vim-colorschemes/colors/dull.vim	/^let colors_name = "dull"$/;"	v
colors_name	bundle/vim-colorschemes/colors/dusk.vim	/^let colors_name = "dusk"$/;"	v
colors_name	bundle/vim-colorschemes/colors/earendel.vim	/^let colors_name = "earendel"$/;"	v
colors_name	bundle/vim-colorschemes/colors/earth.vim	/^let colors_name = "earth"$/;"	v
colors_name	bundle/vim-colorschemes/colors/earthburn.vim	/^let colors_name = "earthburn"$/;"	v
colors_name	bundle/vim-colorschemes/colors/eclm_wombat.vim	/^let colors_name = "eclm_wombat"$/;"	v
colors_name	bundle/vim-colorschemes/colors/ecostation.vim	/^let colors_name = "ecostation"$/;"	v
colors_name	bundle/vim-colorschemes/colors/editplus.vim	/^let colors_name = "EditPlus"$/;"	v
colors_name	bundle/vim-colorschemes/colors/edo_sea.vim	/^let colors_name = "Edo_sea"$/;"	v
colors_name	bundle/vim-colorschemes/colors/ekinivim.vim	/^let colors_name = "ekinivim"$/;"	v
colors_name	bundle/vim-colorschemes/colors/emacs.vim	/^let colors_name = "emacs"$/;"	v
colors_name	bundle/vim-colorschemes/colors/evening_2.vim	/^let colors_name = "evening_2"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fine_blue.vim	/^let colors_name = "fine_blue"$/;"	v
colors_name	bundle/vim-colorschemes/colors/flatcolor.vim	/^let colors_name = "flatcolor"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fnaqevan.vim	/^let colors_name = "fnaqevan"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fog.vim	/^let colors_name = "fog"$/;"	v
colors_name	bundle/vim-colorschemes/colors/freya.vim	/^let colors_name = "freya"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fruidle.vim	/^let colors_name = "fruidle"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fruit.vim	/^let colors_name = "fruit"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fruity.vim	/^let colors_name = "fruity"$/;"	v
colors_name	bundle/vim-colorschemes/colors/fu.vim	/^let colors_name = "fu"$/;"	v
colors_name	bundle/vim-colorschemes/colors/gardener.vim	/^let colors_name   = "gardener"$/;"	v
colors_name	bundle/vim-colorschemes/colors/gemcolors.vim	/^let colors_name = "gemcolors"$/;"	v
colors_name	bundle/vim-colorschemes/colors/getafe.vim	/^let colors_name = "getafe"$/;"	v
colors_name	bundle/vim-colorschemes/colors/github.vim	/^let colors_name = "github"$/;"	v
colors_name	bundle/vim-colorschemes/colors/google.vim	/^let colors_name = "google"$/;"	v
colors_name	bundle/vim-colorschemes/colors/grape.vim	/^let colors_name = "grape"$/;"	v
colors_name	bundle/vim-colorschemes/colors/gravity.vim	/^let colors_name = "gravity"$/;"	v
colors_name	bundle/vim-colorschemes/colors/graywh.vim	/^let colors_name = "graywh"$/;"	v
colors_name	bundle/vim-colorschemes/colors/greens.vim	/^let colors_name = "greens"$/;"	v
colors_name	bundle/vim-colorschemes/colors/grey2.vim	/^let colors_name = "grey2"$/;"	v
colors_name	bundle/vim-colorschemes/colors/greyblue.vim	/^let colors_name = "greyblue"$/;"	v
colors_name	bundle/vim-colorschemes/colors/guardian.vim	/^let colors_name   = "Guardian"$/;"	v
colors_name	bundle/vim-colorschemes/colors/heliotrope.vim	/^let colors_name = "heliotrope"$/;"	v
colors_name	bundle/vim-colorschemes/colors/herald.vim	/^let colors_name = "herald"$/;"	v
colors_name	bundle/vim-colorschemes/colors/hornet.vim	/^let colors_name = "hornet"$/;"	v
colors_name	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let colors_name = "hybrid-light"$/;"	v
colors_name	bundle/vim-colorschemes/colors/hybrid.vim	/^let colors_name = "hybrid"$/;"	v
colors_name	bundle/vim-colorschemes/colors/industrial.vim	/^let colors_name = "industrial"$/;"	v
colors_name	bundle/vim-colorschemes/colors/industry.vim	/^let colors_name = "industry"$/;"	v
colors_name	bundle/vim-colorschemes/colors/inkpot.vim	/^let colors_name = "inkpot"$/;"	v
colors_name	bundle/vim-colorschemes/colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	bundle/vim-colorschemes/colors/ironman.vim	/^let colors_name = "ironman"$/;"	v
colors_name	bundle/vim-colorschemes/colors/jelleybeans.vim	/^let colors_name = "jellybeans"$/;"	v
colors_name	bundle/vim-colorschemes/colors/jellybeans.vim	/^let colors_name = "jellybeans"$/;"	v
colors_name	bundle/vim-colorschemes/colors/jellyx.vim	/^let colors_name = 'jellyx'$/;"	v
colors_name	bundle/vim-colorschemes/colors/jhdark.vim	/^let colors_name = "jhdark"$/;"	v
colors_name	bundle/vim-colorschemes/colors/jhlight.vim	/^let colors_name = "jhlight"$/;"	v
colors_name	bundle/vim-colorschemes/colors/jiks.vim	/^let colors_name = "jiks"$/;"	v
colors_name	bundle/vim-colorschemes/colors/kellys.vim	/^let colors_name = "kellys"$/;"	v
colors_name	bundle/vim-colorschemes/colors/kiss.vim	/^let colors_name = "kiss"$/;"	v
colors_name	bundle/vim-colorschemes/colors/kyle.vim	/^let colors_name = "kyle"$/;"	v
colors_name	bundle/vim-colorschemes/colors/landscape.vim	/^let colors_name = "landscape"$/;"	v
colors_name	bundle/vim-colorschemes/colors/last256.vim	/^let colors_name = "last256"$/;"	v
colors_name	bundle/vim-colorschemes/colors/leglight2.vim	/^let colors_name = "leglight2"$/;"	v
colors_name	bundle/vim-colorschemes/colors/leya.vim	/^let colors_name="leya"$/;"	v
colors_name	bundle/vim-colorschemes/colors/lightcolors.vim	/^let colors_name = "lightcolors"$/;"	v
colors_name	bundle/vim-colorschemes/colors/lilypink.vim	/^let colors_name = "lilypink"$/;"	v
colors_name	bundle/vim-colorschemes/colors/liquidcarbon.vim	/^let colors_name = "liquidcarbon"$/;"	v
colors_name	bundle/vim-colorschemes/colors/lizard.vim	/^let colors_name = "lizard"$/;"	v
colors_name	bundle/vim-colorschemes/colors/lodestone.vim	/^let colors_name="lodestone"$/;"	v
colors_name	bundle/vim-colorschemes/colors/martin_krischik.vim	/^let colors_name = "martin_krischik"$/;"	v
colors_name	bundle/vim-colorschemes/colors/mayansmoke.vim	/^let colors_name = "mayansmoke"$/;"	v
colors_name	bundle/vim-colorschemes/colors/mdark.vim	/^let colors_name = "mdark"$/;"	v
colors_name	bundle/vim-colorschemes/colors/metacosm.vim	/^let colors_name = "metacosm"$/;"	v
colors_name	bundle/vim-colorschemes/colors/mint.vim	/^let colors_name = "mint"$/;"	v
colors_name	bundle/vim-colorschemes/colors/mod_tcsoft.vim	/^let colors_name = "mod_tcsoft"$/;"	v
colors_name	bundle/vim-colorschemes/colors/moria.vim	/^let colors_name = "moria"$/;"	v
colors_name	bundle/vim-colorschemes/colors/mrpink.vim	/^let colors_name = "mrpink"$/;"	v
colors_name	bundle/vim-colorschemes/colors/mustang.vim	/^let colors_name = "mustang"$/;"	v
colors_name	bundle/vim-colorschemes/colors/native.vim	/^let colors_name = "native"$/;"	v
colors_name	bundle/vim-colorschemes/colors/nazca.vim	/^let colors_name = "nazca"$/;"	v
colors_name	bundle/vim-colorschemes/colors/nefertiti.vim	/^let colors_name = "nefertiti"$/;"	v
colors_name	bundle/vim-colorschemes/colors/neon.vim	/^let colors_name = "neon"$/;"	v
colors_name	bundle/vim-colorschemes/colors/nerv-ous.vim	/^let colors_name = "nerv-ous"$/;"	v
colors_name	bundle/vim-colorschemes/colors/newspaper.vim	/^let colors_name = "newspaper"$/;"	v
colors_name	bundle/vim-colorschemes/colors/night.vim	/^let colors_name = "night"$/;"	v
colors_name	bundle/vim-colorschemes/colors/no_quarter.vim	/^let colors_name = "no_quarter"$/;"	v
colors_name	bundle/vim-colorschemes/colors/obsidian.vim	/^let colors_name="obsidian"$/;"	v
colors_name	bundle/vim-colorschemes/colors/paintbox.vim	/^let colors_name = "paintbox"$/;"	v
colors_name	bundle/vim-colorschemes/colors/perfect.vim	/^let colors_name = "perfect"$/;"	v
colors_name	bundle/vim-colorschemes/colors/pf_earth.vim	/^let colors_name = "pf_earth"$/;"	v
colors_name	bundle/vim-colorschemes/colors/phd.vim	/^let colors_name = "phd"$/;"	v
colors_name	bundle/vim-colorschemes/colors/playroom.vim	/^let colors_name = "playroom"$/;"	v
colors_name	bundle/vim-colorschemes/colors/putty.vim	/^let colors_name = "putty"$/;"	v
colors_name	bundle/vim-colorschemes/colors/pyte.vim	/^let colors_name = "pyte"$/;"	v
colors_name	bundle/vim-colorschemes/colors/radicalgoodspeed.vim	/^let colors_name = "radicalgoodspeed"$/;"	v
colors_name	bundle/vim-colorschemes/colors/rainbow_fine_blue.vim	/^let colors_name = "fine_blue"$/;"	v
colors_name	bundle/vim-colorschemes/colors/rainbow_fruit.vim	/^let colors_name = "fruit"$/;"	v
colors_name	bundle/vim-colorschemes/colors/rainbow_neon.vim	/^let colors_name = "neon"$/;"	v
colors_name	bundle/vim-colorschemes/colors/rcg_gui.vim	/^let colors_name = "rcg_gui"$/;"	v
colors_name	bundle/vim-colorschemes/colors/rdark-terminal.vim	/^let colors_name="rdark-terminal"$/;"	v
colors_name	bundle/vim-colorschemes/colors/rdark.vim	/^let colors_name = "rdark"$/;"	v
colors_name	bundle/vim-colorschemes/colors/satori.vim	/^let colors_name = "satori"$/;"	v
colors_name	bundle/vim-colorschemes/colors/sea.vim	/^let colors_name = "sea"$/;"	v
colors_name	bundle/vim-colorschemes/colors/seoul.vim	/^let colors_name = "seoul"$/;"	v
colors_name	bundle/vim-colorschemes/colors/shobogenzo.vim	/^let colors_name = "shobogenzo"$/;"	v
colors_name	bundle/vim-colorschemes/colors/softlight.vim	/^let colors_name="softlight"$/;"	v
colors_name	bundle/vim-colorschemes/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	bundle/vim-colorschemes/colors/sorcerer.vim	/^let colors_name = "sorcerer"$/;"	v
colors_name	bundle/vim-colorschemes/colors/southernlights.vim	/^let colors_name = "southernlights"$/;"	v
colors_name	bundle/vim-colorschemes/colors/southwest-fog.vim	/^let colors_name = "southwest-fog"$/;"	v
colors_name	bundle/vim-colorschemes/colors/spring.vim	/^let colors_name = "spring"$/;"	v
colors_name	bundle/vim-colorschemes/colors/stackoverflow.vim	/^let colors_name = "stackoverflow"$/;"	v
colors_name	bundle/vim-colorschemes/colors/strange.vim	/^let colors_name = "strange"$/;"	v
colors_name	bundle/vim-colorschemes/colors/summerfruit.vim	/^let colors_name = "summerfruit"$/;"	v
colors_name	bundle/vim-colorschemes/colors/swamplight.vim	/^let colors_name = "swamplight"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tango-morning.vim	/^let colors_name = "tango-morning"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tango.vim	/^let colors_name = "tango"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tango2.vim	/^let colors_name = "tango2"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tangoX.vim	/^let colors_name = "tangoX"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tangoshady.vim	/^let colors_name = "tangoshady"$/;"	v
colors_name	bundle/vim-colorschemes/colors/taqua.vim	/^let colors_name="taqua"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tchaba.vim	/^let colors_name = "tchaba"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tchaba2.vim	/^let colors_name = "tchaba"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tcsoft.vim	/^let colors_name = "TCSoft"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tesla.vim	/^let colors_name = "tesla"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tetragrammaton.vim	/^let colors_name = "tetragrammaton"$/;"	v
colors_name	bundle/vim-colorschemes/colors/textmate16.vim	/^let colors_name = "textmate16"$/;"	v
colors_name	bundle/vim-colorschemes/colors/thestars.vim	/^let colors_name = "thestars"$/;"	v
colors_name	bundle/vim-colorschemes/colors/tir_black.vim	/^let colors_name = "tir_black"$/;"	v
colors_name	bundle/vim-colorschemes/colors/turbo.vim	/^let colors_name = "turbo"$/;"	v
colors_name	bundle/vim-colorschemes/colors/twilight.vim	/^let colors_name = "twilight"$/;"	v
colors_name	bundle/vim-colorschemes/colors/underwater-mod.vim	/^let colors_name = "underwater-mod"$/;"	v
colors_name	bundle/vim-colorschemes/colors/underwater.vim	/^let colors_name = "underwater"$/;"	v
colors_name	bundle/vim-colorschemes/colors/up.vim	/^let colors_name = "up"$/;"	v
colors_name	bundle/vim-colorschemes/colors/vanzan_color.vim	/^let colors_name = "vanzan_color"$/;"	v
colors_name	bundle/vim-colorschemes/colors/visualstudio.vim	/^let colors_name = "visualstudio"$/;"	v
colors_name	bundle/vim-colorschemes/colors/vividchalk.vim	/^let colors_name = "vividchalk"$/;"	v
colors_name	bundle/vim-colorschemes/colors/warm_grey.vim	/^let colors_name = "black_on_white"$/;"	v
colors_name	bundle/vim-colorschemes/colors/winter.vim	/^let colors_name = "winter"$/;"	v
colors_name	bundle/vim-colorschemes/colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
colors_name	bundle/vim-colorschemes/colors/wombat256mod.vim	/^let colors_name = "wombat256mod"$/;"	v
colors_name	bundle/vim-colorschemes/colors/xoria256.vim	/^let colors_name = "xoria256"$/;"	v
colors_name	bundle/vim-colorschemes/colors/xterm16.vim	/^let colors_name = 'xterm16'$/;"	v
colors_name	bundle/vim-colorschemes/colors/zazen.vim	/^let colors_name = "zazen"$/;"	v
colors_name	bundle/vim-colorschemes/colors/zenesque.vim	/^let colors_name = "zenesque"$/;"	v
colors_name	bundle/vim-colorschemes/colors/zephyr.vim	/^let colors_name   = "zephyr"$/;"	v
colour	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>colour(r, g, b)$/;"	f
colour	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>colour(r, g, b)$/;"	f
column	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def column(self):$/;"	m	class:BaseDefinition
column	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def column(self):$/;"	m	class:Error
column.define_syntax	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.define_syntax	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.define_syntax	bundle/vimfiler.vim/autoload/vimfiler/columns/type.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.get	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^function! s:column.get(file, context) "{{{$/;"	f
column.get	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^function! s:column.get(file, context) "{{{$/;"	f
column.get	bundle/vimfiler.vim/autoload/vimfiler/columns/type.vim	/^function! s:column.get(file, context) "{{{$/;"	f
column.length	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^function! s:column.length(files, context) "{{{$/;"	f
column.length	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^function! s:column.length(files, context) "{{{$/;"	f
column.length	bundle/vimfiler.vim/autoload/vimfiler/columns/type.vim	/^function! s:column.length(files, context) "{{{$/;"	f
com	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
combinations	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
comment	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^comment = r'#[^\\r\\n]*'$/;"	v
common	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/cache.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi import common$/;"	i
common	bundle/jedi-vim/jedi/jedi/refactoring.py	/^from jedi import common$/;"	i
common_head	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
compare	bundle/jedi-vim/jedi/test/test_new_parser.py	/^    def compare(string):$/;"	f	function:test_basic_parsing
compare	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare_array	bundle/jedi-vim/jedi/jedi/api/usages.py	/^    def compare_array(definitions):$/;"	f	function:usages
compare_filename	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! s:compare_filename(i1, i2)$/;"	f
compare_word	bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:compare_word(i1, i2)$/;"	f
comparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f
comparison	bundle/jedi-vim/jedi/test/run.py	/^        def comparison(definition):$/;"	f	function:IntegrationTestCase.run_goto_definitions
compfnlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f
compileall	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^    import compileall$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import compiled$/;"	i
compiled	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi.evaluate import compiled, representation$/;"	i
compiled_objects_cache	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def compiled_objects_cache(func):$/;"	f
complete	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def complete(self):$/;"	m	class:Completion
complete	bundle/jedi-vim/jedi/jedi/utils.py	/^        def complete(self, text, state):$/;"	m	class:setup_readline.JediRL
complete	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:complete() "{{{$/;"	f
completeSymbols	bundle/vim-gotosymbol/plugin/taglist.vim	/^    function! s:completeSymbols(ArgLead, CmdLine, CursoPos)$/;"	f
complete_bookmark_filename	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:complete_bookmark_filename(arglead, cmdline, cursorpos) "{{{$/;"	f
completion	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
completion_names	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def completion_names(self, evaluator, only_modules=False):$/;"	m	class:Importer
completion_names	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^def completion_names(evaluator, imp, pos):$/;"	f
completion_parts	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^def completion_parts(path_until_cursor):$/;"	f
completion_parts	bundle/jedi-vim/jedi/jedi/utils.py	/^from jedi.api.helpers import completion_parts$/;"	i
completion_test_dir	bundle/jedi-vim/jedi/test/run.py	/^    completion_test_dir = '..\/test\/completion'$/;"	v
completions	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def completions(self):$/;"	m	class:Script
completions	bundle/jedi-vim/jedi/test/test_utils.py	/^    def completions(self, text):$/;"	m	class:TestSetupReadline
completions	bundle/jedi-vim/jedi_vim.py	/^def completions():$/;"	f
compmatlen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f
compmreb	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f
compmref	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f
composite	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def composite():$/;"	f
comptime	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f
compval	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f
con	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^con = sqlite3.connect()$/;"	v
concat	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:concat(list) abort$/;"	f
conditional_method	bundle/jedi-vim/jedi/test/completion/classes.py	/^        def conditional_method(self):$/;"	f	function:TestX.normal_method
configured_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
conj	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conn	bundle/jedi-vim/jedi/test/completion/thirdparty/psycopg2_.py	/^conn = psycopg2.connect('dbname=test')$/;"	v
cons	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
constant	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def constant(self):$/;"	m	class:MethodDecorators
constant	bundle/jedi-vim/jedi/test/completion/precedence.py	/^constant = 1$/;"	v
cont_str	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^cont_str = group(r"[bBuU]?[rR]?'[^\\n'\\\\]*(?:\\\\.[^\\n'\\\\]*)*" +$/;"	v
contains_multibyte	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
content	bundle/jedi-vim/test/documentation.vim	/^        let content = join(getline(1,'$'), "\\n")$/;"	v
contextlib	bundle/jedi-vim/jedi/jedi/common.py	/^import contextlib$/;"	i
convert	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:convert(rgb) abort$/;"	f
convert_leaf	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def convert_leaf(self, grammar, type, value, prefix, start_pos):$/;"	m	class:Parser
convert_node	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def convert_node(self, grammar, type, children):$/;"	m	class:Parser
convert_path	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:convert_path(path) "{{{$/;"	f
convert_to_abbr	bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:convert_to_abbr(path)$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:converter.filter(candidates, context)$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
cookie_re	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^cookie_re = re.compile("coding[:=]\\s*([-\\w.]+)")$/;"	v
copy	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^import copy$/;"	i
copy	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^import copy$/;"	i
copy	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^    def copy(self):$/;"	m	class:Grammar
copy	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import copy$/;"	i
copy	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:copy(src, dest) abort "{{{$/;"	f
copy	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:copy() "{{{$/;"	f
copy_exe	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:copy_exe() abort$/;"	f
copy_exe	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:copy_exe(src, dest) abort$/;"	f
copy_node	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def copy_node(obj):$/;"	f	function:deep_ast_copy
copy_vim	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:copy_vim(src, dest) abort "{{{$/;"	f
copyright	bundle/jedi-vim/jedi/docs/conf.py	/^copyright = u'2012 - {today.year}, Jedi contributors'.format(today=datetime.date.today())$/;"	v
cosh	bundle/jedi-vim/jedi/test/completion/ordering.py	/^cosh = 3$/;"	v
cpo_save	bundle/matchparenpp/plugin/matchparen++.vim	/^let cpo_save = &cpo$/;"	v
create	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def create(evaluator, obj, parent=builtin, module=None):$/;"	f
create	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi.evaluate.compiled import (CompiledObject, create, builtin,$/;"	i
create	bundle/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create_candidate	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:create_candidate(val) "{{{$/;"	f
create_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_indexes_or_slices	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^        from jedi.evaluate.iterable import create_indexes_or_slices$/;"	i
create_indexes_or_slices	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^def create_indexes_or_slices(evaluator, index):$/;"	f
create_vimfiler_buffer	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! s:create_vimfiler_buffer(path, context) "{{{$/;"	f
cterm	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^fun s:cterm(color)$/;"	f
ctermcolor	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:ctermcolor( r, g, b)$/;"	f
ctermlevel	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:ctermlevel( n)$/;"	f
ctrlp#acceptfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f
ctrlp#bookmarkdir#accept	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f
ctrlp#bookmarkdir#add	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(dir, ...)$/;"	f
ctrlp#bookmarkdir#id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f
ctrlp#bookmarkdir#init	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f
ctrlp#bookmarkdir#remove	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f
ctrlp#buffers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f
ctrlp#buffertag#accept	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f
ctrlp#buffertag#cmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f
ctrlp#buffertag#exit	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f
ctrlp#buffertag#init	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f
ctrlp#buffertag#opts	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f
ctrlp#call	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f
ctrlp#changes#accept	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f
ctrlp#changes#cmd	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f
ctrlp#changes#exit	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f
ctrlp#changes#init	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f
ctrlp#clr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f
ctrlp#clra	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f
ctrlp#complen	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f
ctrlp#dir#accept	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f
ctrlp#dir#id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f
ctrlp#dir#init	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f
ctrlp#dirnfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f
ctrlp#exit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f
ctrlp#files	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f
ctrlp#getcline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f
ctrlp#getmarkedlist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f
ctrlp#getvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f
ctrlp#hicheck	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f
ctrlp#igncwd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f
ctrlp#init	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f
ctrlp#j2l	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f
ctrlp#line#accept	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(mode, str)$/;"	f
ctrlp#line#cmd	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f
ctrlp#line#init	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f
ctrlp#mixed#id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f
ctrlp#mixed#init	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f
ctrlp#modfilecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f
ctrlp#mrufiles#add	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f
ctrlp#mrufiles#bufs	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f
ctrlp#mrufiles#cachefile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f
ctrlp#mrufiles#init	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f
ctrlp#mrufiles#list	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f
ctrlp#mrufiles#opts	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f
ctrlp#mrufiles#refresh	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f
ctrlp#mrufiles#remove	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f
ctrlp#mrufiles#tgrel	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f
ctrlp#normcmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f
ctrlp#nosy	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f
ctrlp#progress	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f
ctrlp#prtclear	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f
ctrlp#quickfix#accept	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f
ctrlp#quickfix#id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f
ctrlp#quickfix#init	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f
ctrlp#recordhist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f
ctrlp#rmbasedir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f
ctrlp#rtscript#id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f
ctrlp#rtscript#init	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f
ctrlp#setdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f
ctrlp#setlcdir	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f
ctrlp#setlines	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f
ctrlp#statusline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f
ctrlp#switchtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f
ctrlp#syntax	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f
ctrlp#tabcount	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f
ctrlp#tag#accept	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f
ctrlp#tag#enter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f
ctrlp#tag#id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f
ctrlp#tag#init	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f
ctrlp#undo#accept	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f
ctrlp#undo#enter	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f
ctrlp#undo#exit	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f
ctrlp#undo#id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f
ctrlp#undo#init	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f
ctrlp#utils#cachedir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f
ctrlp#utils#cachefile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f
ctrlp#utils#fnesc	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f
ctrlp#utils#glob	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f
ctrlp#utils#globpath	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f
ctrlp#utils#lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f
ctrlp#utils#mkdir	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f
ctrlp#utils#opts	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f
ctrlp#utils#readfile	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f
ctrlp#utils#writecache	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f
cur	bundle/jedi-vim/jedi/test/completion/thirdparty/psycopg2_.py	/^cur = conn.cursor()$/;"	v
current	bundle/jedi-vim/jedi/test/run.py	/^    current = cases[0].path if cases else None$/;"	v
current_suite	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^        def current_suite(stack):$/;"	f	function:Parser.error_recovery
cursor_bottom	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:cursor_bottom() "{{{$/;"	f
cursor_down	bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:cursor_down() "{{{$/;"	f
cursor_up	bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:cursor_up() "{{{$/;"	f
cursorhold_callback	bundle/vim-bufferline/autoload/bufferline.vim	/^function! s:cursorhold_callback()$/;"	f
custom_alternate_buffer	bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:custom_alternate_buffer() "{{{$/;"	f
custom_base	bundle/unite.vim/autoload/unite/custom.vim	/^function! s:custom_base(key, kind, name, value) "{{{$/;"	f
cwd_at	bundle/jedi-vim/jedi/test/helpers.py	/^def cwd_at(path):$/;"	f
cwd_at	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^from ..helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_integration_import.py	/^from .helpers import cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_regression.py	/^from .helpers import TestCase, cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_speed.py	/^from .helpers import TestCase, cwd_at$/;"	i
cwd_at	bundle/jedi-vim/jedi/test/test_utils.py	/^from .helpers import unittest, cwd_at$/;"	i
d	bundle/jedi-vim/jedi/test/completion/arrays.py	/^d = dict({'a':''})$/;"	v
d	bundle/jedi-vim/jedi/test/completion/classes.py	/^    d = b$/;"	v	class:V
d	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def d(self):$/;"	m	class:MethodDecoratorDoesntExist
d	bundle/jedi-vim/jedi/test/completion/docstring.py	/^d = ''$/;"	v
date	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import datetime.date$/;"	i
date	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^from datetime import date$/;"	i
date	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import datetime.date$/;"	i
date	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import not_existing_nested.date$/;"	i
datetime	bundle/jedi-vim/jedi/docs/conf.py	/^import datetime$/;"	i
datetime	bundle/jedi-vim/jedi/test/completion/isinstance.py	/^import datetime$/;"	i
datetime	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import datetime$/;"	i
datetime	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import datetime.$/;"	i
datetime	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import datetime.date$/;"	i
datetime	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import json, datetime$/;"	i
datetime	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import datetime.date$/;"	i
datetime	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import datetime; datetime') == set(['module'])$/;"	i
datetime	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        import datetime$/;"	i
dave	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
davidhalter	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
dbg	bundle/jedi-vim/jedi/jedi/debug.py	/^def dbg(message, *args):$/;"	f
dblue	bundle/vim-colorschemes/colors/spectro.vim	/^let dblue  = "#006060"$/;"	v
debug	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/cache.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi import debug$/;"	i
debug	bundle/jedi-vim/jedi/test/test_debug.py	/^from jedi import debug$/;"	i
debug	bundle/tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
debug_function	bundle/jedi-vim/jedi/jedi/debug.py	/^debug_function = None$/;"	v
dec	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def dec(f):$/;"	f
dec	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def dec(func):$/;"	f
dec	bundle/jedi-vim/jedi/test/completion/goto.py	/^def dec(dec_param=3):$/;"	f
dec2	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def dec2(func2):$/;"	f
dec_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^dec_number = r'(?:0+|[1-9][0-9]*)'$/;"	v
decorated	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def decorated(a,b):$/;"	f
decorated	bundle/jedi-vim/jedi/test/test_speed.py	/^        def decorated(func):$/;"	f	function:TestSpeed._check_speed
decorator	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def decorator(func):$/;"	f
decorator	bundle/jedi-vim/jedi/test/helpers.py	/^    def decorator(func):$/;"	f	function:cwd_at
dedent	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_evaluate/test_annotations.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_evaluate/test_representation.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from textwrap import dedent$/;"	i
dedent	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from textwrap import dedent$/;"	i
deep_ast_copy	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^def deep_ast_copy(obj, parent=None, new_elements=None):$/;"	f
def_func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def def_func(f):$/;"	f
def_ref_filter	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def def_ref_filter(_def):$/;"	f	function:names
def_ruby	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:def_ruby()$/;"	f
default	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def default(self):$/;"	m	class:Param
default	bundle/jedi-vim/jedi/test/static_analysis/arguments.py	/^def default(x, y=1, z=2):$/;"	f
default_style	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^    default_style = ""$/;"	v	class:FlaskyStyle
defaultdict	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from collections import defaultdict$/;"	i
define_column_regions	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! s:define_column_regions(max_len, columns) abort "{{{$/;"	f
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
define_filename_regions	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! s:define_filename_regions(max_len) abort "{{{$/;"	f
defined_lookup	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    def defined_lookup(self, obj):$/;"	m	class:Cls
defined_names	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import preload_module, defined_names, names$/;"	i
defined_names	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^def defined_names(source, path=None, encoding='utf-8'):$/;"	f
defined_names	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def defined_names(self):$/;"	m	class:Definition
defined_names	bundle/jedi-vim/jedi/jedi/api/classes.py	/^def defined_names(evaluator, scope):$/;"	f
defined_names	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
definition	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^        self.trailer = trailer  # Can be None, e.g. in a class definition.$/;"	c	function:Arguments.__init__
definition	bundle/jedi-vim/jedi/test/completion/goto.py	/^definition = 3$/;"	v
definition	bundle/jedi-vim/jedi/test/completion/parser.py	/^definition = 0$/;"	v
definition	bundle/jedi-vim/jedi/test/run.py	/^        def definition(correct, correct_start, path):$/;"	f	function:IntegrationTestCase.run_goto_definitions
defs	bundle/jedi-vim/jedi/test/run.py	/^            def defs(line_nr, indent):$/;"	f	function:IntegrationTestCase.run_goto_definitions.definition
delent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f
delete	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:delete(delete_command, candidate) "{{{$/;"	f
delete	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
delete	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:delete() "{{{$/;"	f
delete	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
deleteBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
delete_backward_path	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:delete_backward_path() "{{{$/;"	f
deletefile	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
deletefile	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
desc_with_module	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def desc_with_module(self):$/;"	m	class:Definition
description	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def description(self):$/;"	m	class:BaseDefinition
description	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def description(self):$/;"	m	class:Completion
description	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def description(self):$/;"	m	class:Definition
description	bundle/jedi-vim/jedi/setup.py	/^      description='An autocompletion tool for Python that can be used for text editors.',$/;"	v
description	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/setup.py	/^      description='',$/;"	v
detailed_colors	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:detailed_colors()$/;"	f
detailed_syntax_addtions	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:detailed_syntax_addtions()$/;"	f
detect_encoding	bundle/jedi-vim/jedi/jedi/common.py	/^    def detect_encoding():$/;"	f	function:source_to_unicode
dic	bundle/jedi-vim/jedi/test/completion/arrays.py	/^dic = {str(key): ''}$/;"	v
dic	bundle/jedi-vim/jedi/test/completion/types.py	/^dic = {}$/;"	v
dic2	bundle/jedi-vim/jedi/test/completion/arrays.py	/^dic2 = {'asdf': 3, 'b': 'str'}$/;"	v
dic2	bundle/jedi-vim/jedi/test/completion/types.py	/^dic2 = dict(a=1, b=2)$/;"	v
dic2	bundle/jedi-vim/jedi/test/completion/types.py	/^dic2 = {'asdf': 3}$/;"	v
dict2list	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f
dictindex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f
did_cisco_syn_inits	bundle/vim-colorschemes/colors/ciscoacl.vim	/^	   let did_cisco_syn_inits = 1$/;"	v
did_pic16f84_syntax_inits	bundle/vim-colorschemes/colors/pic.vim	/^    let did_pic16f84_syntax_inits = 1$/;"	v
did_psql_syn_inits	bundle/vim-colorschemes/colors/psql.vim	/^    let did_psql_syn_inits = 1$/;"	v
did_rtl_syntax_inits	bundle/vim-colorschemes/colors/rtl.vim	/^    let did_rtl_syntax_inits = 1$/;"	v
did_scala_syntax_inits	bundle/vim-colorschemes/colors/scala.vim	/^    let did_scala_syntax_inits = 1$/;"	v
diff	bundle/jedi-vim/jedi/jedi/refactoring.py	/^    def diff(self):$/;"	m	class:Refactoring
diff_code_assert	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^def diff_code_assert(a, b, n=4):$/;"	f
diff_modifier	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffidx	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
difflib	bundle/jedi-vim/jedi/jedi/refactoring.py	/^import difflib$/;"	i
difflib	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^import difflib$/;"	i
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dircompl	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f
dirname	bundle/jedi-vim/jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
dirname	bundle/jedi-vim/jedi/scripts/wx_check.py	/^from os.path import abspath, dirname$/;"	i
dirname	bundle/jedi-vim/jedi/test/completion/sys_path.py	/^from os import dirname$/;"	i
dirname	bundle/jedi-vim/jedi/test/helpers.py	/^from os.path import abspath, dirname$/;"	i
dirname	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^from os.path import dirname, join$/;"	i
disable_max_candidates	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:disable_max_candidates() "{{{$/;"	f
disable_operation	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:disable_operation() "{{{$/;"	f
dismrk	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f
displayHelp	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
division	bundle/jedi-vim/jedi/sith.py	/^from __future__ import print_function, division, unicode_literals$/;"	i
django	bundle/jedi-vim/jedi/test/completion/thirdparty/django_.py	/^import django$/;"	i
do_new_candidate_action	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:do_new_candidate_action() "{{{$/;"	f
do_rename	bundle/jedi-vim/jedi_vim.py	/^def do_rename(replace, orig=None):$/;"	f
do_rename	bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:do_rename() "{{{$/;"	f
doc	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def doc(self):$/;"	m	class:BaseDefinition
doc	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def doc(self):$/;"	m	class:CompiledObject
doc	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def doc(self):$/;"	m	class:Class
doc	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def doc(self):$/;"	m	class:Function
docopt	bundle/jedi-vim/jedi/scripts/profile.py	/^from docopt import docopt$/;"	i
docopt	bundle/jedi-vim/jedi/sith.py	/^from docopt import docopt$/;"	i
docopt	bundle/jedi-vim/jedi/test/run.py	/^    import docopt$/;"	i
docstr	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    def docstr(self):$/;"	m	class:Keyword
docstr	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def docstr(src, result):$/;"	f	function:test_completion_docstring
docstr_defaults	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^docstr_defaults = {$/;"	v
docstring	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def docstring(self, raw=False):$/;"	m	class:BaseDefinition
docstring	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def docstring(self, raw=False, fast=True):$/;"	m	class:Completion
docstrings	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import docstrings$/;"	i
docstrings	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import docstrings$/;"	i
dohighlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f
dosigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f
dotted_from_fs_path	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def dotted_from_fs_path(fs_path, sys_path=None):$/;"	f
double	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^double = r'[^"\\\\]*(?:\\\\.[^"\\\\]*)*"'$/;"	v
double3	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^double3 = r'[^"\\\\]*(?:(?:\\\\.|"(?!""))[^"\\\\]*)*"""'$/;"	v
double_exe	bundle/jedi-vim/jedi/test/completion/functions.py	/^def double_exe(param):$/;"	f
dstring	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dump	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^    def dump(self, filename):$/;"	m	class:Grammar
dump	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from json import load, dump$/;"	i
dump_dfa	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def dump_dfa(self, name, dfa):$/;"	m	class:ParserGenerator
dump_nfa	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def dump_nfa(self, name, start, finish):$/;"	m	class:ParserGenerator
dynamic	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import dynamic$/;"	i
dynamic_array_additions	bundle/jedi-vim/jedi/jedi/settings.py	/^dynamic_array_additions = True$/;"	v
dynamic_flow_information	bundle/jedi-vim/jedi/jedi/settings.py	/^dynamic_flow_information = True$/;"	v
dynamic_params	bundle/jedi-vim/jedi/jedi/settings.py	/^dynamic_params = True$/;"	v
dynamic_params_for_other_modules	bundle/jedi-vim/jedi/jedi/settings.py	/^dynamic_params_for_other_modules = True$/;"	v
e	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^e = E(1)$/;"	v
e	bundle/jedi-vim/jedi/test/completion/functions.py	/^e = args_func(*[1+"", {}])$/;"	v
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	bundle/vim-bufferline/autoload/bufferline.vim	/^function! s:echo()$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echo_highlight	bundle/jedi-vim/jedi_vim.py	/^def echo_highlight(msg):$/;"	f
echomsg	bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
echomsg	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
edit_binary_file	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:edit_binary_file() "{{{$/;"	f
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = functions.completions()[0]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0][0]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0][1]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope())[0][1][0]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope(1))[0][0]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = list(evaluate.get_names_for_scope(1))[0][1]$/;"	v
el	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^el = scopes$/;"	v
elapsed	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f
elif_flows1	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def elif_flows1(x):$/;"	f
elif_flows2	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def elif_flows2(x):$/;"	f
elif_flows3	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def elif_flows3(x):$/;"	f
elif_name	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def elif_name(x):$/;"	f
empty_assert	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def empty_assert():$/;"	f
enable_notice	bundle/jedi-vim/jedi/jedi/debug.py	/^enable_notice = False$/;"	v
enable_speed	bundle/jedi-vim/jedi/jedi/debug.py	/^enable_speed = False$/;"	v
enable_warning	bundle/jedi-vim/jedi/jedi/debug.py	/^enable_warning = False$/;"	v
enabled	bundle/jedi-vim/jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
encoding	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^        encoding = 'utf-8'$/;"	v
encoding	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    encoding = 'ascii'$/;"	v
encoding	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    encoding = sys.stdout.encoding$/;"	v
encoding	bundle/jedi-vim/jedi/jedi/debug.py	/^from jedi._compatibility import encoding, is_py3, u$/;"	i
encoding	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
end_pos	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def end_pos(self):$/;"	m	class:BaseNode
end_pos	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def end_pos(self):$/;"	m	class:Leaf
end_pos	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def end_pos(self):$/;"	m	class:LeafWithNewLines
endprogs	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^endprogs = {"'": _compile(single), '"': _compile(double),$/;"	v
epydoc	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def epydoc(a, b):$/;"	f
er	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate import representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate import representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.evaluate import representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^    from jedi.evaluate import representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate import representation as er, param$/;"	i
er	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^    from jedi.evaluate import iterable, representation as er$/;"	i
er	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import representation as er$/;"	i
error	bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
error	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
error_recovery	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def error_recovery(self, grammar, stack, typ, value, start_pos, prefix,$/;"	m	class:Parser
error_statement_stacks	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def error_statement_stacks(self):$/;"	m	class:FastModule
error_statement_stacks	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def error_statement_stacks(self, value):$/;"	m	class:FastModule
escape_file_path	bundle/jedi-vim/jedi_vim.py	/^def escape_file_path(path):$/;"	f
escape_file_searching	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
esctagscmd	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f
eval	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def eval(self, evaluator):$/;"	m	class:ExecutedParam
eval	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def eval(self):$/;"	m	class:Literal
eval_args	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def eval_args(self):$/;"	m	class:Arguments
eval_argument_clinic	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def eval_argument_clinic(self, arguments):$/;"	m	class:Arguments
eval_cmdline	bundle/unite.vim/autoload/unite/helper.vim	/^function! s:eval_cmdline(cmdline) abort "{{{$/;"	f
eval_element	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def eval_element(self, element):$/;"	m	class:Evaluator
eval_node	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def eval_node(self):$/;"	m	class:Comprehension
eval_statement	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def eval_statement(self, stmt, seek_name=None):$/;"	m	class:Evaluator
eval_trailer	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def eval_trailer(self, types, trailer):$/;"	m	class:Evaluator
evaluate	bundle/jedi-vim/jedi/test/completion/sys_path.py	/^import evaluate$/;"	i
evaluate	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^from jedi import functions, evaluate, parsing$/;"	i
example	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^def example(a):$/;"	f
except_clauses	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def except_clauses(self):$/;"	m	class:TryStmt
exception	bundle/jedi-vim/jedi_vim.py	/^import traceback  # for exception output$/;"	i
excl	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f
exclude_patterns	bundle/jedi-vim/jedi/docs/conf.py	/^exclude_patterns = []$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/decorators.py	/^exe = decorated(set, '')$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/decorators.py	/^exe = fu(list, c=set, b=3, d='')$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/decorators.py	/^exe = fu(list, set, 3, '', d='')$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/decorators.py	/^exe = fu2(list, c=set, b=3, d='str')$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe = args_func(1, "")$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe = args_func(1, "", list)$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe = fu(list, 1, "", c=set, d="")$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe = func(b=list, a=tuple)$/;"	v
exe	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe = kwargs_func(a=3,b=4.0)$/;"	v
exe2	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe2 = args_func(_list)[0]$/;"	v
exe2	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe2 = kwargs_func(**{a:3,$/;"	v
exe3	bundle/jedi-vim/jedi/test/completion/functions.py	/^exe3 = args_func([1,""])[0]$/;"	v
exec_function	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    def exec_function(source, global_map):$/;"	f
exec_function	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi._compatibility import exec_function, unicode$/;"	i
exec_separator	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
execextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f
exectags	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f
exectagsonfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f
execute	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def execute(self, obj, arguments=(), trailer=None):$/;"	m	class:Evaluator
execute	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^    def execute(self, params):$/;"	m	class:ParamListener
execute	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^def execute(evaluator, obj, params):$/;"	f
execute_command	bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:execute_command(command) "{{{$/;"	f
execute_command	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:execute_command(command, candidate) "{{{$/;"	f
execute_evaluated	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def execute_evaluated(self, obj, *args):$/;"	m	class:Evaluator
execute_external_filer	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:execute_external_filer() "{{{$/;"	f
execute_shell_command	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:execute_shell_command() "{{{$/;"	f
execute_subscope_by_name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def execute_subscope_by_name(self, name, *args):$/;"	m	class:Instance
execute_system_associated	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:execute_system_associated() "{{{$/;"	f
execute_vimfiler_associated	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:execute_vimfiler_associated() "{{{$/;"	f
execution_recursion_decorator	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^def execution_recursion_decorator(func):$/;"	f
exists	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:exists(name) abort$/;"	f
exists	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:exists(name) abort$/;"	f
exit	bundle/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
exit	bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
exit	bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:exit() "{{{$/;"	f
exit	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:exit() "{{{$/;"	f
exit	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:exit(vimfiler) "{{{$/;"	f
exit_code	bundle/jedi-vim/jedi/test/run.py	/^    exit_code = 1 if tests_fail else 0$/;"	v
expand	bundle/lightline.vim/autoload/lightline.vim	/^function! s:expand(x) abort$/;"	f
expand_modules	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_path	bundle/vundle/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
expand_tree	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:expand_tree(is_recursive) "{{{$/;"	f
expect	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def expect(self, type, value=None):$/;"	m	class:ParserGenerator
exponent	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^exponent = r'[eE][-+]?[0-9]+'$/;"	v
ext	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
ext	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
ext	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
ext	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
ext.add_inactive_statusline_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
ext_modules	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/setup.py	/^      ext_modules=[$/;"	v
extend_actions	bundle/unite.vim/autoload/unite/action.vim	/^function! s:extend_actions(self_func, action_table1, action_table2, ...) "{{{$/;"	f
extensions	bundle/jedi-vim/jedi/docs/conf.py	/^extensions = ['sphinx.ext.autodoc', 'sphinx.ext.viewcode', 'sphinx.ext.todo',$/;"	v
external	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:external(command, dest_dir, src_files) "{{{$/;"	f
external_cd	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:external_cd(candidate) "{{{$/;"	f
extract	bundle/jedi-vim/jedi/jedi/refactoring.py	/^def extract(script, new_name):$/;"	f
extractRGB	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:extractRGB( string)$/;"	f
f	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^    def f(func):$/;"	f	function:argument_clinic
f	bundle/jedi-vim/jedi/test/completion/arrays.py	/^def f():$/;"	f
f	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def f():$/;"	f
f	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def f(x):$/;"	m	class:E
f	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    f = staticmethod(f)$/;"	v	class:E
f	bundle/jedi-vim/jedi/test/completion/goto.py	/^def f(t=None):$/;"	f
f	bundle/jedi-vim/jedi/test/completion/imports.py	/^from ..helpers import sample_int as f$/;"	i
f	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def f(seq1...=None):$/;"	f
f	bundle/jedi-vim/jedi/test/completion/ordering.py	/^def f(b, a): return a$/;"	f
f	bundle/jedi-vim/jedi/test/completion/usages.py	/^def f(**kwargs):$/;"	f
f	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    def f(self):$/;"	m	class:Cls
factor_calculate	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def factor_calculate(evaluator, types, operator):$/;"	f
fake	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from . import fake$/;"	i
fake	bundle/jedi-vim/jedi/test/completion/import_tree/mod2.py	/^from . import mod1 as fake$/;"	i
fallback_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
false_obj	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^false_obj = builtin.get_by_name('False')$/;"	v
fast	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.parser import fast$/;"	i
fast_parser	bundle/jedi-vim/jedi/jedi/settings.py	/^fast_parser = True$/;"	v
fatpacked_rainbow_parens	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:fatpacked_rainbow_parens()$/;"	f
fetch	bundle/jedi-vim/jedi/sith.py	/^    def fetch(file_path):$/;"	m	class:SourceFinder
fetch_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
fg	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:fg(group, fg)$/;"	f
fg	bundle/vim-colorschemes/colors/pink.vim	/^            let fg = s:checkargs(s:col[2])$/;"	v
fg	bundle/vim-colorschemes/colors/pink.vim	/^        let fg = s:checkargs(s:col[2])$/;"	v
fgbg	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:fgbg(group, fg, bg)$/;"	f
fig	bundle/jedi-vim/jedi/test/completion/thirdparty/pylab_.py	/^fig = pylab.figure()$/;"	v
file_bookmark_action.func	bundle/unite.vim/plugin/unite/bookmark.vim	/^function! s:file_bookmark_action.func(candidate) "{{{$/;"	f
file_change	bundle/jedi-vim/jedi/test/run.py	/^    def file_change(current, tests, fails):$/;"	f
filereadable	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filereadable	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
files	bundle/jedi-vim/jedi/sith.py	/^    def files(cls, file_path):$/;"	m	class:SourceFinder
filter	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f
filter_after_position	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def filter_after_position(names, position):$/;"	f
filter_alias_action	bundle/unite.vim/autoload/unite/action.vim	/^function! s:filter_alias_action(action_table, alias_table, from) "{{{$/;"	f
filter_definition_names	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate.finder import global_names_dict_generator, filter_definition_names$/;"	i
filter_definition_names	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate.finder import filter_definition_names$/;"	i
filter_definition_names	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def filter_definition_names(names, origin, position=None):$/;"	f
filter_name	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def filter_name(self, names_dicts):$/;"	m	class:NameFinder
filter_private_variable	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def filter_private_variable(scope, origin_node):$/;"	f
filter_self_func	bundle/unite.vim/autoload/unite/action.vim	/^function! s:filter_self_func(action_table, self_func) "{{{$/;"	f
find	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def find(self, scopes, search_global=False):$/;"	m	class:NameFinder
find	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:find() "{{{$/;"	f
find	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findAndRevealPath	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
find_class	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def find_class(self):$/;"	m	class:FindClass
find_class	bundle/jedi-vim/jedi/test/completion/classes.py	/^def find_class():$/;"	f
find_index	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_module	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^find_module = find_module_py33 if is_py33 else find_module_pre_py33$/;"	v
find_module	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi._compatibility import find_module, unicode$/;"	i
find_module_pre_py33	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def find_module_pre_py33(string, path=None):$/;"	f
find_module_py33	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def find_module_py33(string, path=None):$/;"	f
find_module_py33	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^from jedi._compatibility import find_module_py33$/;"	i
find_opening_paren	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:find_opening_paren(...)$/;"	f
find_return_types	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def find_return_types(evaluator, func):$/;"	f
find_start_of_block	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:find_start_of_block(lnum, types)$/;"	f
find_start_of_multiline_statement	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
find_types	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def find_types(self, scope, name_str, position=None, search_global=False,$/;"	m	class:Evaluator
findcommon	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f
findcount	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str)$/;"	f
finder	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import finder$/;"	i
finder	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        from jedi.evaluate import finder$/;"	i
findroot	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f
first	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def first(a):$/;"	f
first_leaf	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def first_leaf(self):$/;"	m	class:BaseNode
first_operation	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def first_operation(self):$/;"	m	class:ExprStmt
first_pos	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def first_pos(self):$/;"	m	class:ErrorStatement
first_type	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def first_type(self):$/;"	m	class:ErrorStatement
flask	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.bar; flask.ext.bar.", "Foo")),$/;"	i
flask	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.baz; flask.ext.baz.", "Foo")),$/;"	i
flask	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
flask	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
flatten	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f
flatten	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
float_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^float_number = group(point_float, Expfloat)$/;"	v
flow_analysis	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import flow_analysis$/;"	i
flow_analysis	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import flow_analysis$/;"	i
flows	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def flows(self):$/;"	m	class:Scope
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnesc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f
fnmatch	bundle/jedi-vim/jedi/jedi/__main__.py	/^            import fnmatch$/;"	i
focus_return	bundle/jedi-vim/jedi/test/completion/basic.py	/^def focus_return():$/;"	f
foldl	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
follow	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def follow(self):$/;"	m	class:Importer
follow	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def follow(self, is_goto=False):$/;"	m	class:ImportWrapper
follow_definition	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def follow_definition(self):$/;"	m	class:Completion
follow_inexistent_imports	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^        def follow_inexistent_imports(defs):$/;"	f	function:Script._goto
follow_param	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^def follow_param(evaluator, param):$/;"	f
follow_statement	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def follow_statement(stmt):$/;"	f
foo	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^            return self.children[6]  # 6th element: def foo(...) -> bar$/;"	f	function:Function.annotation
foo	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^        lst = self.children[1:-2]  # After `def foo`$/;"	f	function:Lambda.__init__
foo	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^        parameters = self.children[2]  # After `def foo`$/;"	f	function:Function.__init__
foo	bundle/jedi-vim/jedi/test/completion/basic.py	/^1$/;"	v
foo	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def foo(x):$/;"	f
foo	bundle/jedi-vim/jedi/test/completion/import_tree/invisible_pkg.py	/^foo = 1.0$/;"	v
foo	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import not_existant, import_tree.mod1 as foo$/;"	i
foo	bundle/jedi-vim/jedi/test/completion/invalid.py	/^    def foo(self):$/;"	m	class:BrokenPartsOfClass
foo	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def foo(self):$/;"	m	class:DynamicParam
foo	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^foo = 'ns1!'$/;"	v
foo	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns1/pkg/ns1_file.py	/^foo = 'ns1_file!'$/;"	v
foo	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns1/pkg/ns1_folder/__init__.py	/^foo = 'ns1_folder!'$/;"	v
foo	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns2/pkg/ns2_file.py	/^foo = 'ns2_file!'$/;"	v
foo	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns2/pkg/ns2_folder/__init__.py	/^foo = 'ns2_folder!'$/;"	v
foo	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns2/pkg/ns2_folder/nested/__init__.py	/^foo = 'nested!'$/;"	v
foo	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.foo; flask.ext.foo.", "Foo")),$/;"	i
foobar	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^foobar = ''$/;"	v
foobarbaz	bundle/jedi-vim/jedi/test/completion/import_tree/mod1.py	/^foobarbaz = 3.0$/;"	v
fooooo	bundle/jedi-vim/jedi/test/completion/isinstance.py	/^def fooooo(obj):$/;"	f
fooooo2	bundle/jedi-vim/jedi/test/completion/isinstance.py	/^def fooooo2(obj):$/;"	f
for	bundle/jedi-vim/jedi_vim.py	/^import traceback  # for exception output$/;"	i
format	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f
format_name	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_time	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:format_time(time) "{{{$/;"	f
formatline	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f
formatul	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f
from	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
from	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
from_atom	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def from_atom(evaluator, atom):$/;"	m	class:Comprehension
from_cache	bundle/jedi-vim/jedi/sith.py	/^    def from_cache(cls, record):$/;"	m	class:TestCase
from_comprehension	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def from_comprehension(foo):$/;"	f
from_names	bundle/jedi-vim/jedi/test/completion/on_import.py	/^def from_names():$/;"	f
from_names_goto	bundle/jedi-vim/jedi/test/completion/on_import.py	/^def from_names_goto():$/;"	f
fu	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def fu(a, b, c, *args, **kwargs):$/;"	f
fu	bundle/jedi-vim/jedi/test/completion/functions.py	/^def fu(a=1, b="", *args, **kwargs):$/;"	f
fu2	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def fu2(a, b, c, *args, **kwargs):$/;"	f
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cwindow	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
full	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def full(self):$/;"	m	class:_Help
full_name	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def full_name(self):$/;"	m	class:BaseDefinition
func	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^    def func(function):$/;"	f	function:memoize_default
func	bundle/jedi-vim/jedi/test/completion/basic.py	/^def func():$/;"	f
func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def func(a):$/;"	f
func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def func(a, b):$/;"	f
func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def func(a, default_arg=2):$/;"	f
func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def func(c):$/;"	f
func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def func(c=1):$/;"	f
func	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^import sys as func$/;"	i
func	bundle/jedi-vim/jedi/test/completion/functions.py	/^def func(a=1, b=''):$/;"	f
func	bundle/jedi-vim/jedi/test/completion/functions.py	/^func = array$/;"	v
func	bundle/jedi-vim/jedi/test/completion/goto.py	/^def func():$/;"	f
func	bundle/jedi-vim/jedi/test/completion/ordering.py	/^def func(a_param):$/;"	f
func	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^def func():$/;"	f
func_b	bundle/jedi-vim/jedi/test/completion/functions.py	/^    def func_b():$/;"	f	function:a
func_default	bundle/jedi-vim/jedi/test/completion/functions.py	/^def func_default(a, b=1):$/;"	f
func_receiver	bundle/jedi-vim/jedi_vim.py	/^    def func_receiver(func):$/;"	f	function:_check_jedi_availability
func_with_import	bundle/jedi-vim/jedi/test/completion/imports.py	/^def func_with_import():$/;"	f
func_with_self	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def func_with_self(self, arg):$/;"	m	class:MethodDecoratorAsClass
func_without_call	bundle/jedi-vim/jedi/test/completion/functions.py	/^def func_without_call(*args, **kwargs):$/;"	f
func_without_self	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def func_without_self(arg, arg2):$/;"	m	class:MethodDecoratorAsClass
function	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^def function(a, b):$/;"	f
function	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function_args	bundle/jedi-vim/jedi/test/completion/functions.py	/^def function_args(a, b, c):$/;"	f
function_def	bundle/jedi-vim/jedi/test/completion/functions.py	/^def function_def(a, b, c):$/;"	f
functions	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^from jedi import functions, evaluate, parsing$/;"	i
functools	bundle/jedi-vim/jedi/jedi/common.py	/^import functools$/;"	i
functools	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import functools$/;"	i
functools	bundle/jedi-vim/jedi/test/helpers.py	/^import functools$/;"	i
functools	bundle/jedi-vim/jedi/test/test_speed.py	/^import functools$/;"	i
funny	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^funny = group(operator, bracket, special)$/;"	v
fuu	bundle/jedi-vim/jedi/test/completion/precedence.py	/^    fuu = 0.1$/;"	v	class:FooBar
g	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def g():$/;"	f
g	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def g(x):$/;"	m	class:E
g	bundle/jedi-vim/jedi/test/completion/generators.py	/^g = iter(Get())$/;"	v
g	bundle/jedi-vim/jedi/test/completion/generators.py	/^g = iter([1.0])$/;"	v
g:CSApprox_hook_graywh_post	bundle/vim-colorschemes/colors/graywh.vim	/^let g:CSApprox_hook_graywh_post = ['hi Visual          ctermbg=NONE ctermfg=NONE cterm=reverse',$/;"	v
g:MountainDew_Metadata	bundle/vim-colorschemes/colors/MountainDew.vim	/^	let g:MountainDew_Metadata = {$/;"	v
g:NERDTree	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	bundle/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeIndicatorMap	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeIndicatorMap = {$/;"	v
g:NERDTreeKeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapNextHunk	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapNextHunk = "]c"$/;"	v
g:NERDTreeMapPrevHunk	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapPrevHunk = "[c"$/;"	v
g:NERDTreeMenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	bundle/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeShowGitStatus	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowGitStatus = 1$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:NERDTreeUI	bundle/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUpdateOnCursorHold	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnCursorHold = 1$/;"	v
g:NERDTreeUpdateOnWrite	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnWrite = 1$/;"	v
g:SignatureMarkTextHL	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:SignatureMarkTextHL='SignatureMarkText'$/;"	v
g:SignatureMarkTextHL	bundle/vim-signature/after/plugin/signature_gitgutter.vim	/^    let g:SignatureMarkTextHL = 'signature#sign#GetGitGutterHLGroup(a:lnum)'$/;"	v
g:SignatureMarkTextHL	bundle/vim-signature/after/plugin/signature_gitgutter.vim	/^    let g:SignatureMarkTextHL = 'signature#sign#GetSignifyHLGroup(a:lnum)'$/;"	v
g:SignatureMarkerTextHL	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:SignatureMarkerTextHL='SignatureMarkerText'$/;"	v
g:SignatureMarkerTextHL	bundle/vim-signature/after/plugin/signature_gitgutter.vim	/^    let g:SignatureMarkerTextHL = 'signature#sign#GetGitGutterHLGroup(a:lnum)'$/;"	v
g:SignatureMarkerTextHL	bundle/vim-signature/after/plugin/signature_gitgutter.vim	/^    let g:SignatureMarkerTextHL = 'signature#sign#GetSignifyHLGroup(a:lnum)'$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:UltiSnipsJumpForwardTrigger	options.vim	/^let g:UltiSnipsJumpForwardTrigger='<tab>'$/;"	v
g:WebDevIconsUnicodeDecorateFileNodes	bundle/vim-webdevicons/plugin/webdevicons.vim	/^let g:WebDevIconsUnicodeDecorateFileNodes = 1$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol	bundle/vim-webdevicons/plugin/webdevicons.vim	/^let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExactSymbols	bundle/vim-webdevicons/plugin/webdevicons.vim	/^let g:WebDevIconsUnicodeDecorateFileNodesExactSymbols = { 'exact-match-case-sensitive-1.txt': 'X1', 'exact-match-case-sensitive-2': 'X2', 'gruntfile.coffee': '', 'gruntfile.js': '', 'gruntfile.ls': '', 'gulpfile.coffee': '', 'gulpfile.js': '', 'gulpfile.ls': '' }$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols	bundle/vim-webdevicons/plugin/webdevicons.vim	/^let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = { 'styl': '', 'scss': '', 'htm': '', 'html': '', 'css': '', 'less': '', 'md': '', 'json': '', 'js': '', 'rb': '', 'php': '', 'py': '', 'coffee': '','mustache': '', 'hbs': '', 'conf': '', 'ini': '', 'yml': '', 'jpg': '', 'jpeg': '', 'bmp': '', 'png': '', 'gif': '', 'ai': '', 'twig': '', 'cpp': ''}$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.6.0-86'$/;"	v
g:ack_apply_lmappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_apply_lmappings = !exists("g:ack_lhandler")$/;"	v
g:ack_apply_qmappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_apply_qmappings = !exists("g:ack_qhandler")$/;"	v
g:ack_autoclose	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_autoclose = 0$/;"	v
g:ack_autofold_results	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_autofold_results = 0$/;"	v
g:ack_default_options	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_default_options = " -s -H --nocolor --nogroup --column"$/;"	v
g:ack_lhandler	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_lhandler = "botright lopen"$/;"	v
g:ack_mappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = extend(s:ack_mappings, g:ack_mappings)$/;"	v
g:ack_mappings	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_mappings = s:ack_mappings$/;"	v
g:ack_qhandler	bundle/ack.vim/plugin/ack.vim	/^  let g:ack_qhandler = "botright copen"$/;"	v
g:ack_use_dispatch	bundle/ack.vim/autoload/ack.vim	/^    let g:ack_use_dispatch = 0$/;"	v
g:ack_use_dispatch	bundle/ack.vim/autoload/ack.vim	/^  let g:ack_use_dispatch = 0$/;"	v
g:ackhighlight	bundle/ack.vim/plugin/ack.vim	/^  let g:ackhighlight = 0$/;"	v
g:ackprg	bundle/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack"$/;"	v
g:ackprg	bundle/ack.vim/plugin/ack.vim	/^    let g:ackprg = "ack-grep"$/;"	v
g:ackprg	bundle/ack.vim/plugin/ack.vim	/^  let g:ackprg .= g:ack_default_options$/;"	v
g:airline#extensions#default#layout	bundle/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	bundle/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#quickfix#location_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#buffer_nr_show	options.vim	/^let g:airline#extensions#tabline#buffer_nr_show = 1$/;"	v
g:airline#extensions#tabline#enabled	options.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#fnamemod	options.vim	/^let g:airline#extensions#tabline#fnamemod = ':t'$/;"	v
g:airline#extensions#tabline#formatter	bundle/vim-webdevicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#extensions#windowswap#indicator_text	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.normal_modified)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16#palette	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette.normal_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#bubblegum#palette	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#dark#palette	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#durant#normal_modified	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#normal_modified = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^  let g:airline#themes#durant#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette = {}$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.accents = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive_modified = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_modified = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_paste = {$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace = copy(g:airline#themes#durant#palette.insert)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace_modified = g:airline#themes#durant#palette.insert_modified$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#durant#palette	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual_modified = {$/;"	v
g:airline#themes#hybrid#palette	bundle/vim-airline/autoload/airline/themes/hybrid.vim	/^let g:airline#themes#hybrid#palette = {}$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette = {}$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.accents = {$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert_paste = {$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal.airline_a = ['#005f00', '#b5bd68', 22, 10, '']$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace.airline_a = ['#000000', '#CC6666', 16, 9]$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual.airline_a = ['#000000', '#de935f', 16, 3]$/;"	v
g:airline#themes#jellybeans#palette	bundle/vim-airline/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
g:airline#themes#kalisi#palette	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette = {}$/;"	v
g:airline#themes#kalisi#palette	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette = {}$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.accents = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace = copy(g:airline#themes#kolor#palette.insert)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace.airline_a = [ s:I2[0]   , '#005154' , s:I2[2] , 23      , ''     ]$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace_modified = {$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kolor#palette	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = copy(airline#themes#laederon#palette.insert)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = g:airline#themes#laederon#palette.insert_modified$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#laederon#palette	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modified$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	bundle/vim-airline/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
g:airline#themes#lucius#palette	bundle/vim-airline/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88     , ''     ]$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modified$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
g:airline#themes#luna#palette	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = copy(g:airline#themes#molokai#palette.insert)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace.airline_a = [ s:I1[0]   , '#ef5939' , s:I1[2] , 166     , ''     ]$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#molokai#palette	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
g:airline#themes#monochrome#palette	bundle/vim-airline/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.normal)$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette = {}$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.accents = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_paste = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal.airline_warning = [$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace = copy(g:airline#themes#raven#palette.insert)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_a = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_z = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified = g:airline#themes#raven#palette.insert_modified$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.tabline = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual.airline_warning =$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified = {$/;"	v
g:airline#themes#raven#palette	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette = {}$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.accents = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_paste = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal.airline_warning = [$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace = copy(g:airline#themes#silver#palette.insert)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_a = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_z = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified = g:airline#themes#silver#palette.insert_modified$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.tabline = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual.airline_warning =$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified = {$/;"	v
g:airline#themes#silver#palette	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
g:airline#themes#sol#palette	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	bundle/vim-airline/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
g:airline#themes#tomorrow#palette	bundle/vim-airline/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = copy(airline#themes#ubaryd#palette.insert)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = g:airline#themes#ubaryd#palette.insert_modified$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, '', 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, ''] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#understated#palette	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#zenburn#palette	bundle/vim-airline/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
g:airline_inactive_collapse	bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	bundle/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_powerline_fonts	options.vim	/^let g:airline_powerline_fonts = 1 " Use airline fonts$/;"	v
g:airline_section_	bundle/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	bundle/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_section_c	options.vim	/^let g:airline_section_c = '%t'$/;"	v
g:airline_statusline_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	bundle/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	bundle/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	bundle/vim-colorschemes/colors/flatlandia.vim	/^let g:airline_theme='flatlandia'$/;"	v
g:astronaut_bold	bundle/vim-colorschemes/colors/astronaut.vim	/^ let g:astronaut_bold= 0$/;"	v
g:astronaut_dark	bundle/vim-colorschemes/colors/astronaut.vim	/^ let g:astronaut_dark= 0$/;"	v
g:astronaut_italic	bundle/vim-colorschemes/colors/astronaut.vim	/^ let g:astronaut_italic= 0$/;"	v
g:astronaut_underline	bundle/vim-colorschemes/colors/astronaut.vim	/^ let g:astronaut_underline= 1$/;"	v
g:badwolf_css_props_highlight	bundle/vim-colorschemes/colors/badwolf.vim	/^    let g:badwolf_css_props_highlight = 0$/;"	v
g:badwolf_html_link_underline	bundle/vim-colorschemes/colors/badwolf.vim	/^    let g:badwolf_html_link_underline = 1$/;"	v
g:bufferline_status_info	bundle/vim-bufferline/plugin/bufferline.vim	/^let g:bufferline_status_info = {$/;"	v
g:colors_name	bundle/papercolor-theme/colors/PaperColor.vim	/^let g:colors_name = "PaperColor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/0x7A69_dark.vim	/^let g:colors_name="0x7A69_dark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/256-grayvim.vim	/^let g:colors_name="256-grayvim"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/256-jungle.vim	/^let g:colors_name="256-jungle"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/3dglasses.vim	/^let g:colors_name="3dglasses"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/BlackSea.vim	/^let g:colors_name = "BlackSea"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/C64.vim	/^let g:colors_name="C64"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Chasing_Logic.vim	/^let g:colors_name = "Chasing_Logic"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ChocolateLiquor.vim	/^let g:colors_name = "ChocolateLiquor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ChocolatePapaya.vim	/^let g:colors_name = "ChocolatePapaya"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/CodeFactoryv3.vim	/^let g:colors_name = "openbsd"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/DevC++.vim	/^let g:colors_name="DevC++"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Monokai-chris.vim	/^let g:colors_name = "Monokai-chris"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Monokai.vim	/^let g:colors_name = "monokai"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/MountainDew.vim	/^let g:colors_name = "MountainDew"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/PapayaWhip.vim	/^let g:colors_name = "PapayaWhip"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let g:colors_name = "Tomorrow-Night-Blue"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let g:colors_name = "Tomorrow-Night-Bright"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let g:colors_name = "Tomorrow-Night-Eighties"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let g:colors_name = "Tomorrow-Night"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let g:colors_name = "Tomorrow"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/abra.vim	/^let g:colors_name="abra"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/adam.vim	/^let g:colors_name = "adam"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/adobe.vim	/^let g:colors_name = "adobe"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/adrian.vim	/^let g:colors_name = "adrian"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/advantage.vim	/^let g:colors_name="advantage"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/af.vim	/^let g:colors_name="af"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/aiseered.vim	/^let g:colors_name="aiseered"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/anotherdark.vim	/^let g:colors_name="anotherdark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/aqua.vim	/^let g:colors_name="aqua"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ashen.vim	/^let g:colors_name="ashen"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/astronaut.vim	/^let g:colors_name      = "astronaut"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/asu1dark.vim	/^let g:colors_name="asu1dark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/atom.vim	/^let g:colors_name="atom"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let g:colors_name = "base16-atelierdune"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bayQua.vim	/^let g:colors_name="bayQua"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/baycomb.vim	/^let g:colors_name="baycomb"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bclear.vim	/^let g:colors_name = "bclear"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/beachcomber.vim	/^let g:colors_name="beachcomber"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/beauty256.vim	/^let g:colors_name = 'beauty256'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/billw.vim	/^let g:colors_name = "billw"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/biogoo.vim	/^let g:colors_name = "biogoo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/black_angus.vim	/^let g:colors_name = "black_angus"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/blackbeauty.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/blackboard.vim	/^let g:colors_name = "blackboard"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/blazer.vim	/^let g:colors_name = "blazer"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/blue.vim	/^let g:colors_name="blue"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bluechia.vim	/^let g:colors_name = 'bluechia'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bluedrake.vim	/^let g:colors_name = "bluedrake"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bluegreen.vim	/^let g:colors_name="mine"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bluez.vim	/^let g:colors_name="bluez"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/blugrine.vim	/^let g:colors_name="blugrine"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bmichaelsen.vim	/^let g:colors_name = "bmichaelsen"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bog.vim	/^let g:colors_name="bog"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/borland.vim	/^let g:colors_name="borland"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/brookstream.vim	/^let g:colors_name="brookstream"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bubblegum.vim	/^let g:colors_name="bubblegum"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/bw.vim	/^let g:colors_name="bw"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cake16.vim	/^let g:colors_name="cake16"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/calmar256-light.vim	/^let g:colors_name = "calmar256-light"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/camo.vim	/^let g:colors_name="camo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/candycode.vim	/^let g:colors_name="candycode"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/caramel.vim	/^let g:colors_name="caramel"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/carrot.vim	/^let g:colors_name = "carrot"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/carvedwood.vim	/^let g:colors_name="carvedwood"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/carvedwoodcool.vim	/^let g:colors_name="carvedwoodcool"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cascadia.vim	/^let g:colors_name = "cascadia"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/charon.vim	/^let g:colors_name="charon"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/chela_light.vim	/^let g:colors_name="chela_light"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/chlordane.vim	/^let g:colors_name = 'chlordane'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/chocolate.vim	/^let g:colors_name = "chocolate"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/clarity.vim	/^let g:colors_name="clarity"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cleanroom.vim	/^let g:colors_name="Cleanroom"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cloudy.vim	/^let g:colors_name="peppers"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/clue.vim	/^let g:colors_name = "clue"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cobalt.vim	/^let g:colors_name="cobalt"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cobaltish.vim	/^let g:colors_name="cobalt"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/codeblocks_dark.vim	/^let g:colors_name="codeblocks_dark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/codeschool.vim	/^let g:colors_name = "Code School 3"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/colorer.vim	/^let g:colors_name = "colorer"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/colorful.vim	/^let g:colors_name = "colorful"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/colorful256.vim	/^let g:colors_name = "colorful256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/colorscheme_template.vim	/^let g:colors_name="mycolorscheme"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/contrasty.vim	/^let g:colors_name = expand('<sfile>:t:r')$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cool.vim	/^let g:colors_name = "cool"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/corporation.vim	/^let g:colors_name = "corporation"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/cthulhian.vim	/^let g:colors_name = "cthulhian"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/d8g_01.vim	/^let g:colors_name = "d8g_01"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/d8g_02.vim	/^let g:colors_name = "d8g_02"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/d8g_03.vim	/^let g:colors_name = "d8g_03"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/d8g_04.vim	/^let g:colors_name = "d8g_04"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/dante.vim	/^let g:colors_name = "dante"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/dark-ruby.vim	/^let g:colors_name="dark-ruby"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkBlue.vim	/^let g:colors_name = "darkBlue"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkZ.vim	/^let g:colors_name="darkZ"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkblue2.vim	/^let g:colors_name = "darkblue2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkbone.vim	/^let g:colors_name = 'darkbone'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkburn.vim	/^let g:colors_name="darkburn"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkdot.vim	/^let g:colors_name="darkdot"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkeclipse.vim	/^let g:colors_name = 'darkeclipse'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkerdesert.vim	/^let g:colors_name="softblack"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkocean.vim	/^let g:colors_name="darkocean"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkrobot.vim	/^let g:colors_name="darkrobot"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkroom.vim	/^let g:colors_name="darkroom"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkslategray.vim	/^let g:colors_name = "darkslategray"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkspectrum.vim	/^let g:colors_name="darkspectrum"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darktango.vim	/^let g:colors_name="darktango"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/darkzen.vim	/^let g:colors_name = "darkzen"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/delphi.vim	/^let g:colors_name="delphi"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/denim.vim	/^let g:colors_name="denim"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/derefined.vim	/^let g:colors_name="derefined"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/desert256.vim	/^let g:colors_name="desert256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/desert256v2.vim	/^let g:colors_name="desert256v2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/desertEx.vim	/^let g:colors_name="desertEx"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/desertedocean.vim	/^let g:colors_name="desertedocean"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/desertedoceanburnt.vim	/^let g:colors_name="desertedoceanburnt"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/devbox-dark-256.vim	/^let g:colors_name="devbox-dark-256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/deveiate.vim	/^let g:colors_name="deveiate"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/distinguished.vim	/^	let g:colors_name = 'distinguished'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/donbass.vim	/^let g:colors_name = "donbass"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/doorhinge.vim	/^let g:colors_name = "doorhinge"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/doriath.vim	/^let g:colors_name="doriath"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/dual.vim	/^let g:colors_name = "dual"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/eclipse.vim	/^let g:colors_name = "eclipse"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ego.vim	/^let g:colors_name = "ego"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ekvoli.vim	/^let g:colors_name = "ekvoli"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/elda.vim	/^let g:colors_name="elda"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/elise.vim	/^let g:colors_name = "elise"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/elisex.vim	/^let g:colors_name = "elisex"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/elrodeo.vim	/^let g:colors_name="elrodeo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/enzyme.vim	/^let g:colors_name = "enzyme"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/far.vim	/^let g:colors_name="far"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/felipec.vim	/^let g:colors_name = "felipec"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/flatland.vim	/^let g:colors_name = "flatland"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/flatlandia.vim	/^let g:colors_name = "flatlandia"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/flattr.vim	/^let g:colors_name="flattr"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/flatui.vim	/^let g:colors_name="flatui"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/fokus.vim	/^let g:colors_name="fokus"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/forneus.vim	/^let g:colors_name = "forneus"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/frood.vim	/^let g:colors_name = "frood"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gardener.vim	/^let g:colors_name = "gardener"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/getfresh.vim	/^let g:colors_name = "getfresh"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gobo.vim	/^let g:colors_name = "ColorSchemeCreator"  $/;"	v
g:colors_name	bundle/vim-colorschemes/colors/golded.vim	/^let g:colors_name="golded"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/golden.vim	/^let g:colors_name = "golden"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gor.vim	/^let g:colors_name = "gor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gotham.vim	/^let g:colors_name = 'gotham'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gotham256.vim	/^let g:colors_name = 'gotham256'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gothic.vim	/^let g:colors_name = "gothic"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/grb256.vim	/^let g:colors_name = "grb256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/greenvision.vim	/^let g:colors_name = 'greenvision'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/grishin.vim	/^let g:colors_name = "grishin"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/guardian.vim	/^let g:colors_name = "Guardian"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/guepardo.vim	/^let g:colors_name = "guepardo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/h80.vim	/^let g:colors_name="h80"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/habiLight.vim	/^let g:colors_name = "habiLight"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/hemisu.vim	/^let g:colors_name = "hemisu"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/herokudoc-gvim.vim	/^let g:colors_name = "herokudoc-gvim"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/herokudoc.vim	/^    let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/holokai.vim	/^let g:colors_name="holokai"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/iangenzo.vim	/^    let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ibmedit.vim	/^let g:colors_name="ibmedit"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/icansee.vim	/^let g:colors_name = "icansee"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/iceberg.vim	/^let g:colors_name = 'iceberg'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/impact.vim	/^let g:colors_name="impact"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/impactG.vim	/^let g:colors_name="impact"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ingretu.vim	/^let g:colors_name = "ingretu"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/jammy.vim	/^let g:colors_name="jammy"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kalisi.vim	/^let g:colors_name = "kalisi"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kalt.vim	/^let g:colors_name = "kalt"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kaltex.vim	/^let g:colors_name = "kaltex"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kate.vim	/^let g:colors_name="DevC++"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/khaki.vim	/^let g:colors_name = "khaki"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kib_darktango.vim	/^let g:colors_name="kib_darktango"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kib_plastic.vim	/^let g:colors_name="kib_plastic"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kkruby.vim	/^let g:colors_name = "kkruby"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kolor.vim	/^let g:colors_name="kolor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/kruby.vim	/^let g:colors_name = "kkruby"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lazarus.vim	/^let g:colors_name="lazarus"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/legiblelight.vim	/^let g:colors_name = "legiblelight"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/leo.vim	/^let g:colors_name = "leo256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/less.vim	/^let g:colors_name = "less"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lettuce.vim	/^let g:colors_name="lettuce"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lilac.vim	/^let g:colors_name = "lilac"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lilydjwg_dark.vim	/^let g:colors_name = "lilydjwg_dark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lilydjwg_green.vim	/^let g:colors_name = "lilydjwg_green"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lingodirector.vim	/^let g:colors_name="lingodirector"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/literal_tango.vim	/^let g:colors_name = "literal_tango"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lizard256.vim	/^let g:colors_name = "wombat256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/louver.vim	/^let g:colors_name = 'louver'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/lucius.vim	/^let g:colors_name="lucius"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/luinnar.vim	/^let g:colors_name="luinnar"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/luna.vim	/^let g:colors_name = "luna"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mac_classic.vim	/^let g:colors_name = "mac_classic"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/made_of_code.vim	/^let g:colors_name = "Made of Code"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mango.vim	/^  let g:colors_name = "mango"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/manuscript.vim	/^let g:colors_name = expand('<sfile>:t:r')$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/manxome.vim	/^let g:colors_name = "manxome"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/marklar.vim	/^let g:colors_name = "marklar"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/maroloccio.vim	/^let g:colors_name="maroloccio"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mars.vim	/^let g:colors_name="mars"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/matrix.vim	/^let g:colors_name = 'matrix'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mellow.vim	/^let g:colors_name="mellow"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/midnight.vim	/^let g:colors_name="midnight2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/midnight2.vim	/^let g:colors_name="midnight2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/miko.vim	/^let g:colors_name = "miko"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mizore.vim	/^let g:colors_name="mizore"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/monokain.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/montz.vim	/^let g:colors_name = "montz"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mophiaDark.vim	/^let g:colors_name="mophiaDark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mophiaSmoke.vim	/^let g:colors_name="mophiaSmoke"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mopkai.vim	/^let g:colors_name='mopkai'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/moss.vim	/^let g:colors_name = "moss"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/motus.vim	/^let g:colors_name = "motus"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mrkn256.vim	/^let g:colors_name="mrkn256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/mud.vim	/^let g:colors_name="mud"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/muon.vim	/^let g:colors_name="muon"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nature.vim	/^let g:colors_name="nature"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/navajo-night.vim	/^let g:colors_name = "navajo-night"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/navajo.vim	/^let g:colors_name = "navajo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nedit.vim	/^let g:colors_name="nedit"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nedit2.vim	/^let g:colors_name="nedit2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/neutron.vim	/^let g:colors_name="neutron"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/neverland-darker.vim	/^let g:colors_name="neverland-darker"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/neverland.vim	/^let g:colors_name="neverland"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/neverland2-darker.vim	/^let g:colors_name="neverland2-dark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/neverland2.vim	/^let g:colors_name="neverland2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/neverness.vim	/^let g:colors_name = 'neverness'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nevfn.vim	/^let g:colors_name = 'nevfn'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/newsprint.vim	/^let g:colors_name = "newsprint"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nicotine.vim	/^let g:colors_name="nicotine"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nightVision.vim	/^let g:colors_name="clarity"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/night_vision.vim	/^let g:colors_name="night_vision"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nightflight.vim	/^let g:colors_name = "nightflight"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nightflight2.vim	/^let g:colors_name = "nightflight2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nightshimmer.vim	/^let g:colors_name = "nightshimmer"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nightsky.vim	/^let g:colors_name="northsky"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nightwish.vim	/^let g:colors_name = "nightwish"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/northland.vim	/^let g:colors_name="northland"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/northsky.vim	/^let g:colors_name="northsky"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/norwaytoday.vim	/^let g:colors_name = "norwaytoday"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nour.vim	/^let g:colors_name="dw_green"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/nuvola.vim	/^let g:colors_name = "nuvola"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/obsidian2.vim	/^let g:colors_name="obsidian2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/oceanblack.vim	/^let g:colors_name = "oceanblack"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/oceanblack256.vim	/^let g:colors_name = "oceanblack256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/oceandeep.vim	/^let g:colors_name = "oceandeep"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/oceanlight.vim	/^let g:colors_name = "oceanlight"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/olive.vim	/^let g:colors_name="olive"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/orange.vim	/^let g:colors_name = "orange"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/osx_like.vim	/^let g:colors_name = 'osx_like'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/otaku.vim	/^let g:colors_name="otaku"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/pacific.vim	/^let g:colors_name="pacific"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/peaksea.vim	/^let g:colors_name = expand("<sfile>:t:r")$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/pencil.vim	/^let g:colors_name='pencil'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/peppers.vim	/^let g:colors_name="peppers"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/phphaxor.vim	/^let g:colors_name = "phphaxor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/phpx.vim	/^let g:colors_name = "phpx"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/pink.vim	/^let g:colors_name = "pink"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/pleasant.vim	/^let g:colors_name="pleasant"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/potts.vim	/^let g:colors_name="potts2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/print_bw.vim	/^let g:colors_name = "print_bw"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/prmths.vim	/^let g:colors_name = "prmths"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/professional.vim	/^let g:colors_name="professional"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/pspad.vim	/^let g:colors_name = "pspad"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/pw.vim	/^let g:colors_name = "pw"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/python.vim	/^let g:colors_name = "python"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/quagmire.vim	/^let g:colors_name="quagmire"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/railscasts.vim	/^let g:colors_name = "railscasts"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/rastafari.vim	/^  let g:colors_name="rastafari"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/rcg_term.vim	/^let g:colors_name = "rcg_term"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/redstring.vim	/^let g:colors_name = "redstring"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/refactor.vim	/^let g:colors_name = "RefractorMyCode"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/relaxedgreen.vim	/^let g:colors_name = "relaxedgreen"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/reliable.vim	/^let g:colors_name = "reliable"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/reloaded.vim	/^let g:colors_name="reloaded"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/revolutions.vim	/^let g:colors_name = 'revolutions'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/robinhood.vim	/^let g:colors_name = "robinhood"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/rootwater.vim	/^let g:colors_name = 'rootwater'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sand.vim	/^let g:colors_name="sand"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/saturn.vim	/^let g:colors_name = "saturn"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/scite.vim	/^let g:colors_name = "scite"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sean.vim	/^let g:colors_name = "sean"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/seashell.vim	/^let g:colors_name = "seashell"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/selenitic.vim	/^let g:colors_name='selenitic'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/seoul256-light.vim	/^    let g:colors_name = &background == 'dark' ? 'seoul256' : 'seoul256-light'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/seoul256-light.vim	/^    let g:colors_name = 'seoul256'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/seoul256.vim	/^let g:colors_name = 'seoul256'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/settlemyer.vim	/^let g:colors_name="settlemyer"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sexy-railscasts.vim	/^let g:colors_name = "sexy-railscasts"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sf.vim	/^let g:colors_name = "sf"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/shadesofamber.vim	/^let g:colors_name = "shadesofamber"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/shobogenzo.vim	/^let g:colors_name = "shobogenzo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sienna.vim	/^let g:colors_name = 'sienna'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sift.vim	/^let g:colors_name="sift"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/silent.vim	/^let g:colors_name = "silent"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/simple256.vim	/^let g:colors_name="desert256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/simple_b.vim	/^let g:colors_name = "simple_b"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/simpleandfriendly.vim	/^let g:colors_name = "simpleandfriendly"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/simplewhite.vim	/^let g:colors_name = 'simplewhite'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/skittles_berry.vim	/^let g:colors_name="skittles_berry"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/skittles_dark.vim	/^let g:colors_name="skittles_dark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/smp.vim	/^let g:colors_name = "smp"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/smyck.vim	/^let g:colors_name = "smyck"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/softblue.vim	/^let g:colors_name="softblue"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/softbluev2.vim	/^let g:colors_name="softbluev2"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sol-term.vim	/^let g:colors_name = "sol"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sol.vim	/^let g:colors_name = "sol"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sonofobsidian.vim	/^let g:colors_name="sonofobsidian"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/sonoma.vim	/^let g:colors_name="sonoma"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/soso.vim	/^let g:colors_name="soso"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/spectro.vim	/^let g:colors_name="spectro"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/spiderhawk.vim	/^let g:colors_name="spiderhawk"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/stingray.vim	/^let g:colors_name="stingray"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/strawimodo.vim	/^let g:colors_name = "strawimodo"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/summerfruit256.vim	/^let g:colors_name="summerfruit256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/surveyor.vim	/^let g:colors_name = "Surveyor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/symfony.vim	/^let g:colors_name = "symfony"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/synic.vim	/^let g:colors_name = "synic"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tabula.vim	/^let g:colors_name = "tabula"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tango-desert.vim	/^let g:colors_name="tango-desert"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/telstar.vim	/^let g:colors_name = "telstar"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/thegoodluck.vim	/^let g:colors_name = "thegoodluck"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tibet.vim	/^let g:colors_name="tibet"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tidy.vim	/^let g:colors_name="tidy"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tolerable.vim	/^let g:colors_name="tolerable"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tomatosoup.vim	/^let g:colors_name="tomatosoup"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tony_light.vim	/^let g:colors_name="tony_light"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/toothpik.vim	/^let g:colors_name="toothpik"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/transparent.vim	/^let g:colors_name="transparent"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/trivial256.vim	/^let g:colors_name="trivial256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/trogdor.vim	/^let g:colors_name = "trogdor"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/tutticolori.vim	/^let g:colors_name = "tutticolori"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/twilight256.vim	/^let g:colors_name="twilight256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/twitchy.vim	/^let g:colors_name = "twitchy"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/two2tango.vim	/^let g:colors_name="two2tango"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/ubloh.vim	/^let g:colors_name = "ubloh"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/umber-green.vim	/^let g:colors_name="umber-green"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/understated.vim	/^let g:colors_name="understated"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vc.vim	/^let g:colors_name="vc"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vcbc.vim	/^let g:colors_name="vcbc"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vexorian.vim	/^let g:colors_name = "ColorSchemeCreator"  $/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vibrantink.vim	/^let g:colors_name = "vibrantink"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vilight.vim	/^let g:colors_name="vilight"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vj.vim	/^let g:colors_name="vj"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/void.vim	/^let g:colors_name="void"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vydark.vim	/^let g:colors_name="vydark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/vylight.vim	/^let g:colors_name="vylight"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/wargrey.vim	/^let g:colors_name="wargrey"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/watermark.vim	/^let g:colors_name="watermark"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/whitebox.vim	/^let g:colors_name = "whitebox"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/widower.vim	/^let g:colors_name = "widower"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/win9xblueback.vim	/^let g:colors_name = 'win9xblueback'$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/wintersday.vim	/^let g:colors_name = "wintersday"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/wombat256.vim	/^let g:colors_name = "wombat256"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/wombat256i.vim	/^let g:colors_name = "wombat256i"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/wood.vim	/^let g:colors_name="wood"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/wuye.vim	/^let g:colors_name = "wuye"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/xemacs.vim	/^let g:colors_name="xemacs"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/xian.vim	/^let g:colors_name = "xian"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/yeller.vim	/^let g:colors_name="yeller"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/zen.vim	/^let g:colors_name = "zen"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/zephyr.vim	/^let g:colors_name = "zephyr"$/;"	v
g:colors_name	bundle/vim-colorschemes/colors/zmrok.vim	/^let g:colors_name="zmrok"$/;"	v
g:count	bundle/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:darkburn_alternate_Error	bundle/vim-colorschemes/colors/darkburn.vim	/^      let g:darkburn_alternate_Error = 1$/;"	v
g:darkburn_alternate_Include	bundle/vim-colorschemes/colors/darkburn.vim	/^      let g:darkburn_alternate_Include = 1$/;"	v
g:darkburn_force_dark_Background	bundle/vim-colorschemes/colors/darkburn.vim	/^      let g:darkburn_force_dark_Background = 1$/;"	v
g:darkburn_high_Contrast	bundle/vim-colorschemes/colors/darkburn.vim	/^     let g:darkburn_high_Contrast = 1$/;"	v
g:did_nefertiti_code_setup	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let g:did_nefertiti_code_setup = 1$/;"	v
g:flatcolor_bluebg	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let g:flatcolor_bluebg=0$/;"	v
g:flatcolor_cursorlinebold	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let g:flatcolor_cursorlinebold=0$/;"	v
g:flatcolor_termcolors	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let g:flatcolor_termcolors=256$/;"	v
g:fugitive_browse_handlers	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gitgutter_eager	bundle/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_realtime	bundle/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:gitgutter_sign_column_always	bundle/vim-gitgutter/test/testSignColumnAlways.vim	/^let g:gitgutter_sign_column_always=1$/;"	v
g:gitgutter_sign_removed_first_line	bundle/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = '_^'$/;"	v
g:gruvbox_bold	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_contrast='medium'$/;"	v
g:gruvbox_contrast_dark	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_hls_cursor	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_hls_cursor='orange'$/;"	v
g:gruvbox_invert_indent_guides	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_invert_selection	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_invert_selection=1$/;"	v
g:gruvbox_invert_signs	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_invert_signs=0$/;"	v
g:gruvbox_invert_tabline	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_invert_tabline=0$/;"	v
g:gruvbox_italic	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_italic=1$/;"	v
g:gruvbox_italicize_comments	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_italicize_comments=1$/;"	v
g:gruvbox_italicize_strings	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_italicize_strings=0$/;"	v
g:gruvbox_sign_column	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_sign_column='dark1'$/;"	v
g:gruvbox_termcolors	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_underline=1$/;"	v
g:gruvbox_vert_split	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let g:gruvbox_vert_split='dark2'$/;"	v
g:htmldjangocomplete_completions	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^let g:htmldjangocomplete_completions = []$/;"	v
g:htmldjangocomplete_debug	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^    let g:htmldjangocomplete_debug = 0$/;"	v
g:htmldjangocomplete_html_flavour	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^    let g:htmldjangocomplete_html_flavour = 'xhtml11'$/;"	v
g:hybrid_use_Xresources	bundle/vim-colorschemes/colors/hybrid.vim	/^  let g:hybrid_use_Xresources = 0$/;"	v
g:hybrid_use_iTerm_colors	bundle/vim-colorschemes/colors/hybrid.vim	/^  let g:hybrid_use_iTerm_colors = 0$/;"	v
g:indentLine_bufNameExclude	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:,'indentLine_bufNameExclude',[])$/;"	v
g:indentLine_char	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:,'indentLine_char',(&encoding ==# "utf-8" && &term isnot# "linux" ? '¦' : '|'))$/;"	v
g:indentLine_char	options.vim	/^let g:indentLine_char=nr2char(0xE0A3)$/;"	v
g:indentLine_color_gui	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:indentLine_color_gui = '#' . s:gb.dark2[0]$/;"	v
g:indentLine_color_term	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:indentLine_color_term = s:gb.dark2[1]$/;"	v
g:indentLine_enabled	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:,'indentLine_enabled',1)$/;"	v
g:indentLine_faster	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:,'indentLine_faster',0)$/;"	v
g:indentLine_faster	options.vim	/^let g:indentLine_faster=1$/;"	v
g:indentLine_fileType	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:,'indentLine_fileType',[])$/;"	v
g:indentLine_fileTypeExclude	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:,'indentLine_fileTypeExclude',[])$/;"	v
g:indentLine_first_char	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:,'indentLine_first_char',(&encoding ==# "utf-8" && &term isnot# "linux"  ? '¦' : '|'))$/;"	v
g:indentLine_indentLevel	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:,'indentLine_indentLevel',10)$/;"	v
g:indentLine_leadingSpaceChar	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:,'indentLine_leadingSpaceChar',(&encoding ==# "utf-8" && &term isnot# "linux" ? '˰' : '.'))$/;"	v
g:indentLine_leadingSpaceEnabled	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:,'indentLine_leadingSpaceEnabled',0)$/;"	v
g:indentLine_loaded	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:,'indentLine_maxLines',3000)$/;"	v
g:indentLine_setColors	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:,'indentLine_setColors',1)$/;"	v
g:indentLine_showFirstIndentLevel	bundle/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:,'indentLine_showFirstIndentLevel',0)$/;"	v
g:indent_guides_auto_colors	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	bundle/vim-colorschemes/colors/jellybeans.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_auto_colors	bundle/vim-colorschemes/colors/seoul256.vim	/^let g:indent_guides_auto_colors = 0$/;"	v
g:inkpot_black_background	bundle/vim-colorschemes/colors/inkpot.vim	/^    let g:inkpot_black_background = 0$/;"	v
g:jedi#completions_command	bundle/jedi-vim/test/completions.vim	/^let g:jedi#completions_command = 'X'$/;"	v
g:jedi#completions_command	bundle/jedi-vim/test/completions_disabled.vim	/^let g:jedi#completions_command = 'X'$/;"	v
g:jedi#completions_enabled	bundle/jedi-vim/test/completions_disabled.vim	/^let g:jedi#completions_enabled = 0$/;"	v
g:jedi#popup_on_dot	options.vim	/^let g:jedi#popup_on_dot = 1$/;"	v
g:jedi#popup_select_first	bundle/jedi-vim/test/completions.vim	/^        let g:jedi#popup_select_first = 0$/;"	v
g:jedi#popup_select_first	bundle/jedi-vim/test/completions.vim	/^        let g:jedi#popup_select_first = 1$/;"	v
g:jedi#show_call_signatures	bundle/jedi-vim/test/signatures.vim	/^        let g:jedi#show_call_signatures = 0$/;"	v
g:jedi#show_call_signatures	bundle/jedi-vim/test/signatures.vim	/^        let g:jedi#show_call_signatures = 1$/;"	v
g:jedi#show_call_signatures	bundle/jedi-vim/test/signatures.vim	/^        let g:jedi#show_call_signatures = 2$/;"	v
g:jedi#show_call_signatures	options.vim	/^let g:jedi#show_call_signatures = 0$/;"	v
g:jedi#use_splits_not_buffers	bundle/jedi-vim/test/goto.vim	/^        let g:jedi#use_splits_not_buffers = 'left'$/;"	v
g:jedi#use_tabs_not_buffers	bundle/jedi-vim/test/goto.vim	/^        let g:jedi#use_tabs_not_buffers = 0$/;"	v
g:jedi#use_tabs_not_buffers	options.vim	/^let g:jedi#use_tabs_not_buffers = 0$/;"	v
g:jellybeans_background_color	bundle/vim-colorschemes/colors/jellybeans.vim	/^  let g:jellybeans_background_color = "151515"$/;"	v
g:jellybeans_background_color_256	bundle/vim-colorschemes/colors/jellybeans.vim	/^  let g:jellybeans_background_color_256=233$/;"	v
g:js_indent_log	bundle/vim-web-indent/indent/javascript.vim	/^	let g:js_indent_log = 0$/;"	v
g:kind	bundle/unite.vim/test/source.vim	/^let g:kind = {$/;"	v
g:kind	bundle/unite.vim/test/source.vim	/^let g:kind.action_table.open = {$/;"	v
g:kolor_alternative_matchparen	bundle/vim-colorschemes/colors/kolor.vim	/^  let g:kolor_alternative_matchparen=0$/;"	v
g:kolor_bold	bundle/vim-colorschemes/colors/kolor.vim	/^  let g:kolor_bold=1$/;"	v
g:kolor_italic	bundle/vim-colorschemes/colors/kolor.vim	/^  let g:kolor_italic=1$/;"	v
g:kolor_underlined	bundle/vim-colorschemes/colors/kolor.vim	/^  let g:kolor_underlined=0$/;"	v
g:lightline#colorscheme#16color#palette	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let g:lightline#colorscheme#16color#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow#palette	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let g:lightline#colorscheme#Tomorrow#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night#palette	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let g:lightline#colorscheme#Tomorrow_Night#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Blue#palette	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Blue#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Bright#palette	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Bright#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#Tomorrow_Night_Eighties#palette	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let g:lightline#colorscheme#Tomorrow_Night_Eighties#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#default#palette	bundle/lightline.vim/autoload/lightline/colorscheme/default.vim	/^let g:lightline#colorscheme#default#palette = g:lightline#colorscheme#powerline#palette$/;"	v
g:lightline#colorscheme#jellybeans#palette	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let g:lightline#colorscheme#jellybeans#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#landscape#palette	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let g:lightline#colorscheme#landscape#palette = s:p$/;"	v
g:lightline#colorscheme#powerline#palette	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let g:lightline#colorscheme#powerline#palette = lightline#colorscheme#fill(s:p)$/;"	v
g:lightline#colorscheme#solarized#palette	bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let g:lightline#colorscheme#solarized#palette = g:lightline#colorscheme#solarized_dark#palette$/;"	v
g:lightline#colorscheme#solarized#palette	bundle/lightline.vim/autoload/lightline/colorscheme/solarized.vim	/^  let g:lightline#colorscheme#solarized#palette = g:lightline#colorscheme#solarized_light#palette$/;"	v
g:lightline#colorscheme#solarized_dark#palette	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let g:lightline#colorscheme#solarized_dark#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#solarized_light#palette	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let g:lightline#colorscheme#solarized_light#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:lightline#colorscheme#wombat#palette	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let g:lightline#colorscheme#wombat#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:loaded_Signature	bundle/vim-signature/plugin/signature.vim	/^let g:loaded_Signature = 3$/;"	v
g:loaded_ack	bundle/ack.vim/plugin/ack.vim	/^let g:loaded_ack = 1$/;"	v
g:loaded_airline	bundle/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_astronaut	bundle/vim-colorschemes/colors/astronaut.vim	/^let g:loaded_astronaut = "v7"$/;"	v
g:loaded_bufferline	bundle/vim-bufferline/plugin/bufferline.vim	/^let g:loaded_bufferline = 1$/;"	v
g:loaded_ctrlp	bundle/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_line	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_quickfix	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	bundle/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_lightline	bundle/lightline.vim/plugin/lightline.vim	/^let g:loaded_lightline = 1$/;"	v
g:loaded_matchparen	bundle/matchparenpp/plugin/matchparen++.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_mopkai	bundle/vim-colorschemes/colors/mopkai.vim	/^let g:loaded_mopkai = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_snowcrash_checker	bundle/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^let g:loaded_syntastic_apiblueprint_snowcrash_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	bundle/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	bundle/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	bundle/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	bundle/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	bundle/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	bundle/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	bundle/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	bundle/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	bundle/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	bundle/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	bundle/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	bundle/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	bundle/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	bundle/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	bundle/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	bundle/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	bundle/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	bundle/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_unite	bundle/unite.vim/plugin/unite.vim	/^let g:loaded_unite = 1$/;"	v
g:loaded_unite_source_bookmark	bundle/unite.vim/plugin/unite/bookmark.vim	/^let g:loaded_unite_source_bookmark = 1$/;"	v
g:loaded_unite_source_buffer	bundle/unite.vim/plugin/unite/buffer.vim	/^let g:loaded_unite_source_buffer = 1$/;"	v
g:loaded_unite_source_history_yank	bundle/unite.vim/plugin/unite/history_yank.vim	/^let g:loaded_unite_source_history_yank = 1$/;"	v
g:loaded_unite_source_window	bundle/unite.vim/plugin/unite/window.vim	/^let g:loaded_unite_source_window = 1$/;"	v
g:loaded_vimfiler	bundle/vimfiler.vim/plugin/vimfiler.vim	/^let g:loaded_vimfiler = 1$/;"	v
g:loaded_webdevicons	bundle/vim-webdevicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:nefertiti_base_brightness_level	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let g:nefertiti_base_brightness_level = get(g:, 'nefertiti_base_brightness_level', s:nefertiti_default_brightness_level)$/;"	v
g:nefertiti_current_brightness_level	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let g:nefertiti_current_brightness_level = g:nefertiti_base_brightness_level$/;"	v
g:pencil_higher_contrast_ui	bundle/vim-colorschemes/colors/pencil.vim	/^  let g:pencil_higher_contrast_ui = 0$/;"	v
g:pencil_neutral_headings	bundle/vim-colorschemes/colors/pencil.vim	/^  let g:pencil_neutral_headings = 0$/;"	v
g:pencil_terminal_italics	bundle/vim-colorschemes/colors/pencil.vim	/^  let g:pencil_terminal_italics = 0$/;"	v
g:pymode_indent	options.vim	/^let g:pymode_indent = 0$/;"	v
g:python_host_prog	nvim.vim	/^let g:python_host_prog='\/usr\/bin\/python'$/;"	v
g:rainbow_ctermfgs	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:rainbow_ctermfgs =$/;"	v
g:rainbow_guifgs	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:rainbow_guifgs =$/;"	v
g:rbpt_colorpairs	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:rbpt_colorpairs =$/;"	v
g:reliable_Metadata	bundle/vim-colorschemes/colors/reliable.vim	/^	let g:reliable_Metadata = {$/;"	v
g:seoul256_background	bundle/vim-colorschemes/colors/seoul256-light.vim	/^      let g:seoul256_background = s:backup$/;"	v
g:seoul256_background	bundle/vim-colorschemes/colors/seoul256-light.vim	/^      let g:seoul256_background = s:custom_bg$/;"	v
g:seoul256_current_bg	bundle/vim-colorschemes/colors/seoul256.vim	/^let g:seoul256_current_bg = [s:dark_bg, s:light_bg][s:style_idx]$/;"	v
g:seoul256_current_fg	bundle/vim-colorschemes/colors/seoul256.vim	/^let g:seoul256_current_fg = [s:dark_fg, s:light_fg][s:style_idx]$/;"	v
g:source	bundle/unite.vim/test/source.vim	/^let g:source = {$/;"	v
g:spectro_lightness	bundle/vim-colorschemes/colors/spectro.vim	/^	let g:spectro_lightness = 0$/;"	v
g:spectro_lightness	bundle/vim-colorschemes/colors/spectro.vim	/^	let g:spectro_lightness = 255$/;"	v
g:spectro_lightness	bundle/vim-colorschemes/colors/spectro.vim	/^    let g:spectro_lightness = 130$/;"	v
g:spectro_saturation	bundle/vim-colorschemes/colors/spectro.vim	/^	let g:spectro_saturation = 0$/;"	v
g:spectro_saturation	bundle/vim-colorschemes/colors/spectro.vim	/^	let g:spectro_saturation = 255$/;"	v
g:spectro_saturation	bundle/vim-colorschemes/colors/spectro.vim	/^    let g:spectro_saturation = 130$/;"	v
g:syntastic_	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_always_populate_loc_list	options.vim	/^let g:syntastic_always_populate_loc_list=1$/;"	v
g:syntastic_apiblueprint_snowcrash_sort	bundle/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^    let g:syntastic_apiblueprint_snowcrash_sort = 1$/;"	v
g:syntastic_asm_compiler_options	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_avrgcc_config_file	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_c_clang_check_sort	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_check_on_open	options.vim	/^let g:syntastic_check_on_open=1$/;"	v
g:syntastic_clang_check_config_file	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_css_prettycss_sort	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_signs	options.vim	/^let g:syntastic_enable_signs=0$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-5.5-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_checkers	options.vim	/^let g:syntastic_javascript_checkers = ['jslint']$/;"	v
g:syntastic_javascript_eslint_sort	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_less_options	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ''$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_checkers	options.vim	/^let g:syntastic_python_checkers = ['flake8']$/;"	v
g:syntastic_python_prospector_sort	bundle/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	bundle/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	bundle/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	bundle/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_svtools_styles	bundle/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sparse_config_file	bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verilog_compiler_options	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_vim_vint_sort	bundle/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:taboo_tabline	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tcomment#blank_lines	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#blank_lines = 2    "{{{2$/;"	v
g:tcomment#filetype_map	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#filetype_map = {$/;"	v
g:tcomment#ignore_char_type	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#ignore_comment_def	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#ignore_comment_def = []   "{{{2$/;"	v
g:tcomment#must_escape_expression_backslash	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#must_escape_expression_backslash = 0   "{{{2$/;"	v
g:tcomment#options_comments	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options_comments = {'whitespace': get(g:tcommentOptions, 'whitespace', 'both')}   "{{{2$/;"	v
g:tcomment#options_commentstring	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#options_commentstring = {'whitespace': get(g:tcommentOptions, 'whitespace', 'both')}   "{{{2$/;"	v
g:tcomment#replacements_c	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#rstrip_on_uncomment	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#rstrip_on_uncomment = 1   "{{{2$/;"	v
g:tcomment#syntax_substitute	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlockC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentBlockXML = {$/;"	v
g:tcommentGuessFileType	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_blade	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_blade = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_django	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_jinja	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_jinja = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_php	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_rnoweb	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_rnoweb = 'r'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineC = tcomment#GetLineC()$/;"	v
g:tcommentInlineXML	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentInlineXML = {$/;"	v
g:tcommentLineC_fmt	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentLineC_fmt = {$/;"	v
g:tcommentMapLeader1	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderCommentAnyway	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderCommentAnyway = 'g>' "{{{2$/;"	v
g:tcommentMapLeaderOp1	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderUncommentAnyway	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMapLeaderUncommentAnyway = 'g<' "{{{2$/;"	v
g:tcommentMaps	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentMaps = 1   "{{{2$/;"	v
g:tcommentModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	bundle/tcomment_vim/autoload/tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentTextObjectInlineComment	bundle/tcomment_vim/plugin/tcomment.vim	/^    let g:tcommentTextObjectInlineComment = 'ic'   "{{{2$/;"	v
g:unite_enable_auto_select	bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_enable_auto_select =$/;"	v
g:unite_force_overwrite_statusline	bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_force_overwrite_statusline =$/;"	v
g:unite_ignore_source_files	bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_ignore_source_files =$/;"	v
g:unite_kind_file_preview_max_filesize	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^  let g:unite_kind_file_preview_max_filesize = 1000000$/;"	v
g:unite_kind_jump_list_after_jump_scroll	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll = 25$/;"	v
g:unite_kind_jump_list_after_jump_scroll	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll =$/;"	v
g:unite_quick_match_table	bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_quick_match_table =$/;"	v
g:unite_redraw_hold_candidates	bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_redraw_hold_candidates =$/;"	v
g:vimfiler_as_default_explorer	bundle/vimfiler.vim/plugin/vimfiler.vim	/^let g:vimfiler_as_default_explorer =$/;"	v
g:vimfiler_define_wrapper_commands	bundle/vimfiler.vim/plugin/vimfiler.vim	/^let g:vimfiler_define_wrapper_commands =$/;"	v
g:vimfiler_detect_drives	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_drive.vim	/^let g:vimfiler_detect_drives =$/;"	v
g:vimfiler_directory_display_top	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_directory_display_top =$/;"	v
g:vimfiler_execute_file_list	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_execute_file_list =$/;"	v
g:vimfiler_expand_jump_to_first_child	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_expand_jump_to_first_child =$/;"	v
g:vimfiler_extensions	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_extensions =$/;"	v
g:vimfiler_file_icon	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_file_icon =$/;"	v
g:vimfiler_force_overwrite_statusline	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_force_overwrite_statusline =$/;"	v
g:vimfiler_ignore_pattern	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_ignore_pattern =$/;"	v
g:vimfiler_marked_file_icon	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_marked_file_icon =$/;"	v
g:vimfiler_max_directories_history	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_max_directories_history =$/;"	v
g:vimfiler_min_cache_files	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^let g:vimfiler_min_cache_files =$/;"	v
g:vimfiler_quick_look_command	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_quick_look_command =$/;"	v
g:vimfiler_readonly_file_icon	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_readonly_file_icon =$/;"	v
g:vimfiler_restore_alternate_file	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_restore_alternate_file =$/;"	v
g:vimfiler_safe_mode_by_default	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_safe_mode_by_default =$/;"	v
g:vimfiler_time_format	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_time_format =$/;"	v
g:vimfiler_tree_closed_icon	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_closed_icon =$/;"	v
g:vimfiler_tree_indentation	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_indentation =$/;"	v
g:vimfiler_tree_leaf_icon	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_leaf_icon =$/;"	v
g:vimfiler_tree_opened_icon	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_opened_icon =$/;"	v
g:vimshell_escape_colors	bundle/vim-colorschemes/colors/gruvbox.vim	/^let g:vimshell_escape_colors = map(split($/;"	v
g:webdevicons_enable	bundle/vim-webdevicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable	bundle/vim-webdevicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	bundle/vim-webdevicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_statusline	bundle/vim-webdevicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_tabline	bundle/vim-webdevicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_airline_tabline	bundle/vim-webdevicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_nerdtree	bundle/vim-webdevicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_nerdtree	bundle/vim-webdevicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_nerdtree	options.vim	/^let g:webdevicons_enable_nerdtree = 0$/;"	v
g:xterm16_blue	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16_blue		= 'h002550'$/;"	v
g:xterm16_bluegreen	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16_bluegreen	= 'm005031'$/;"	v
g:xterm16_darkblue	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16_darkblue	= 'h000050'$/;"	v
g:xterm16_green	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16_green		= 'm315000'$/;"	v
g:xterm16_grey	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16_grey		= 'm474747'$/;"	v
g:xterm16_palette	bundle/vim-colorschemes/colors/xterm16.vim	/^    let g:xterm16_palette = 'Current palette (Brightness: '.s:brightness. ', Colormap: '.s:colormap.')'$/;"	v
g:xterm16_skyblue	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16_skyblue	= 'h003850'$/;"	v
g:xterm16bg_Cursor	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16bg_Cursor		= '#00ff00'$/;"	v
g:xterm16fg_Cursor	bundle/vim-colorschemes/colors/xterm16.vim	/^	    let g:xterm16fg_Cursor		= '#ffffff'$/;"	v
g:zenburn_alternate_Error	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_alternate_Error = 0$/;"	v
g:zenburn_alternate_Include	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_alternate_Include = 0$/;"	v
g:zenburn_alternate_Visual	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_alternate_Visual = 0$/;"	v
g:zenburn_color_also_Ignore	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_color_also_Ignore = 0$/;"	v
g:zenburn_disable_Label_underline	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_disable_Label_underline = 0$/;"	v
g:zenburn_enable_TagHighlight	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_enable_TagHighlight = 0$/;"	v
g:zenburn_force_dark_Background	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_force_dark_Background = 0$/;"	v
g:zenburn_high_Contrast	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_high_Contrast = 0$/;"	v
g:zenburn_old_Visual	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_old_Visual = 0$/;"	v
g:zenburn_transparent	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_transparent = 0$/;"	v
g:zenburn_unified_CursorColumn	bundle/vim-colorschemes/colors/zenburn.vim	/^    let g:zenburn_unified_CursorColumn = 0$/;"	v
garfield	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
gc	bundle/jedi-vim/jedi/jedi/cache.py	/^import gc$/;"	i
gc	bundle/jedi-vim/jedi/scripts/wx_check.py	/^import gc$/;"	i
gen	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^gen = (a for arr in [[1.0]] for a in arr)$/;"	v
gen	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^gen = (i for i in (1,))$/;"	v
gen	bundle/jedi-vim/jedi/test/completion/generators.py	/^def gen():$/;"	f
gen_exe	bundle/jedi-vim/jedi/test/completion/generators.py	/^gen_exe = gen()$/;"	v
gen_part	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^        def gen_part():$/;"	f	function:FastParser._split_parts
gen_ret	bundle/jedi-vim/jedi/test/completion/generators.py	/^def gen_ret(value):$/;"	f
generate	bundle/jedi-vim/jedi/sith.py	/^    def generate(cls, file_path):$/;"	m	class:TestCase
generate_grammar	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser.pgen2.pgen import generate_grammar$/;"	i
generate_grammar	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^def generate_grammar(filename="Grammar.txt"):$/;"	f
generate_names	bundle/vim-bufferline/autoload/bufferline.vim	/^function! s:generate_names()$/;"	f
generate_pyc	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^def generate_pyc():$/;"	f
generate_tokens	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^def generate_tokens(readline):$/;"	f
generator	bundle/jedi-vim/jedi/test/static_analysis/generators.py	/^def generator():$/;"	f
generator_obj	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^generator_obj = CompiledObject(_a_generator(1.0))$/;"	v
get	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^        def get(element):$/;"	f	function:Slice.obj
get	bundle/jedi-vim/jedi/test/completion/generators.py	/^def get(param):$/;"	f
get	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def get(source):$/;"	f	function:test_signature_index
get_abbr_length	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:get_abbr_length(parent, child) "{{{$/;"	f
get_accented_line	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
get_action_current_dir	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:get_action_current_dir(files) "{{{$/;"	f
get_action_table	bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_action_table(source_name, kind_name, self_func, is_parents_action, source_table) "{{{$/;"	f
get_actions	bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:get_actions(candidates, sources) "{{{$/;"	f
get_airline_themes	bundle/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_alias_table	bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_alias_table(source_name, kind_name, source_table) "{{{$/;"	f
get_array	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_buffer_list	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:get_buffer_list(is_bang, is_question, is_plus, is_minus) "{{{$/;"	f
get_bufnr	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_bufnr(candidate) "{{{$/;"	f
get_by_name	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def get_by_name(self, name):$/;"	m	class:Builtin
get_call	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def get_call(self, source):$/;"	m	class:TestCallAndName
get_call_signature	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_call_signature(self, width=72, func_name=None):$/;"	m	class:Function
get_calling_var_args	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def get_calling_var_args(self):$/;"	m	class:Arguments
get_candidate_text	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:get_candidate_text(candidate) "{{{$/;"	f
get_candidates	bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_candidates(sources, context) "{{{$/;"	f
get_candidates_action_table	bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_candidates_action_table(action_name, candidates, sources) "{{{$/;"	f
get_code	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def get_code(self):$/;"	m	class:_Param
get_code	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_code(self):$/;"	m	class:AlreadyEvaluated
get_code	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_code(self):$/;"	m	class:BaseNode
get_code	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_code(self):$/;"	m	class:Leaf
get_completions	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^        def get_completions(user_stmt, bs):$/;"	f	function:Script.completions
get_context	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_context(self, yield_positions=False):$/;"	m	class:UserContext
get_context	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^function! s:get_context()$/;"	f
get_context_lines	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_context_lines(context, direction, start) "{{{$/;"	f
get_current_origin_url	bundle/vundle/autoload/vundle/installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	bundle/vundle/autoload/vundle/installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_datemark	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^function! s:get_datemark(file) "{{{$/;"	f
get_decorated_func	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_decorated_func(self):$/;"	m	class:Function
get_decorated_func	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_decorated_func(self):$/;"	m	class:InstanceElement
get_decorated_func	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_decorated_func(self):$/;"	m	class:LambdaWrapper
get_decorators	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_decorators(self):$/;"	m	class:ClassOrFunc
get_def	bundle/jedi-vim/jedi/test/test_regression.py	/^        def get_def(pos):$/;"	f	function:TestRegression.test_goto_definition_cursor
get_default_action	bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_default_action(source_name, kind_name) "{{{$/;"	f
get_defined_names	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def get_defined_names(self):$/;"	m	class:FakeImport
get_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:CompFor
get_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:ExprStmt
get_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:GlobalStmt
get_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:ImportFrom
get_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:ImportName
get_defined_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_defined_names(self):$/;"	m	class:WithStmt
get_definition	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def get_definition(self):$/;"	m	class:FakeName
get_definition	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_definition(self):$/;"	m	class:InstanceElement
get_definition	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_definition(self):$/;"	m	class:Name
get_definition_and_evaluator	bundle/jedi-vim/jedi/test/test_evaluate/test_representation.py	/^def get_definition_and_evaluator(source):$/;"	f
get_descriptor_returns	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_descriptor_returns(self, obj):$/;"	m	class:Instance
get_exact_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_exact_index_types(self, index):$/;"	m	class:Comprehension
get_exact_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_exact_index_types(self, index):$/;"	m	class:FakeDict
get_exact_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_exact_index_types(self, index):$/;"	m	class:FakeSequence
get_exact_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_exact_index_types(self, index):$/;"	m	class:GeneratorMixin
get_exact_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_exact_index_types(self, mixed_index):$/;"	m	class:Array
get_exact_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_exact_index_types(self, mixed_index):$/;"	m	class:MergedArray
get_execution_parent	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_execution_parent(element):$/;"	f	function:_check_array_additions
get_faked	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^def get_faked(module, obj, name=None):$/;"	f
get_filename	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_filename(candidate) "{{{$/;"	f
get_files	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_files(context, files, level, max_unit, ignore_dir) "{{{$/;"	f
get_filetime	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:get_filetime(filename) "{{{$/;"	f
get_first	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def get_first(self):$/;"	m	class:TestClass
get_from_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_from_names(self):$/;"	m	class:ImportFrom
get_git_branch	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:get_git_branch(path)$/;"	f
get_global_names	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_global_names(self):$/;"	m	class:GlobalStmt
get_hit_enter_max_length	bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_hit_enter_max_length	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_hunks	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
get_hunks_changes	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes()$/;"	f
get_hunks_empty	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
get_hunks_gitgutter	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
get_hunks_signify	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
get_ignore_results	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:get_ignore_results(path) "{{{$/;"	f
get_import	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def get_import(self, source):$/;"	m	class:TestImports
get_imports	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def get_imports(self):$/;"	m	class:CompiledObject
get_index_types	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def get_index_types(self, evaluator, index_array=()):$/;"	m	class:CompiledObject
get_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_index_types(self, evaluator, index):$/;"	m	class:ListComprehension
get_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_index_types(self, evaluator, index=()):$/;"	m	class:Array
get_index_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_index_types(self, evaluator, index_array):$/;"	m	class:GeneratorMixin
get_index_types	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_index_types(self, evaluator, index_array):$/;"	m	class:Instance
get_init_path	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^def get_init_path(directory_path):$/;"	f
get_instance_el	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^def get_instance_el(evaluator, instance, var, is_class_var=False):$/;"	f
get_iterator_types	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^def get_iterator_types(inputs):$/;"	f
get_iterator_types	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^        from jedi.evaluate.iterable import get_iterator_types$/;"	i
get_last_selected	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_last_status	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_last_status	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_line	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^        def get_line(pos):$/;"	f	function:UserContext.call_signature
get_line	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_line(self, line_nr):$/;"	m	class:UserContext
get_lines	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_lines(context, direction, bufnr, start, max) "{{{$/;"	f
get_list	bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_list() "{{{$/;"	f
get_list	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! s:get_list() "{{{$/;"	f
get_lua_file_size	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^function! s:get_lua_file_size(filename) "{{{$/;"	f
get_map_str	bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_message	bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_message() "{{{$/;"	f
get_message	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! s:get_message() "{{{$/;"	f
get_migemo_pattern	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:get_migemo_pattern(input)$/;"	f
get_module	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.evaluate.compiled.fake import get_module$/;"	i
get_module	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^def get_module(obj):$/;"	f
get_module_names	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate.helpers import FakeName, get_module_names$/;"	i
get_module_names	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^def get_module_names(module, all_scopes):$/;"	f
get_module_statements	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^def get_module_statements(module):$/;"	f
get_modules_containing_name	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^def get_modules_containing_name(evaluator, mods, name):$/;"	f
get_on_import_stmt	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^def get_on_import_stmt(evaluator, user_context, user_stmt, is_like_search=False):$/;"	f
get_operator	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^def get_operator(string, pos):$/;"	f
get_operator_under_cursor	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_operator_under_cursor(self):$/;"	m	class:UserContext
get_param	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^        def get_param(scope, el):$/;"	f	function:NameFinder.names_dict_lookup
get_params	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^def get_params(evaluator, func, var_args):$/;"	f
get_params	bundle/jedi-vim/jedi_vim.py	/^    def get_params(s):$/;"	f	function:cmdline_call_signatures
get_params_for_module	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^    def get_params_for_module(module):$/;"	f	function:search_function_call
get_parent_scope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_parent_scope(self, include_flows=False):$/;"	m	class:Base
get_parent_until	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    def get_parent_until(self):$/;"	m	class:Keyword
get_parent_until	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
get_parent_until	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def get_parent_until(self):$/;"	m	class:Array
get_parent_until	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def get_parent_until(self, *args, **kwargs):$/;"	m	class:Arguments
get_parent_until	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_parent_until(self, *args, **kwargs):$/;"	m	class:Executed
get_parent_until	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_parent_until(self, *args, **kwargs):$/;"	m	class:InstanceElement
get_parent_until	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_parent_until(self, classes=(), reverse=False,$/;"	m	class:Base
get_path_after_cursor	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_path_after_cursor(self):$/;"	m	class:UserContext
get_path_under_cursor	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_path_under_cursor(self):$/;"	m	class:UserContext
get_path_until_cursor	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_path_until_cursor(self):$/;"	m	class:UserContext
get_paths	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_paths(args, context) "{{{$/;"	f
get_posibilities	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^        def get_posibilities(evaluator, module, func_name):$/;"	f	function:search_function_call.get_params_for_module
get_position_line	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def get_position_line(self):$/;"	m	class:UserContext
get_prelude	bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_prelude	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_prev_group	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_prev_group(sections, i)$/;"	f
get_previous	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_previous(self):$/;"	m	class:Leaf
get_process	bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_process() "{{{$/;"	f
get_process	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! s:get_process() "{{{$/;"	f
get_quick_match_table	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:get_quick_match_table() "{{{$/;"	f
get_resume_buffer	bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_resume_buffer(buffer_name) "{{{$/;"	f
get_return_types	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_return_types(self, check_yields=False):$/;"	m	class:FunctionExecution
get_rhs	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_rhs(self):$/;"	m	class:InstanceElement
get_rhs	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_rhs(self):$/;"	m	class:ExprStmt
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_script	bundle/jedi-vim/jedi_vim.py	/^def get_script(source=None, column=None):$/;"	f
get_section	bundle/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_selected_text	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_self_attributes	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def get_self_attributes(self):$/;"	m	class:CompiledObject
get_seperator	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_source_candidates	bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:get_source_candidates(source) "{{{$/;"	f
get_statement_for_position	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_statement_for_position(self, pos):$/;"	m	class:BaseNode
get_string	bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_string() "{{{$/;"	f
get_string	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! s:get_string() "{{{$/;"	f
get_sub	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def get_sub(self, source):$/;"	m	class:TestSubscopes
get_subscope_by_name	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def get_subscope_by_name(self, name):$/;"	m	class:CompiledObject
get_subscope_by_name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_subscope_by_name(self, name):$/;"	m	class:Class
get_subscope_by_name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def get_subscope_by_name(self, name):$/;"	m	class:Instance
get_super_arglist	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def get_super_arglist(self):$/;"	m	class:Class
get_syn	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_sys_path	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.evaluate.sys_path import get_sys_path$/;"	i
get_sys_path	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def get_sys_path():$/;"	f
get_sys_path_powers	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    def get_sys_path_powers(names):$/;"	f	function:_check_module
get_system	bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_system() "{{{$/;"	f
get_text	bundle/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
get_transitioned_seperator	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_types	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def get_types(source, **kwargs):$/;"	f	function:test_basedefinition_type_import
get_unite_buffer	bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_unite_buffer(buffer_name) "{{{$/;"	f
get_visible_buffers	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:get_visible_buffers()$/;"	f
getbookmarks	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f
getchar	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar_safe	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getcolor	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:getcolor( globvar, cname)$/;"	f
getenv	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f
getextvar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f
getfilename	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
getfilename	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
gethistdata	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f
gethistloc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f
getinput	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f
getnewmix	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f
getparent	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f
getregs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f
gettime	bundle/tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
gettoken	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def gettoken(self):$/;"	m	class:ParserGenerator
getundo	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f
gf	keys.vim	/^nnoremap gf gF$/;"	m
ggdd	bundle/jedi-vim/test/goto.vim	/^        normal! ggdd$/;"	m
ggi*	bundle/vim-gitgutter/test/testModifyLines.vim	/^normal ggi*$/;"	m
ggo*	bundle/vim-gitgutter/test/testAddLines.vim	/^normal ggo*$/;"	m
ggo*	bundle/vim-gitgutter/test/testFilenameWithSquareBrackets.vim	/^normal ggo*$/;"	m
ggx	bundle/vim-gitgutter/test/testKeepAlt.vim	/^normal ggx$/;"	m
gitgutter	bundle/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all()$/;"	f
gitgutter#debug#debug	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#log	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message)$/;"	f
gitgutter#debug#option	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	bundle/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#adjust_hunk_summary	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#adjust_hunk_summary(diff_for_hunk, staging)$/;"	f
gitgutter#diff#discard_hunks	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header)$/;"	f
gitgutter#diff#generate_diff_for_hunk	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(type)$/;"	f
gitgutter#diff#is_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count)$/;"	f
gitgutter#diff#is_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count)$/;"	f
gitgutter#diff#parse_diff	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff)$/;"	f
gitgutter#diff#parse_hunk	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line)$/;"	f
gitgutter#diff#process_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_hunk	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk)$/;"	f
gitgutter#diff#process_hunks	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks)$/;"	f
gitgutter#diff#process_modified	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_added	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_removed	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#run_diff	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, use_external_grep)$/;"	f
gitgutter#disable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable()$/;"	f
gitgutter#enable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable()$/;"	f
gitgutter#highlight#define_highlights	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights()$/;"	f
gitgutter#highlight#define_sign_column_highlight	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight()$/;"	f
gitgutter#highlight#define_sign_line_highlights	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights()$/;"	f
gitgutter#highlight#define_sign_text	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text()$/;"	f
gitgutter#highlight#define_sign_text_highlights	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights()$/;"	f
gitgutter#highlight#define_signs	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs()$/;"	f
gitgutter#highlight#get_background_colors	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group)$/;"	f
gitgutter#highlight#match_highlight	bundle/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern)$/;"	f
gitgutter#hunk#current_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk()$/;"	f
gitgutter#hunk#cursor_in_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk)$/;"	f
gitgutter#hunk#hunks	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks()$/;"	f
gitgutter#hunk#increment_lines_added	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count)$/;"	f
gitgutter#hunk#increment_lines_modified	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count)$/;"	f
gitgutter#hunk#increment_lines_removed	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count)$/;"	f
gitgutter#hunk#line_adjustment_for_current_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#line_adjustment_for_current_hunk()$/;"	f
gitgutter#hunk#next_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count)$/;"	f
gitgutter#hunk#prev_hunk	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count)$/;"	f
gitgutter#hunk#reset	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset()$/;"	f
gitgutter#hunk#set_hunks	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks)$/;"	f
gitgutter#hunk#summary	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary()$/;"	f
gitgutter#line_highlights_disable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable()$/;"	f
gitgutter#line_highlights_enable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable()$/;"	f
gitgutter#line_highlights_toggle	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle()$/;"	f
gitgutter#preview_hunk	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk()$/;"	f
gitgutter#process_buffer	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, realtime)$/;"	f
gitgutter#revert_hunk	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#revert_hunk()$/;"	f
gitgutter#sign#add_dummy_sign	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign()$/;"	f
gitgutter#sign#clear_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs()$/;"	f
gitgutter#sign#find_current_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs()$/;"	f
gitgutter#sign#next_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id()$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(new_gitgutter_signs_line_numbers)$/;"	f
gitgutter#sign#remove_dummy_sign	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force)$/;"	f
gitgutter#sign#remove_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, all_signs)$/;"	f
gitgutter#sign#update_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(modified_lines)$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(modified_lines)$/;"	f
gitgutter#signs_disable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable()$/;"	f
gitgutter#signs_enable	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable()$/;"	f
gitgutter#signs_toggle	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle()$/;"	f
gitgutter#stage_hunk	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk()$/;"	f
gitgutter#toggle	bundle/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle()$/;"	f
gitgutter#utility#bufnr	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#bufnr()$/;"	f
gitgutter#utility#command_in_directory_of_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd)$/;"	f
gitgutter#utility#directory_of_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file()$/;"	f
gitgutter#utility#exists_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file()$/;"	f
gitgutter#utility#extension	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension()$/;"	f
gitgutter#utility#file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root()$/;"	f
gitgutter#utility#filename	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename()$/;"	f
gitgutter#utility#full_path_to_directory_of_file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#full_path_to_directory_of_file()$/;"	f
gitgutter#utility#has_fresh_changes	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes()$/;"	f
gitgutter#utility#has_unsaved_changes	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes()$/;"	f
gitgutter#utility#highlight_name_for_change	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text)$/;"	f
gitgutter#utility#is_active	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active()$/;"	f
gitgutter#utility#not_git_dir	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#not_git_dir()$/;"	f
gitgutter#utility#save_last_seen_change	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change()$/;"	f
gitgutter#utility#set_buffer	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_buffer(bufnr)$/;"	f
gitgutter#utility#shell_error	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error()$/;"	f
gitgutter#utility#shellescape	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg)$/;"	f
gitgutter#utility#strip_trailing_new_line	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line)$/;"	f
gitgutter#utility#system	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...)$/;"	f
gitgutter#utility#using_xolox_shell	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell()$/;"	f
gitgutter#utility#warn	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message)$/;"	f
github	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glbpath	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f
glob	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^import glob$/;"	i
glob	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob2_pattern	bundle/unite.vim/autoload/unite/filters.vim	/^function! s:glob2_pattern(glob, is_lua) abort "{{{$/;"	f
global_define	bundle/jedi-vim/jedi/test/completion/basic.py	/^def global_define():$/;"	f
global_names	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def global_names(self):$/;"	m	class:FastModule
global_names	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def global_names(self, value):$/;"	m	class:FastModule
global_names_dict_generator	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate.finder import global_names_dict_generator, filter_definition_names$/;"	i
global_names_dict_generator	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^def global_names_dict_generator(evaluator, scope, position):$/;"	f
globdirs	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f
globpath	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
goto	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def goto(self, name):$/;"	m	class:Evaluator
goto	bundle/jedi-vim/jedi_vim.py	/^def goto(mode="goto", no_output=False):$/;"	f
gotoSymbol	bundle/vim-gotosymbol/plugin/taglist.vim	/^    function! s:gotoSymbol(symbol)$/;"	f
goto_assignments	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def goto_assignments(self):$/;"	m	class:Script
goto_assignments	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def goto_assignments(self):$/;"	m	class:BaseDefinition
goto_definition	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def goto_definition(self, name):$/;"	m	class:Evaluator
goto_definitions	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def goto_definitions(self):$/;"	m	class:Script
goto_markedwin	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
grammar	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^from . import grammar$/;"	i
gray	bundle/vim-colorschemes/colors/spectro.vim	/^let gray   = "#dcdccc"$/;"	v
grep	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:grep() "{{{$/;"	f
grey_color	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>grey_color(n)$/;"	f
grey_color	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>grey_color(n)$/;"	f
grey_colour	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_colour	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>grey_colour(n)$/;"	f
grey_level	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>grey_level(n)$/;"	f
grey_level	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>grey_level(n)$/;"	f
grey_number	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>grey_number(x)$/;"	f
grey_number	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>grey_number(x)$/;"	f
group	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^def group(*choices):$/;"	f
group_by	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gui	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^fun s:gui(color)$/;"	f
gui2cui	bundle/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
guicolor	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:guicolor( r, g, b)$/;"	f
guilevel	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:guilevel( n)$/;"	f
guisetcolor	bundle/vim-colorschemes/colors/calmar256-light.vim	/^function! s:guisetcolor(colarg)$/;"	f
h	bundle/vim-colorschemes/colors/flatui.vim	/^function! s:h(group, style)$/;"	f
h	bundle/vim-colorschemes/colors/hemisu.vim	/^function! s:h(group, style)$/;"	f
h	bundle/vim-colorschemes/colors/pencil.vim	/^function! s:h(group, style)$/;"	f
handleLeftClick	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
has	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_common_items	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_doc	bundle/vundle/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_explicit_absolute_import	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def has_explicit_absolute_import(self):$/;"	m	class:Module
has_index	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_preview_window	bundle/unite.vim/autoload/unite/view.vim	/^function! s:has_preview_window() "{{{$/;"	f
has_vimproc	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^function! s:has_vimproc() abort$/;"	f
hash	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hashlib	bundle/jedi-vim/jedi/jedi/cache.py	/^import hashlib$/;"	i
hashlib	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import hashlib$/;"	i
headntail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f
help	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:help() "{{{$/;"	f
helpers	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.api import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/jedi/refactoring.py	/^from jedi.evaluate import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/test/completion/imports.py	/^from .. import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/test/conftest.py	/^from . import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^from .. import helpers$/;"	i
helpers	bundle/jedi-vim/jedi/test/test_integration.py	/^from . import helpers$/;"	i
helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
hex_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^hex_number = r'0[xX][0-9a-fA-F]+'$/;"	v
hi	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^fun <sid>hi(group, guifg, guibg, ctermfg, ctermbg, attr)$/;"	f
hi	bundle/vim-colorschemes/colors/elda.vim	/^function! s:hi(item, fg, bg, style)$/;"	f
hi	bundle/vim-colorschemes/colors/seoul256.vim	/^function! s:hi(item, fg, bg)$/;"	f
hi	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:hi( group, attr, fg, bg, ...)$/;"	f
hibg	bundle/vim-colorschemes/colors/bocau.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hibg	bundle/vim-colorschemes/colors/jiks.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hibg	bundle/vim-colorschemes/colors/vividchalk.vim	/^function! s:hibg(group,guibg,first,second)$/;"	f
hifg	bundle/vim-colorschemes/colors/bocau.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
hifg	bundle/vim-colorschemes/colors/jiks.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
hifg	bundle/vim-colorschemes/colors/vividchalk.vim	/^function! s:hifg(group,guifg,first,second,...)$/;"	f
highlight	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f
highlight	bundle/vim-colorschemes/colors/coffee.vim	/^function! s:highlight(group, fg, bg, attr)$/;"	f
history_complete	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:history_complete(arglead, cmdline, cursorpos)$/;"	f
hl	bundle/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	bundle/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hs_highlight_boolean	bundle/vim-colorschemes/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	bundle/vim-colorschemes/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
hsl2color	bundle/vim-colorschemes/colors/saturn.vim	/^fu! s:hsl2color(h, s, l)$/;"	f
html_my_rendering	bundle/vim-colorschemes/colors/tabula.vim	/^let html_my_rendering=1$/;"	v
html_sidebars	bundle/jedi-vim/jedi/docs/conf.py	/^html_sidebars = {$/;"	v
html_static_path	bundle/jedi-vim/jedi/docs/conf.py	/^html_static_path = ['_static']$/;"	v
html_theme	bundle/jedi-vim/jedi/docs/conf.py	/^html_theme = 'flask'$/;"	v
html_theme_path	bundle/jedi-vim/jedi/docs/conf.py	/^html_theme_path = ['_themes']$/;"	v
htmldjangocomplete#CompleteDjango	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^function! htmldjangocomplete#CompleteDjango(findstart, base)$/;"	f
htmlhelp_basename	bundle/jedi-vim/jedi/docs/conf.py	/^htmlhelp_basename = 'Jedidoc'$/;"	v
https	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
huhu	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^def huhu(db):$/;"	f
i	bundle/jedi-vim/jedi/test/completion/precedence.py	/^i = 0$/;"	v
i	bundle/jedi-vim/jedi/test/completion/precedence.py	/^i = 1$/;"	v
iconv	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
ifilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f
ignore	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f
ignore_candidates	bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:ignore_candidates(candidates, context) "{{{$/;"	f
ignored	bundle/jedi-vim/jedi/jedi/common.py	/^def ignored(*exceptions):$/;"	f
ignored_modules	bundle/jedi-vim/jedi/jedi/debug.py	/^ignored_modules = ['jedi.evaluate.builtin', 'jedi.parser']$/;"	v
ihello	bundle/vim-gitgutter/test/testFileAddedToGit.vim	/^normal ihello$/;"	m
im	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
imag_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^imag_number = group(r'[0-9]+[jJ]', float_number + r'[jJ]')$/;"	v
imitate_pydoc	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^def imitate_pydoc(string):$/;"	f
imp	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^import imp$/;"	i
imp	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^import imp$/;"	i
imp	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^import imp$/;"	i
imp_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^from . import import_tree as imp_tree$/;"	i
import	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
import	bundle/jedi-vim/jedi/test/test_integration_import.py	/^        assert len(Script("import import", path='').completions()) > 0$/;"	i
import	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
import	bundle/jedi-vim/jedi/test/test_utils.py	/^        assert self.completions('import keyword') == ['import keyword']$/;"	i
import	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:import(name, ...) abort$/;"	f
import	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:import(name, ...) abort$/;"	f
import_tree	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.mod1$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.pkg$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.pkg.mod1$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.mod1 as bar$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.mod1$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.pkg$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.pkg.mod1$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.random$/;"	i
import_tree	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import not_existant, import_tree.mod1 as foo$/;"	i
import_tree	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^import import_tree$/;"	i
importer_from_error_statement	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^def importer_from_error_statement(error_statement, pos):$/;"	f
importlib	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import importlib$/;"	i
imports	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/api/usages.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import imports$/;"	i
imports	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def imports(self):$/;"	m	class:Scope
imports	bundle/jedi-vim/jedi/test/test_regression.py	/^from jedi.evaluate import imports$/;"	i
in	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
in_builtin_module	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def in_builtin_module(self):$/;"	m	class:BaseDefinition
in_django	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^function! s:in_django(l,s)$/;"	f
increase_indent	bundle/jedi-vim/jedi/jedi/debug.py	/^def increase_indent(func):$/;"	f
indent	bundle/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def indent$/;"	f
indentLine	bundle/indentLine/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
indent_block	bundle/jedi-vim/jedi/jedi/common.py	/^def indent_block(text, indention='    '):$/;"	f
indent_block	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.common import indent_block$/;"	i
indent_like_block	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_opening_paren	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_previous_line	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
indentfault	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def indentfault():$/;"	f
index	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def index(self):$/;"	m	class:CallSignature
index	bundle/jedi-vim/jedi/test/completion/arrays.py	/^index = 'asdf'$/;"	v
index	bundle/jedi-vim/jedi/test/completion/arrays.py	/^index = 1$/;"	v
index	bundle/jedi-vim/jedi/test/completion/arrays.py	/^index = int$/;"	v
index	bundle/jedi-vim/jedi/test/completion/arrays.py	/^index = int()$/;"	v
index	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^index = C().with_param()(1)$/;"	v
index	bundle/jedi-vim/jedi/test/completion/precedence.py	/^index = 0 + 1$/;"	v
init	bundle/jedi-vim/jedi/jedi/debug.py	/^        from colorama import Fore, init$/;"	i
init	bundle/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
init	bundle/vundle/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_bookmark	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:init_bookmark(filename)  "{{{$/;"	f
init_continuation	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:init_continuation(context, directory) "{{{$/;"	f
init_profile	bundle/vimfiler.vim/autoload/vimfiler/custom.vim	/^function! s:init_profile() "{{{$/;"	f
init_python	bundle/jedi-vim/autoload/jedi.vim	/^function! s:init_python()$/;"	f
init_var	bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
initialise	bundle/jedi-vim/jedi/jedi/debug.py	/^        from colorama import initialise$/;"	i
initialize_default	bundle/unite.vim/autoload/unite/variables.vim	/^function! s:initialize_default() "{{{$/;"	f
initialize_default_options	bundle/vimfiler.vim/autoload/vimfiler/variables.vim	/^function! s:initialize_default_options() "{{{$/;"	f
inline	bundle/jedi-vim/jedi/jedi/refactoring.py	/^def inline(script):$/;"	f
input_directory	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:input_directory() "{{{$/;"	f
input_helper	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_overwrite_method	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:input_overwrite_method(dest, src) "{{{$/;"	f
input_safe	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputs	bundle/jedi-vim/jedi/test/completion/functions.py	/^def inputs(param):$/;"	f
insert_enter	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter(key) "{{{$/;"	f
insert_enter2	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter2() "{{{$/;"	f
insert_leave	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_leave() "{{{$/;"	f
insert_selected_candidate	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_selected_candidate() "{{{$/;"	f
insertcache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f
insertstr	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f
inspect	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/jedi/cache.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/jedi/debug.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^import inspect$/;"	i
inspect	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^import inspect$/;"	i
inst	bundle/jedi-vim/jedi/test/completion/classes.py	/^inst = TestClass(1)$/;"	v
instance	bundle/jedi-vim/jedi/test/completion/classes.py	/^instance = SubClass()$/;"	v
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
int_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^int_number = group(hex_number, bin_number, oct_number, dec_number)$/;"	v
interpreter	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.api import interpreter$/;"	i
intersect	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersphinx_mapping	bundle/jedi-vim/jedi/docs/conf.py	/^intersphinx_mapping = {$/;"	v
ints	bundle/jedi-vim/jedi/test/completion/classes.py	/^ints = TestClass(1, 1.0)$/;"	v
invalid	bundle/jedi-vim/jedi/test/completion/invalid.py	/^invalid = ,call$/;"	v
invalid	bundle/jedi-vim/jedi/test/completion/invalid.py	/^invalid = .call$/;"	v
invalid	bundle/jedi-vim/jedi/test/completion/invalid.py	/^invalid = call?.call$/;"	v
invalid_param	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def invalid_param(param=):$/;"	f
invalidate_star_import_cache	bundle/jedi-vim/jedi/jedi/cache.py	/^def invalidate_star_import_cache(path):$/;"	f
invert	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^    def invert(self):$/;"	m	class:Status
invisible_pkg	bundle/jedi-vim/jedi/test/completion/import_tree/__init__.py	/^from . import invisible_pkg$/;"	i
invisible_pkg	bundle/jedi-vim/jedi/test/completion/import_tree/__init__.py	/^invisible_pkg = 1$/;"	v
invoke_funcrefs	bundle/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
io	bundle/jedi-vim/jedi/test/completion/imports.py	/^from tokenize import io$/;"	i
is	bundle/jedi-vim/jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
is	bundle/jedi-vim/jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
is_absolute	bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:is_absolute(path) "{{{$/;"	f
is_branch_empty	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty()$/;"	f
is_class	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def is_class(self):$/;"	m	class:CompiledObject
is_class	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def is_class(self):$/;"	m	class:IterableWrapper
is_class	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_class(self):$/;"	m	class:Class
is_class	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_class(self):$/;"	m	class:Wrapper
is_class_instance	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^def is_class_instance(obj):$/;"	f
is_cmdwin	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_concealed	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:is_concealed(line, col)$/;"	f
is_cygwin	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_definition	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def is_definition(self):$/;"	m	class:Definition
is_definition	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^    def is_definition(self):$/;"	m	class:LazyName
is_definition	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def is_definition(self):$/;"	m	class:CompiledName
is_definition	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def is_definition(self):$/;"	m	class:FakeImport
is_definition	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def is_definition(self):$/;"	m	class:FakeName
is_definition	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_definition(self):$/;"	m	class:InstanceElement
is_definition	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_definition(self):$/;"	m	class:InstanceName
is_definition	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_definition(self):$/;"	m	class:Name
is_dict	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_excluded_window	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_float	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_generator	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_generator(self):$/;"	m	class:Function
is_generator	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_generator(self):$/;"	m	class:Lambda
is_identifier	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^    is_identifier = lambda s: s in namechars$/;"	v
is_identifier	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^    is_identifier = str.isidentifier$/;"	v
is_list	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_listed	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:is_listed(is_bang, is_question, is_plus, is_minus, bufnr) "{{{$/;"	f
is_literal	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def is_literal(obj):$/;"	f
is_mac	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_nested	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_nested(self):$/;"	m	class:Import
is_nested	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_nested(self):$/;"	m	class:ImportName
is_node	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^def is_node(node, *symbol_names):$/;"	f
is_number	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_py26	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^is_py26 = not is_py3 and sys.version_info[1] < 7$/;"	v
is_py26	bundle/jedi-vim/jedi/test/test_integration_import.py	/^from jedi._compatibility import is_py26$/;"	i
is_py26	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^from jedi._compatibility import is_py26$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/debug.py	/^from jedi._compatibility import encoding, is_py3, u$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi._compatibility import use_metaclass, is_py3, unicode$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/parser/token.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
is_py3	bundle/jedi-vim/jedi/test/run.py	/^from jedi._compatibility import unicode, is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi._compatibility import builtins, is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/test/test_integration_keyword.py	/^from jedi._compatibility import is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from jedi._compatibility import u, is_py3$/;"	i
is_py3	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi._compatibility import u, is_py3$/;"	i
is_py33	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^from jedi._compatibility import is_py33$/;"	i
is_py33	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^from jedi._compatibility import is_py33$/;"	i
is_python_string	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
is_scope	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def is_scope(self):$/;"	m	class:CompiledObject
is_scope	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_scope(self):$/;"	m	class:Executed
is_scope	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_scope(self):$/;"	m	class:InstanceElement
is_scope	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def is_scope(self):$/;"	m	class:Wrapper
is_scope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_scope(self):$/;"	m	class:Base
is_scope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_scope(self):$/;"	m	class:CompFor
is_scope	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_scope(self):$/;"	m	class:Scope
is_star_import	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def is_star_import(self):$/;"	m	class:Import
is_string	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^def is_string(obj):$/;"	f
is_string	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^        from jedi.evaluate.precedence import is_string$/;"	i
is_string	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_submodule	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^    def is_submodule(m):$/;"	f	function:test_no_duplicate_modules
is_unix	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_windows() abort$/;"	f
iscmdwin	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f
isdir	bundle/jedi-vim/jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
isinst	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def isinst(x):$/;"	f
isinstance	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def isinstance(self, *cls):$/;"	m	class:InstanceElement
isinstance	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def isinstance(self, *cls):$/;"	m	class:Base
iskeyword	bundle/jedi-vim/jedi/test/completion/imports.py	/^                    iskeyword$/;"	i
isolated_jedi_cache	bundle/jedi-vim/jedi/test/conftest.py	/^def isolated_jedi_cache(monkeypatch, tmpdir):$/;"	f
ispathitem	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f
items	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def items(self):$/;"	m	class:MergedNamesDict
iter_content	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def iter_content(self):$/;"	m	class:Array
iter_content	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def iter_content(self):$/;"	m	class:ArrayInstance
iter_content	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def iter_content(self):$/;"	m	class:Generator
iter_content	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def iter_content(self):$/;"	m	class:GeneratorComprehension
iter_content	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def iter_content(self):$/;"	m	class:ListComprehension
iterable	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^                    from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^    from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^    from jedi.evaluate import iterable, representation as er$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import iterable$/;"	i
iterable	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import iterable$/;"	i
itself	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^        raise ValueError('Name should be defined in the import itself')$/;"	i
j	bundle/ack.vim/ftplugin/qf.vim	/^  nnoremap <buffer> j jzz$/;"	m
jedi	bundle/jedi-vim/jedi/conftest.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/docs/conf.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/jedi/__main__.py	/^    import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/jedi/api/replstartup.py	/^import jedi.utils$/;"	i
jedi	bundle/jedi-vim/jedi/scripts/memory_check.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/scripts/profile.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/scripts/wx_check.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/setup.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/sith.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/conftest.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/refactor.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/run.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    docstr('import jedi\\njedi.Scr', cleandoc(Script.__doc__))$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_cache.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_debug.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_annotations.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_parser/test_user_context.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_regression.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi/test/test_speed.py	/^import jedi$/;"	i
jedi	bundle/jedi-vim/jedi_vim.py	/^        import jedi$/;"	i
jedi	bundle/jedi-vim/jedi_vim.py	/^        jedi = None$/;"	v
jedi	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
jedi	bundle/jedi-vim/jedi_vim.py	/^    import jedi$/;"	i
jedi#_vim_exceptions	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#_vim_exceptions(str, is_eval)$/;"	f
jedi#add_goto_window	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#add_goto_window(len)$/;"	f
jedi#complete_opened	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#complete_opened(is_popup_on_dot)$/;"	f
jedi#complete_string	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#complete_string(is_popup_on_dot)$/;"	f
jedi#completions	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#completions(findstart, base)$/;"	f
jedi#configure_call_signatures	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#configure_call_signatures()$/;"	f
jedi#disable_debugging	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#disable_debugging()$/;"	f
jedi#do_popup_on_dot_in_highlight	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#do_popup_on_dot_in_highlight()$/;"	f
jedi#enable_debugging	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#enable_debugging()$/;"	f
jedi#enable_speed_debugging	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#enable_speed_debugging()$/;"	f
jedi#force_py_version	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#force_py_version(py_version)$/;"	f
jedi#force_py_version_switch	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#force_py_version_switch()$/;"	f
jedi#goto	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto()$/;"	f
jedi#goto_assignments	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_assignments()$/;"	f
jedi#goto_definitions	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_definitions()$/;"	f
jedi#goto_window_on_enter	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_window_on_enter()$/;"	f
jedi#init_python	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#init_python()$/;"	f
jedi#py_import	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#py_import(args)$/;"	f
jedi#py_import_completions	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#py_import_completions(argl, cmdl, pos)$/;"	f
jedi#rename	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#rename(...)$/;"	f
jedi#rename_visual	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#rename_visual(...)$/;"	f
jedi#setup_py_version	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#setup_py_version(py_version)$/;"	f
jedi#show_documentation	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#show_documentation()$/;"	f
jedi#usages	bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#usages()$/;"	f
jedi_	bundle/jedi-vim/jedi/test/completion/sys_path.py	/^import jedi_$/;"	i
jedi_cache_directory_orig	bundle/jedi-vim/jedi/conftest.py	/^jedi_cache_directory_orig = None$/;"	v
jedi_cache_directory_temp	bundle/jedi-vim/jedi/conftest.py	/^jedi_cache_directory_temp = None$/;"	v
jedi_doc	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
jedi_vim	bundle/jedi-vim/initialize.py	/^import jedi_vim$/;"	i
jellyx_show_whitespace	bundle/vim-colorschemes/colors/jellyx.vim	/^    augroup jellyx_show_whitespace$/;"	a
jj	keys.vim	/^nnoremap <silent> jj :nohl<CR>$/;"	m
job_handler	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:job_handler(job_id, data, event) abort "{{{$/;"	f
join	bundle/jedi-vim/jedi/jedi/__main__.py	/^from os.path import join, dirname, abspath, isdir$/;"	i
join	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from os.path import join$/;"	i
join	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^        self.check('import os; os.path.join', 'os.path.join')$/;"	i
join	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        from os.path import join$/;"	i
join	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^from os.path import dirname, join$/;"	i
join1	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def join1(self):$/;"	m	class:PropClass
join2	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def join2(self):$/;"	m	class:PropClass
json	bundle/jedi-vim/jedi/jedi/cache.py	/^import json$/;"	i
json	bundle/jedi-vim/jedi/sith.py	/^import json$/;"	i
json	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import json$/;"	i
json	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import json, datetime$/;"	i
json	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import json$/;"	i
json	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool') == set(['module'])$/;"	i
json	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool', column=9) == set(['module'])$/;"	i
json	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json') == set(['module'])$/;"	i
json	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool') == set(['module'])$/;"	i
json	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
jump	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:jump(candidate, is_highlight) "{{{$/;"	f
jumpToChild	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextHunk	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevHunk	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
jump_child	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:jump_child(is_first) "{{{$/;"	f
jump_to_tab	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
just_a_func	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def just_a_func():$/;"	f
just_a_method	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def just_a_method(self):$/;"	m	class:RevealAccess
just_a_method	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def just_a_method(self): pass$/;"	m	class:Super
just_a_method	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def just_a_method(self):$/;"	m	class:TestClass
just_newlines	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^        def just_newlines(current_lines):$/;"	f	function:FastParser._split_parts
justify_equal_spacing	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	bundle/vim-gitgutter/test/testHunkRevertNearbyHunk.vim	/^normal k$/;"	m
k	bundle/vim-gitgutter/test/testHunkStageNearbyHunk.vim	/^normal k$/;"	m
keys	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    keys = keyword.kwlist + ['None', 'False', 'True']$/;"	v
keys	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    keys = keyword.kwlist$/;"	v
keyword	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^import keyword$/;"	i
keyword	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def keyword(self):$/;"	m	class:KeywordStatement
keyword	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^import keyword$/;"	i
keyword	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import keyword$/;"	i
keyword	bundle/jedi-vim/jedi/test/test_utils.py	/^        assert self.completions('import keyword') == ['import keyword']$/;"	i
keyword_from_value	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def keyword_from_value(obj):$/;"	f
keyword_names	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^def keyword_names(*args, **kwargs):$/;"	f
keywords	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.api import keywords$/;"	i
keywords	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.api import keywords$/;"	i
keywords	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^def keywords(string='', pos=(0, 0), all=False):$/;"	f
keywords	bundle/jedi-vim/jedi/setup.py	/^      keywords='python completion refactoring vim',$/;"	v
kill	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:kill(signal, candidates) "{{{$/;"	f
kind	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.highlight = {$/;"	v
kind	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.preview = {$/;"	v
kind	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.replace = {$/;"	v
kind.action_table.above.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.above.func(candidates) "{{{$/;"	f
kind.action_table.append.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.append.func(candidate) "{{{$/;"	f
kind.action_table.backup.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.backup.func(candidates) "{{{$/;"	f
kind.action_table.below.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.below.func(candidates) "{{{$/;"	f
kind.action_table.cd.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.cd.func(candidate) "{{{$/;"	f
kind.action_table.choose.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.choose.func(candidates) "{{{$/;"	f
kind.action_table.copy.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.copy.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.diff.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.diff.func(candidates)$/;"	f
kind.action_table.dirdiff.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.dirdiff.func(candidates)$/;"	f
kind.action_table.echo.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.echo.func(candidates) "{{{$/;"	f
kind.action_table.edit.func	bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.ex.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.ex.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.execute.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.execute.func(candidate) "{{{$/;"	f
kind.action_table.exrename.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.exrename.func(candidates)$/;"	f
kind.action_table.fdelete.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.fdelete.func(candidates) "{{{$/;"	f
kind.action_table.find.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.find.func(candidate) "{{{$/;"	f
kind.action_table.goto.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.goto.func(candidate) "{{{$/;"	f
kind.action_table.grep.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.grep.func(candidates) "{{{$/;"	f
kind.action_table.highlight.func	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.highlight.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert_directory.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert_directory.func(candidate) "{{{$/;"	f
kind.action_table.lcd.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.lcd.func(candidate) "{{{$/;"	f
kind.action_table.left.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.left.func(candidates) "{{{$/;"	f
kind.action_table.mkdir.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.mkdir.func(candidate) "{{{$/;"	f
kind.action_table.move.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.move.func(candidates) "{{{$/;"	f
kind.action_table.narrow.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.narrow.func(candidate) "{{{$/;"	f
kind.action_table.nop.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.nop.func(candidate) "{{{$/;"	f
kind.action_table.only.func	bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.only.func(candidate) "{{{$/;"	f
kind.action_table.open.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.open.func	bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.persist_open.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.persist_open.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.project_cd.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.project_cd.func(candidate) "{{{$/;"	f
kind.action_table.read.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.read.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.replace.func	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.replace.func(candidates) "{{{$/;"	f
kind.action_table.right.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.right.func(candidates) "{{{$/;"	f
kind.action_table.split.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.split.func(candidates) "{{{$/;"	f
kind.action_table.splitswitch.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.splitswitch.func(candidates) "{{{$/;"	f
kind.action_table.start.func	bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.start.func	bundle/unite.vim/autoload/unite/kinds/uri.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.switch.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.switch.func(candidates) "{{{$/;"	f
kind.action_table.tabnew_cd.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_cd.func(candidate) "{{{$/;"	f
kind.action_table.tabnew_lcd.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_lcd.func(candidate) "{{{$/;"	f
kind.action_table.tabopen.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabopen.func(candidates) "{{{$/;"	f
kind.action_table.tabsplit.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabsplit.func(candidates) "{{{$/;"	f
kind.action_table.tabswitch.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabswitch.func(candidates) "{{{$/;"	f
kind.action_table.tabvimfiler.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimfiler.func(candidate) "{{{$/;"	f
kind.action_table.tabvimshell.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimshell.func(candidate) "{{{$/;"	f
kind.action_table.unite__new_candidate.func	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
kind.action_table.unload.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.unload.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimfiler.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__copy.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__copy.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__delete.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__delete.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__execute.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__execute.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__external_filer.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__external_filer.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__mkdir.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__mkdir.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__move.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__move.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__newfile.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__newfile.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__rename.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__rename.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shell.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__shell.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shellcmd.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__shellcmd.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__write.func	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__write.func(candidate) "{{{$/;"	f
kind.action_table.vimgrep.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.vimgrep.func(candidates) "{{{$/;"	f
kind.action_table.vimshell.func	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimshell.func(candidate) "{{{$/;"	f
kind.action_table.vsplit.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplit.func(candidates) "{{{$/;"	f
kind.action_table.vsplitswitch.func	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplitswitch.func(candidates) "{{{$/;"	f
kind.action_table.wipeout.func	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.wipeout.func(candidates) "{{{$/;"	f
kind.action_table.wunix.func	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.wunix.func(candidates) "{{{$/;"	f
kind.action_table.yank.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank.func(candidates) "{{{$/;"	f
kind.action_table.yank_escape.func	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank_escape.func(candidate) "{{{$/;"	f
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
kw	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^kw = functools.partial(function, b=1.0)$/;"	v
kwargs_func	bundle/jedi-vim/jedi/test/completion/functions.py	/^def kwargs_func(**kwargs):$/;"	f
kwargs_nested	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def kwargs_nested(**kwargs):$/;"	f
kwargs_test	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def kwargs_test(**kwargs):$/;"	f
kwlist	bundle/jedi-vim/jedi/test/completion/imports.py	/^                    iskeyword$/;"	i
l	bundle/jedi-vim/jedi/test/completion/precedence.py	/^l = list$/;"	v
l	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
lash	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f
lash	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f
last	bundle/jedi-vim/jedi/test/run.py	/^            last = arg$/;"	v
last	bundle/jedi-vim/jedi/test/run.py	/^    last = None$/;"	v
lastvisual	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f
latex_documents	bundle/jedi-vim/jedi/docs/conf.py	/^latex_documents = [$/;"	v
latex_elements	bundle/jedi-vim/jedi/docs/conf.py	/^latex_elements = {$/;"	v
leavepre	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f
level	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def level(self):$/;"	m	class:FakeImport
level	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^                    debug.warning('Attempted relative import beyond top-level package.')$/;"	i
level	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def level(self):$/;"	m	class:ImportFrom
level	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def level(self):$/;"	m	class:ImportName
levenshtein_distance	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
license	bundle/jedi-vim/jedi/setup.py	/^      license='MIT',$/;"	v
lightline#colorscheme	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#colorscheme() abort$/;"	f
lightline#colorscheme#fill	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#fill(p) abort$/;"	f
lightline#colorscheme#flatten	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! lightline#colorscheme#flatten(p) abort$/;"	f
lightline#colortable#gui2cui	bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#gui2cui(rgb, fallback) abort$/;"	f
lightline#colortable#name_to_rgb	bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! lightline#colortable#name_to_rgb(name) abort$/;"	f
lightline#concatenate	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#concatenate(x, s) abort$/;"	f
lightline#disable	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#disable() abort$/;"	f
lightline#enable	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#enable() abort$/;"	f
lightline#error	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#error(msg) abort$/;"	f
lightline#highlight	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#highlight(...) abort$/;"	f
lightline#init	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#init() abort$/;"	f
lightline#link	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#link(...) abort$/;"	f
lightline#mode	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#mode() abort$/;"	f
lightline#onetab	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#onetab(n, active) abort$/;"	f
lightline#palette	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#palette() abort$/;"	f
lightline#statusline	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#statusline(inactive) abort$/;"	f
lightline#tab#filename	bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#filename(n) abort$/;"	f
lightline#tab#modified	bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#modified(n) abort$/;"	f
lightline#tab#readonly	bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#readonly(n) abort$/;"	f
lightline#tab#tabnum	bundle/lightline.vim/autoload/lightline/tab.vim	/^function! lightline#tab#tabnum(n) abort$/;"	f
lightline#tabline	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#tabline() abort$/;"	f
lightline#tabs	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#tabs() abort$/;"	f
lightline#toggle	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#toggle() abort$/;"	f
lightline#update	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update() abort$/;"	f
lightline#update_disable	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update_disable() abort$/;"	f
lightline#update_once	bundle/lightline.vim/autoload/lightline.vim	/^function! lightline#update_once() abort$/;"	f
line	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def line(self):$/;"	m	class:BaseDefinition
line	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^    def line(self):$/;"	m	class:Error
line	bundle/lightline.vim/autoload/lightline.vim	/^function! s:line(tabline, inactive) abort$/;"	f
line_nr_test	bundle/jedi-vim/jedi/test/run.py	/^    def line_nr_test(self):$/;"	m	class:IntegrationTestCase
linechars	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lineout	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f
lines	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:lines(str) abort$/;"	f
list_arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^    def list_arr(self, el):$/;"	m	class:C
list_with_non_imports	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def list_with_non_imports(lst):$/;"	f
listen	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^def listen(arg):$/;"	f
literal_arr	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^    def literal_arr(self, el):$/;"	m	class:C
literal_eval	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def literal_eval(string):$/;"	f
literal_eval	bundle/jedi-vim/jedi/jedi/common.py	/^from ast import literal_eval$/;"	i
literal_eval	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from ast import literal_eval$/;"	i
literal_eval	bundle/jedi-vim/jedi/test/run.py	/^from ast import literal_eval$/;"	i
load	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def load(source):$/;"	f	function:_load_module
load	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    def load(buildout_script):$/;"	f	function:_get_paths_from_buildout_script
load	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^    def load(self, filename):$/;"	m	class:Grammar
load	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from json import load, dump$/;"	i
load	bundle/lightline.vim/autoload/lightline/colortable.vim	/^function! s:load() abort$/;"	f
load	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:load(filename)  "{{{$/;"	f
load	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:load()  "{{{$/;"	f
load	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:load(...) dict abort$/;"	f
load	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:load(...) dict abort$/;"	f
load_colors	bundle/vim-colorschemes/colors/jellybeans.vim	/^  fun! s:load_colors(defs)$/;"	f
load_grammar	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.parser import load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^def load_grammar(file='grammar3.4'):$/;"	f
load_grammar	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi.parser import load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_new_parser.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^from jedi.parser import load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser import Parser, load_grammar, tokenize$/;"	i
load_grammar	bundle/jedi-vim/jedi/test/test_regression.py	/^from jedi.parser import Parser, load_grammar$/;"	i
load_libs	bundle/vim-comfortable/autoload/htmldjangocomplete.vim	/^function! s:load_libs()$/;"	f
load_module	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^def load_module(path=None, name=None):$/;"	f
load_parser	bundle/jedi-vim/jedi/jedi/cache.py	/^    def load_parser(self, path, original_changed_time):$/;"	m	class:ParserPickling
load_parser	bundle/jedi-vim/jedi/jedi/cache.py	/^def load_parser(path):$/;"	f
load_scripts	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
load_stored_item	bundle/jedi-vim/jedi/test/test_cache.py	/^def load_stored_item(cache, path, item):$/;"	f
loaded_bclose	bundle/vim-comfortable/plugin/bclose.vim	/^let loaded_bclose = 1$/;"	v
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_taglist	bundle/vim-gotosymbol/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/vim-gotosymbol/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/vim-gotosymbol/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	bundle/vim-gotosymbol/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_tcomment	bundle/tcomment_vim/plugin/tcomment.vim	/^let loaded_tcomment = 307$/;"	v
local_classes	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def local_classes(node, node2):$/;"	f
log	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f
log	bundle/vundle/autoload/vundle/installer.vim	/^func! s:log(str, ...) abort$/;"	f
long_description	bundle/jedi-vim/jedi/setup.py	/^      long_description=readme,$/;"	v
lookup_table	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^    lookup_table = {}$/;"	v	class:Status
lsCmd	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f
lst	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^lst = [1]$/;"	v
lst	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^lst = list()$/;"	v
lst	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^lst = list(s)$/;"	v
lst	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^lst = list(st)$/;"	v
m	bundle/jedi-vim/jedi/test/completion/classes.py	/^    m = meth$/;"	v	class:WithoutMethod
m	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^m = C()$/;"	v
magic_function_class	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^magic_function_class = CompiledObject(type(load_module), parent=builtin)$/;"	v
main	bundle/jedi-vim/jedi/scripts/memory_check.py	/^def main(mods):$/;"	f
main	bundle/jedi-vim/jedi/scripts/profile.py	/^def main(args):$/;"	f
main	bundle/jedi-vim/jedi/sith.py	/^def main(arguments):$/;"	f
main	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test.c	/^int main()$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test_2.c	/^int main()$/;"	f
main	bundle/tcomment_vim/spec/tcomment/issue30_test_3.c	/^int main()$/;"	f
main	bundle/vim-colorschemes/colors/marklar.vim	/^    function! s:main()$/;"	f
maintainer	bundle/jedi-vim/jedi/setup.py	/^      maintainer=__AUTHOR__,$/;"	v
maintainer_email	bundle/jedi-vim/jedi/setup.py	/^      maintainer_email=__AUTHOR_EMAIL__,$/;"	v
make_abbr	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_abbr(bufnr, flags) "{{{$/;"	f
make_aliases	bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_aliases()$/;"	f
make_cache_commands	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:make_cache_commands() "{{{$/;"	f
make_default_description	bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_default_description(source_name, args)$/;"	f
make_definitions	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def make_definitions():$/;"	f
make_dfa	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def make_dfa(self, start, finish):$/;"	m	class:ParserGenerator
make_directory	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:make_directory() "{{{$/;"	f
make_first	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def make_first(self, c, name):$/;"	m	class:ParserGenerator
make_grammar	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def make_grammar(self):$/;"	m	class:ParserGenerator
make_label	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def make_label(self, c, label):$/;"	m	class:ParserGenerator
make_obvious	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:make_obvious(group)$/;"	f
make_sync_command	bundle/vundle/autoload/vundle/installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
make_word	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_word(bufnr) "{{{$/;"	f
man_pages	bundle/jedi-vim/jedi/docs/conf.py	/^man_pages = [$/;"	v
map	bundle/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map_accum	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
mapleader	bundle/jedi-vim/test/goto.vim	/^let mapleader = '\\'$/;"	v
mapping	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    mapping = {'(': 'tuple',$/;"	v	class:Array
mapping_file_operations	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:mapping_file_operations() "{{{$/;"	f
mark_current_line	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:mark_current_line() "{{{$/;"	f
mark_similar_lines	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:mark_similar_lines() "{{{$/;"	f
mark_window	bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
marks	bundle/jedi-vim/jedi/test/speed/precedence.py	/^def marks(code):$/;"	f
master_doc	bundle/jedi-vim/jedi/docs/conf.py	/^master_doc = 'index'$/;"	v
match	bundle/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
match_expr_on_line	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
match_something	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    def match_something(self, param):$/;"	m	class:NotCalled
match_window_opts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	bundle/vimfiler.vim/autoload/unite/filters/matcher_vimfiler_mask.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.pattern	bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matchfname	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f
matchlens	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f
matchparen	bundle/matchparenpp/plugin/matchparen++.vim	/^augroup matchparen$/;"	a
matchtabe	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f
matchtabs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f
math	bundle/jedi-vim/jedi/test/completion/basic.py	/^    import math$/;"	i
math	bundle/jedi-vim/jedi/test/completion/goto.py	/^import math$/;"	i
math	bundle/jedi-vim/jedi/test/completion/on_import.py	/^    import math$/;"	i
math	bundle/jedi-vim/jedi/test/completion/ordering.py	/^import math$/;"	i
math	bundle/jedi-vim/jedi/test/completion/ordering.py	/^math = 3$/;"	v
math	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^        assert imp.end_pos == (1, len('import math'))$/;"	i
math	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^        assert names[0].end_pos == (1, len('import math'))$/;"	i
max	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f
max_by	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_executions	bundle/jedi-vim/jedi/jedi/settings.py	/^max_executions = 250$/;"	v
max_executions_without_builtins	bundle/jedi-vim/jedi/jedi/settings.py	/^max_executions_without_builtins = 200$/;"	v
max_function_recursion_level	bundle/jedi-vim/jedi/jedi/settings.py	/^max_function_recursion_level = 5$/;"	v
max_until_execution_unique	bundle/jedi-vim/jedi/jedi/settings.py	/^max_until_execution_unique = 50$/;"	v
maxf	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f
maybe	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^def maybe(*choices):$/;"	f
mdark_current_col	bundle/vim-colorschemes/colors/mdark.vim	/^let mdark_current_col = 0$/;"	v
mdark_current_line	bundle/vim-colorschemes/colors/mdark.vim	/^let mdark_current_line = 1$/;"	v
memoize	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def memoize(function):$/;"	f
memoize	bundle/jedi-vim/jedi/test/completion/functions.py	/^def memoize(func):$/;"	f
memoize_default	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^def memoize_default(default=NO_DEFAULT, evaluator_is_first_arg=False, second_arg_is_evaluator=False):$/;"	f
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.evaluate.cache import memoize_default, NO_DEFAULT$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi.evaluate.cache import CachedMetaClass, memoize_default$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate.cache import memoize_default, CachedMetaClass, NO_DEFAULT$/;"	i
memoize_default	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi.evaluate.cache import memoize_default$/;"	i
memoize_method	bundle/jedi-vim/jedi/jedi/cache.py	/^def memoize_method(method):$/;"	f
memoize_method	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.cache import underscore_memoization, memoize_method$/;"	i
mergelists	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f
messy	bundle/jedi-vim/jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
meth	bundle/jedi-vim/jedi/test/completion/classes.py	/^def meth(self):$/;"	f
method_base	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def method_base(self):$/;"	m	class:Base
method_mixin	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def method_mixin(self):$/;"	m	class:Mixin
method_sub	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def method_sub(self):$/;"	m	class:SubClass
method_super	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def method_super(self):$/;"	m	class:SuperClass
method_var	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def method_var(self):$/;"	m	class:MethodDecorators
mfunc	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f
migemo	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:migemo(str)$/;"	f
min_by	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mixed	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def mixed(*args, **kwargs):$/;"	f
mixed2	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def mixed2(*args, **kwargs):$/;"	f
mixedsort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f
mkdir_nothrow	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:mkdir_nothrow(...) abort "{{{$/;"	f
mmc_logmon_sup	bundle/vundle/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
mmode	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f
mod1	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.mod1$/;"	i
mod1	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.pkg.mod1$/;"	i
mod1	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.mod1$/;"	i
mod1	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.pkg.mod1$/;"	i
mod1	bundle/jedi-vim/jedi/test/completion/imports.py	/^from . import datetime as mod1$/;"	i
modevar	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f
modify	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f
mods	bundle/jedi-vim/jedi/scripts/memory_check.py	/^        mods = ['re', 'numpy', 'scipy', 'scipy.sparse', 'scipy.stats',$/;"	v
mods	bundle/jedi-vim/jedi/scripts/memory_check.py	/^        mods = sys.argv[1:]$/;"	v
module	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
module	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def module(self):$/;"	m	class:CallSignature
module	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def module(self):$/;"	m	class:UserContextParser
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool; tool') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import ') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import datetime; datetime') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool', column=9) == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import t') == set(['module'])$/;"	i
module	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/module.c	/^static struct PyModuleDef module = {$/;"	v	typeref:struct:PyModuleDef	file:
module	bundle/jedi-vim/jedi/test/test_evaluate/not_in_sys_path/pkg/module.py	/^from not_in_sys_path.not_in_sys_path_package import module$/;"	i
module	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
module_name	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def module_name(self):$/;"	m	class:BaseDefinition
module_name	bundle/jedi-vim/jedi/test/run.py	/^    def module_name(self):$/;"	m	class:IntegrationTestCase
module_not_exists	bundle/jedi-vim/jedi/test/completion/usages.py	/^import module_not_exists$/;"	i
modules	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^modules = {}$/;"	v
moo	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^    pytest.mark.xfail(("import flask.ext.moo; flask.ext.moo.", "Foo")),$/;"	i
move	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def move(self, line_offset, column_offset):$/;"	m	class:BaseNode
move	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def move(self, line_offset, column_offset):$/;"	m	class:Leaf
move	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:move(src, dest) abort "{{{$/;"	f
move	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:move() "{{{$/;"	f
move_exe	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:move_exe() abort$/;"	f
move_exe	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:move_exe(src, dest) abort$/;"	f
move_to_other_drive	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:move_to_other_drive(candidate, filename) "{{{$/;"	f
move_vim	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:move_vim(src, dest) abort "{{{$/;"	f
move_vimfiler_cursor	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:move_vimfiler_cursor(candidate) "{{{$/;"	f
msg	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f
msg2list	bundle/unite.vim/autoload/unite/view.vim	/^function! s:msg2list(expr) "{{{$/;"	f
mtype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f
multi_line_call	bundle/jedi-vim/jedi/test/completion/functions.py	/^def multi_line_call(b):$/;"	f
multi_line_func	bundle/jedi-vim/jedi/test/completion/functions.py	/^def multi_line_func(a, # comment blabla$/;"	f
multipliers	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f
my_decorator	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^def my_decorator(f):$/;"	f
myclass	bundle/jedi-vim/jedi/test/completion/classes.py	/^myclass = TestClass(1, '', 3.0)$/;"	v
n	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
n	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
na	bundle/jedi-vim/jedi/test/completion/thirdparty/pylab_.py	/^na = numpy.array([1,2])$/;"	v
name	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
name	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def name(self):$/;"	m	class:BaseDefinition
name	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def name(self):$/;"	m	class:CompiledObject
name	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
name	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def name(self):$/;"	m	class:Array
name	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def name(self):$/;"	m	class:ListComprehension
name	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def name(self):$/;"	m	class:ExecutedParam
name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:Instance
name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:InstanceElement
name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:ModuleWrapper
name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def name(self):$/;"	m	class:Wrapper
name	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^name = r'\\w+'$/;"	v
name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:ClassOrFunc
name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Function
name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Module
name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def name(self):$/;"	m	class:Param
name_for_position	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def name_for_position(self, position):$/;"	m	class:FunctionExecution
name_for_position	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def name_for_position(self, position):$/;"	m	class:BaseNode
name_with_symbols	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def name_with_symbols(self):$/;"	m	class:Completion
namechars	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^    namechars = string.ascii_letters + '_'$/;"	v
namedtuple	bundle/jedi-vim/jedi/jedi/utils.py	/^from collections import namedtuple$/;"	i
namedtuple	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
namedtuple	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
names	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import preload_module, defined_names, names$/;"	i
names	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^def names(source=None, path=None, encoding='utf-8', all_scopes=False,$/;"	f
names	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    def names(self):$/;"	m	class:Keyword
names	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^from jedi import Script, defined_names, __doc__ as jedi_doc, names$/;"	i
names_dict	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def names_dict(self):$/;"	m	class:CompiledObject
names_dict	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def names_dict(self):$/;"	m	class:CompFor
names_dict_lookup	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def names_dict_lookup(self, names_dict, position):$/;"	m	class:NameFinder
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def names_dicts(self, search_global, is_instance=False):$/;"	m	class:CompiledObject
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def names_dicts(self, search_global=False):  # Always False.$/;"	m	class:ArrayMixin
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def names_dicts(self, search_global=False):  # is always False$/;"	m	class:GeneratorMixin
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:Function
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:FunctionExecution
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:Instance
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global):$/;"	m	class:ModuleWrapper
names_dicts	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def names_dicts(self, search_global, is_instance=False):$/;"	m	class:Class
names_dicts	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def names_dicts(self, search_global):$/;"	m	class:CompFor
narrowable	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f
narrowing_dot	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_dot() "{{{$/;"	f
narrowing_input_history	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_input_history() "{{{$/;"	f
nerdtree#checkForBrowse	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nerdtreegitplugin	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
nested	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def nested(self):$/;"	m	class:PropClass
nested	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def nested(*args):$/;"	f
nested2	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def nested2(self):$/;"	m	class:PropClass
nested_app_ebins	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
nested_args	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_args(*args):$/;"	f
nested_args2	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_args2(*args, **kwargs):$/;"	f
nested_both	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_both(*args, **kwargs):$/;"	f
nested_both2	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_both2(*args, **kwargs):$/;"	f
nested_def	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_def(a, *args, **kwargs):$/;"	f
nested_def2	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_def2(*args, **kwargs):$/;"	f
nested_default	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_default(**kwargs):$/;"	f
nested_import	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        self._nested_import = nested_import$/;"	i
nested_kw	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_kw(**kwargs1):$/;"	f
nested_kw2	bundle/jedi-vim/jedi/test/completion/functions.py	/^def nested_kw2(**kwargs2):$/;"	f
nested_no_call_to_function	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def nested_no_call_to_function(*args):$/;"	f
nested_twice	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def nested_twice(*args1):$/;"	f
new_buffer	bundle/jedi-vim/jedi_vim.py	/^def new_buffer(path, options=''):$/;"	f
new_file	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:new_file() "{{{$/;"	f
new_files	bundle/jedi-vim/jedi/jedi/refactoring.py	/^    def new_files(self):$/;"	m	class:Refactoring
newcache	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f
newmatch	bundle/vim-colorschemes/colors/landscape.vim	/^function! s:newmatch()$/;"	f
next	bundle/jedi-vim/jedi/jedi/common.py	/^    def next(self):$/;"	m	class:PushBackIterator
next	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def next(self):$/;"	m	class:FastTokenizer
next	bundle/jedi-vim/jedi/test/completion/generators.py	/^    def next(self):$/;"	m	class:Counter
next_sibling	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def next_sibling(self):$/;"	m	class:Leaf
next_start_pos	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def next_start_pos(self):$/;"	m	class:ErrorStatement
njedi	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    docstr('import jedi\\njedi.Scr', cleandoc(Script.__doc__))$/;"	i
no_completion_duplicates	bundle/jedi-vim/jedi/jedi/settings.py	/^no_completion_duplicates = True$/;"	v
no_jedi_warning	bundle/jedi-vim/jedi_vim.py	/^def no_jedi_warning():$/;"	f
no_unicode_pprint	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def no_unicode_pprint(dct):$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f
nocache	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f
node_after_else	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def node_after_else(self, node):$/;"	m	class:IfStmt
node_from_name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def node_from_name(self, name):$/;"	m	class:WithStmt
node_in_which_check_node	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def node_in_which_check_node(self, node):$/;"	m	class:IfStmt
node_statements	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def node_statements(self):$/;"	m	class:RecursionDetector
nonamecond	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nonamecond(str, filpath)$/;"	f
none_obj	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^none_obj = builtin.get_by_name('None')$/;"	v
normal_method	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def normal_method(self):$/;"	m	class:TestX
normalfunc	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def normalfunc():$/;"	f
normalize	bundle/vim-colorschemes/colors/saturn.vim	/^fu! s:normalize(h, s, l)$/;"	f
nosort	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f
nosplit	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f
not	bundle/jedi-vim/jedi/test/test_cache.py	/^@pytest.mark.skipif('True', message='Currently the star import cache is not enabled.')$/;"	i
not_existant	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import not_existant, import_tree.mod1 as foo$/;"	i
not_existing	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^from os.path import not_existing$/;"	i
not_existing	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import not_existing$/;"	i
not_existing1	bundle/jedi-vim/jedi/test/completion/imports.py	/^from keyword import not_existing1, not_existing2$/;"	i
not_existing2	bundle/jedi-vim/jedi/test/completion/imports.py	/^from keyword import not_existing1, not_existing2$/;"	i
not_existing_import	bundle/jedi-vim/jedi/test/completion/imports.py	/^import not_existing_import$/;"	i
not_existing_import	bundle/jedi-vim/jedi/test/static_analysis/try_except.py	/^    import not_existing_import$/;"	i
not_existing_nested	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import not_existing_nested.date$/;"	i
not_in_sys_path	bundle/jedi-vim/jedi/test/test_evaluate/not_in_sys_path/pkg/module.py	/^from not_in_sys_path import not_in_sys_path$/;"	i
not_in_sys_path_package	bundle/jedi-vim/jedi/test/test_evaluate/not_in_sys_path/pkg/module.py	/^from not_in_sys_path import not_in_sys_path_package$/;"	i
nothing	bundle/jedi-vim/jedi/test/completion/decorators.py	/^def nothing(a,b,c):$/;"	f
nowait_expr	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:nowait_expr(map) "{{{$/;"	f
nowait_map	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:nowait_map(mode) "{{{$/;"	f
nowait_nmap	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:nowait_nmap() "{{{$/;"	f
nr	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:nr(x) abort$/;"	f
nr2byte	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
ns1_file	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^        assert jedi.Script('from pkg import ns1_file').goto_definitions()$/;"	i
ns2_file	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^        assert jedi.Script('from pkg import ns2_file').goto_definitions()$/;"	i
ns3_file	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^        assert not jedi.Script('from pkg import ns3_file').goto_definitions()$/;"	i
nsplit	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^number = group(imag_number, float_number, int_number)$/;"	v
numbers	bundle/jedi-vim/jedi/test/speed/precedence.py	/^def numbers(code5):$/;"	f
numpy	bundle/jedi-vim/jedi/scripts/profile.py	/^        args['<code>'] = 'import numpy; numpy.array([0])'$/;"	i
numpy	bundle/jedi-vim/jedi/test/completion/thirdparty/pylab_.py	/^import numpy$/;"	i
numpy	bundle/jedi-vim/jedi/test/completion/thirdparty/pylab_.py	/^import numpy.random$/;"	i
numpydoc	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    import numpydoc$/;"	i
numpydoc_unavailable	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    numpydoc_unavailable = False$/;"	v
numpydoc_unavailable	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    numpydoc_unavailable = True$/;"	v
o<ESC>GK	bundle/jedi-vim/test/documentation.vim	/^        normal o<ESC>GK$/;"	m
oIndentationErrX	bundle/jedi-vim/test/completions.vim	/^        normal oIndentationErrX$/;"	m
oabs(	bundle/jedi-vim/test/signatures.vim	/^        normal oabs( $/;"	m
obj	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def obj(self):$/;"	m	class:Slice
object_obj	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^object_obj = builtin.get_by_name('object')$/;"	v
objgraph	bundle/jedi-vim/jedi/scripts/wx_check.py	/^import objgraph$/;"	i
oct_number	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^oct_number = r'0[oO][0-7]+'$/;"	v
offset	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f
oimporX	bundle/jedi-vim/test/completions.vim	/^        normal oimporX$/;"	m
old_files	bundle/jedi-vim/jedi/jedi/refactoring.py	/^    def old_files(self):$/;"	m	class:Refactoring
old_kde	bundle/vim-colorschemes/colors/herokudoc.vim	/^function! s:old_kde()$/;"	f
old_kde	bundle/vim-colorschemes/colors/iangenzo.vim	/^function! s:old_kde()$/;"	f
on_BufReadCmd	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! s:on_BufReadCmd(source_name, source_args, context)  "{{{1$/;"	f
on_BufWriteCmd	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! s:on_BufWriteCmd(source_name, source_args, context)  "{{{1$/;"	f
on_FileAppendCmd	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! s:on_FileAppendCmd(source_name, source_args, context)  "{{{1$/;"	f
on_FileReadCmd	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! s:on_FileReadCmd(source_name, source_args, context)  "{{{1$/;"	f
on_FileWriteCmd	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! s:on_FileWriteCmd(source_name, source_args, context)  "{{{$/;"	f
on_colorscheme_changed	bundle/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_double_click	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:on_double_click() "{{{$/;"	f
on_gather_candidates	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:on_gather_candidates(direction, context, start, max) "{{{$/;"	f
on_init	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:on_init(args, context) "{{{$/;"	f
on_window_changed	bundle/vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
one_param	bundle/jedi-vim/jedi/test/completion/parser.py	/^    def one_param($/;"	m	class:IndentIssues
open	bundle/jedi-vim/jedi/test/static_analysis/descriptors.py	/^    def open(cls, name, **kwargs):$/;"	m	class:TarFile
open	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open(candidate) "{{{$/;"	f
open	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:open(filename) abort "{{{$/;"	f
open	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
openExplorer	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
open_current_line	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open_current_line(is_highlight) "{{{$/;"	f
open_file_in_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:open_file_in_another_vimfiler() "{{{$/;"	f
openbrace	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def openbrace():$/;"	f
openbrace2	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def openbrace2():$/;"	f
openfile	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f
operation	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    operation = 'completions'$/;"	v	class:TestFullNameWithCompletions
operation	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    operation = 'goto_definitions'$/;"	v	class:TestFullNameWithGotoDefinitions
operation	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    operation = None$/;"	v	class:MixinTestFullName
operations	bundle/jedi-vim/jedi/sith.py	/^    operations = [$/;"	v	class:TestCase
operator	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^import operator$/;"	i
operator	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^operator = group(r"\\*\\*=?", r">>=?", r"<<=?", r"!=",$/;"	v
opmap	bundle/jedi-vim/jedi/jedi/parser/token.py	/^opmap = {}$/;"	v
opts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f
or	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:or(xs) abort$/;"	f
oraisX	bundle/jedi-vim/test/completions.vim	/^        normal oraisX ImpXErrX()$/;"	m
oraise	bundle/jedi-vim/test/completions_disabled.vim	/^        normal oraise ImportErrX$/;"	m
os	bundle/jedi-vim/conftest.py	/^import os$/;"	i
os	bundle/jedi-vim/initialize.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/docs/conf.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/__main__.py	/^            import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/cache.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/debug.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
os	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/settings.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/jedi/utils.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/scripts/memory_check.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/sith.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/completion/imports.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/completion/sys_path.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/conftest.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/helpers.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/refactor.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/run.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import os.path$/;"	i
os	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    for c in Script('import os; os.path.').completions():$/;"	i
os	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^        self.check('from os import path', 'os.path')$/;"	i
os	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^        self.check('import os; os.path.join', 'os.path.join')$/;"	i
os	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_integration.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
os	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_regression.py	/^import os$/;"	i
os	bundle/jedi-vim/jedi/test/test_utils.py	/^        import os$/;"	i
os	bundle/jedi-vim/jedi_vim.py	/^import os$/;"	i
os	bundle/syntastic/syntax_checkers/python/codec.py	/^import os$/;"	i
os.path,	bundle/vim-comfortable/plugin/virtualenv.vim	/^import os.path, sys$/;"	m
ostr	bundle/jedi-vim/test/signatures.vim	/^        normal ostr $/;"	m
ostr(	bundle/jedi-vim/test/signatures.vim	/^        normal ostr( $/;"	m
other	bundle/jedi-vim/jedi/test/completion/functions.py	/^def other(a):$/;"	f
other_method	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def other_method(self):$/;"	m	class:TestX
other_method	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def other_method(self):$/;"	m	class:SelfVars
output	bundle/jedi-vim/jedi_vim.py	/^import traceback  # for exception output$/;"	i
p	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    p = property(t)$/;"	v	class:B
package	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^                    debug.warning('Attempted relative import beyond top-level package.')$/;"	i
package_data	bundle/jedi-vim/jedi/setup.py	/^      package_data={'jedi': ['evaluate\/compiled\/fake\/*.pym', 'parser\/grammar*.txt']},$/;"	v
packages	bundle/jedi-vim/jedi/setup.py	/^      packages=packages,$/;"	v
packages	bundle/jedi-vim/jedi/setup.py	/^packages = ['jedi', 'jedi.parser', 'jedi.parser.pgen2',$/;"	v
pad_between_letters	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
pair_sort	bundle/vim-python-pep8-indent/indent/python.vim	/^function! s:pair_sort(x, y)$/;"	f
param	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import param$/;"	i
param	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.evaluate import param$/;"	i
param	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate import param$/;"	i
param	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    from jedi.evaluate import representation as er, param$/;"	i
param	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import param$/;"	i
param	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import param$/;"	i
param	bundle/jedi-vim/jedi/test/completion/goto.py	/^param = ClassDef$/;"	v
param_by_name	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def param_by_name(self, name):$/;"	m	class:FunctionExecution
params	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def params(self):$/;"	m	class:BaseDefinition
params	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def params(self):$/;"	m	class:CompiledObject
params	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def params(self):$/;"	m	class:Class
params	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def params(self):$/;"	m	class:Function
params	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def params(self):$/;"	m	class:Lambda
params	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def params(self, source, line=None, column=None):$/;"	m	class:TestParams
parent	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def parent(self):$/;"	m	class:BaseDefinition
parent	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^    def parent(self):$/;"	m	class:LazyName
parent	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^    def parent(self, value):$/;"	m	class:LazyName
parent	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def parent(self):$/;"	m	class:CompiledName
parent	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def parent(self, value):$/;"	m	class:CompiledName
parent	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def parent(self):$/;"	m	class:LazyName
parent	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def parent(self, value):$/;"	m	class:LazyName
parent	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def parent(self):$/;"	m	class:Array
parent	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def parent(self):$/;"	m	class:Executed
parent	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def parent(self):$/;"	m	class:InstanceElement
parent_callback	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^        def parent_callback():$/;"	f	function:ModuleWrapper._module_attributes_dict
parent_function	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def parent_function(self):$/;"	m	class:Param
parent_until_indent	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def parent_until_indent(self, indent=None):$/;"	m	class:ParserNode
parse	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def parse(self, tokenizer):$/;"	m	class:PgenParser
parse	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def parse(self):$/;"	m	class:ParserGenerator
parse_alt	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def parse_alt(self):$/;"	m	class:ParserGenerator
parse_atom	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def parse_atom(self):$/;"	m	class:ParserGenerator
parse_ignore_file	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:parse_ignore_file(file, prefix) "{{{$/;"	f
parse_item	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def parse_item(self):$/;"	m	class:ParserGenerator
parse_name	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	bundle/vundle/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
parse_path	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:parse_path(args) "{{{$/;"	f
parse_rhs	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def parse_rhs(self):$/;"	m	class:ParserGenerator
parse_test_files_option	bundle/jedi-vim/jedi/test/conftest.py	/^def parse_test_files_option(opt):$/;"	f
parseline	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f
parser_cache	bundle/jedi-vim/jedi/jedi/cache.py	/^parser_cache = {}$/;"	v
parsing	bundle/jedi-vim/jedi/test/completion/thirdparty/jedi_.py	/^from jedi import functions, evaluate, parsing$/;"	i
partial	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from functools import partial$/;"	i
partial	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^from functools import partial$/;"	i
partial	bundle/jedi-vim/jedi/test/completion/imports.py	/^from functools import (partial, wraps)$/;"	i
partition	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
parts	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f
paste	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:paste(word, command, opt) "{{{$/;"	f
path	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    path = None  # modules have this attribute - set it to None.$/;"	v	class:CompiledObject
path	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
path	bundle/jedi-vim/jedi/test/completion/ordering.py	/^from os import path$/;"	i
path	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^import os.path$/;"	i
path	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    for c in Script('import os; os.path.').completions():$/;"	i
path	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^        self.check('from os import path', 'os.path')$/;"	i
path	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^        self.check('import os; os.path.join', 'os.path.join')$/;"	i
path2directory	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path_for_name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def path_for_name(self, name):$/;"	m	class:Import
paths	bundle/jedi-vim/jedi/jedi/__main__.py	/^            paths = []$/;"	v
paths	bundle/jedi-vim/jedi/jedi/__main__.py	/^            paths = [path]$/;"	v
paths	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def paths(self):$/;"	m	class:FakeImport
paths	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def paths(self):$/;"	m	class:ImportFrom
paths	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def paths(self):$/;"	m	class:ImportName
paths	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^    def paths(src):$/;"	f	function:test_paths_from_assignment
pathshorten	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f
pdb	bundle/jedi-vim/jedi/jedi/__main__.py	/^                import pdb$/;"	i
pdb	bundle/jedi-vim/jedi/test/run.py	/^                import pdb$/;"	i
permutations	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
php_htmlInStrings	bundle/vim-colorschemes/colors/zephyr.vim	/^let php_htmlInStrings = 0$/;"	v
php_sql_query	bundle/vim-colorschemes/colors/zephyr.vim	/^let php_sql_query = 0$/;"	v
pickle	bundle/jedi-vim/jedi/jedi/cache.py	/^    import cPickle as pickle$/;"	i
pickle	bundle/jedi-vim/jedi/jedi/cache.py	/^    import pickle$/;"	i
pickle	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^import pickle$/;"	i
pjoin	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^        from os.path import join as pjoin$/;"	i
pkg	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.pkg$/;"	i
pkg	bundle/jedi-vim/jedi/test/completion/goto.py	/^import import_tree.pkg.mod1$/;"	i
pkg	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.pkg$/;"	i
pkg	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.pkg.mod1$/;"	i
pkg_resources	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^    import pkg_resources$/;"	i
pkgutil	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^import pkgutil$/;"	i
pkgutil	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^import pkgutil$/;"	i
pkgutil	bundle/jedi-vim/jedi/test/test_evaluate/namespace_package/ns1/pkg/__init__.py	/^    import pkgutil$/;"	i
platform	bundle/jedi-vim/jedi/jedi/settings.py	/^import platform$/;"	i
platforms	bundle/jedi-vim/jedi/setup.py	/^      platforms=['any'],$/;"	v
plugin	bundle/unite.vim/autoload/unite.vim	/^augroup plugin-unite$/;"	a
plugin	bundle/unite.vim/plugin/unite/buffer.vim	/^augroup plugin-unite-source-buffer$/;"	a
plugin	bundle/unite.vim/plugin/unite/history_yank.vim	/^  augroup plugin-unite-history-yank$/;"	a
plugin	bundle/unite.vim/plugin/unite/window.vim	/^augroup plugin-unite-source-window$/;"	a
point_float	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^point_float = group(r'[0-9]+\\.[0-9]*', r'\\.[0-9]+') + maybe(exponent)$/;"	v
pop	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def pop(self):$/;"	m	class:PgenParser
pop	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop_execution	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def pop_execution(cls):$/;"	m	class:ExecutionRecursionDetector
pop_stmt	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def pop_stmt(self):$/;"	m	class:RecursionDetector
popd	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:popd() "{{{$/;"	f
popup_shell	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:popup_shell() "{{{$/;"	f
position_nr	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def position_nr(self):$/;"	m	class:ExecutedParam
position_nr	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def position_nr(self):$/;"	m	class:Param
post_rename_callback	bundle/vimfiler.vim/autoload/vimfiler/exrename.vim	/^function! s:post_rename_callback(exrename)$/;"	f
pprint	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import pprint$/;"	i
pprint	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^        from pprint import pprint$/;"	i
precedence	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import precedence$/;"	i
precedence	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi.evaluate import precedence$/;"	i
precedence	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.evaluate import precedence$/;"	i
preload_module	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import preload_module, defined_names, names$/;"	i
preload_module	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^def preload_module(*modules):$/;"	f
prev_sibling	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def prev_sibling(self):$/;"	m	class:Leaf
previewNodeCurrent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
previous_indent	bundle/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def previous_indent$/;"	f
print_candidate	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:print_candidate() "{{{$/;"	f
print_filename	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:print_filename() "{{{$/;"	f
print_function	bundle/jedi-vim/jedi/sith.py	/^from __future__ import print_function, division, unicode_literals$/;"	i
print_function	bundle/syntastic/syntax_checkers/python/codec.py	/^from __future__ import print_function$/;"	i
print_function	bundle/syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
print_message_log	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:print_message_log() "{{{$/;"	f
print_opts	bundle/vim-colorschemes/colors/marklar.vim	/^        function! s:print_opts(...)$/;"	f
print_to_stdout	bundle/jedi-vim/jedi/jedi/debug.py	/^def print_to_stdout(level, str_out):$/;"	f
print_to_stdout	bundle/jedi-vim/jedi_vim.py	/^def print_to_stdout(level, str_out):$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f
process	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f
process	bundle/jedi-vim/jedi/jedi/refactoring.py	/^    def process(path, old_lines, new_lines):$/;"	f	function:_rename
process	bundle/vundle/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
process_memory	bundle/jedi-vim/jedi/scripts/wx_check.py	/^def process_memory():$/;"	f
product	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:product(lists) abort$/;"	f
profile_preload	bundle/jedi-vim/jedi/scripts/memory_check.py	/^def profile_preload(mod):$/;"	f
project	bundle/jedi-vim/jedi/docs/conf.py	/^project = u'Jedi'$/;"	v
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
prop	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def prop(self):$/;"	m	class:TestProperty
proposed_indent	bundle/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def proposed_indent$/;"	f
prototype.add_raw	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text)$/;"	f
prototype.add_section	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents)$/;"	f
prototype.add_section_spaced	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents)$/;"	f
prototype.build	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build()$/;"	f
prototype.split	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...)$/;"	f
pseudo_extras	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^pseudo_extras = group(r'\\\\\\r?\\n', comment, triple)$/;"	v
pseudo_token	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^    group(pseudo_extras, number, funny, cont_str, name)$/;"	v
psutil	bundle/jedi-vim/jedi/scripts/memory_check.py	/^import psutil$/;"	i
psycopg2	bundle/jedi-vim/jedi/test/completion/thirdparty/psycopg2_.py	/^import psycopg2$/;"	i
pt	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^from jedi.parser import tree as pt$/;"	i
pt	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.parser import tree as pt$/;"	i
pt	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi.parser import tree as pt$/;"	i
pt	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser import tree as pt$/;"	i
pt	bundle/jedi-vim/jedi/jedi/refactoring.py	/^from jedi.parser import tree as pt$/;"	i
pt	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from jedi.parser import tree as pt$/;"	i
push	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def push(self, type, newdfa, newstate):$/;"	m	class:PgenParser
push	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push_back	bundle/jedi-vim/jedi/jedi/common.py	/^    def push_back(self, value):$/;"	m	class:PushBackIterator
push_execution	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def push_execution(cls, execution):$/;"	m	class:ExecutionRecursionDetector
push_stmt	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def push_stmt(self, stmt):$/;"	m	class:RecursionDetector
pushd	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:pushd() "{{{$/;"	f
py__bases__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def py__bases__(self, evaluator):$/;"	m	class:CompiledObject
py__bases__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__bases__(self, evaluator):$/;"	m	class:Class
py__bool__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def py__bool__(self):$/;"	m	class:CompiledObject
py__bool__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def py__bool__(self):$/;"	m	class:ArrayMixin
py__bool__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def py__bool__(self):$/;"	m	class:GeneratorMixin
py__bool__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__bool__(self):$/;"	m	class:Instance
py__bool__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__bool__(self):$/;"	m	class:Wrapper
py__call__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def py__call__(self):$/;"	m	class:CompiledObject
py__call__	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def py__call__(self, evaluator, params):$/;"	m	class:GeneratorMethod
py__call__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__call__(self):$/;"	m	class:Instance
py__call__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__call__(self, evaluator, params):$/;"	m	class:Class
py__call__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__call__(self, evaluator, params):$/;"	m	class:Function
py__call__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__call__(self, evaluator, params):$/;"	m	class:InstanceElement
py__class__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def py__class__(self, evaluator):$/;"	m	class:CompiledObject
py__class__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__class__(self, evaluator):$/;"	m	class:Instance
py__file__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def py__file__(self):$/;"	m	class:CompiledObject
py__file__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__file__(self):$/;"	m	class:ModuleWrapper
py__getattribute__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__getattribute__(self, name):$/;"	m	class:Class
py__mro__	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def py__mro__(self, evaluator):$/;"	m	class:CompiledObject
py__mro__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__mro__(self, evaluator):$/;"	m	class:Class
py__name__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__name__(self):$/;"	m	class:ModuleWrapper
py__package__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__package__(self):$/;"	m	class:ModuleWrapper
py__path__	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def py__path__(self):$/;"	m	class:ModuleWrapper
py_import	bundle/jedi-vim/jedi_vim.py	/^def py_import():$/;"	f
py_import_completions	bundle/jedi-vim/jedi_vim.py	/^def py_import_completions():$/;"	f
pydoc	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^import pydoc$/;"	i
pydoc_topics	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    from pydoc_data import topics as pydoc_topics$/;"	i
pydoc_topics	bundle/jedi-vim/jedi/jedi/api/keywords.py	/^    import pydoc_topics$/;"	i
pygments_style	bundle/jedi-vim/jedi/docs/conf.py	/^pygments_style = 'sphinx'$/;"	v
pylab	bundle/jedi-vim/jedi/test/completion/thirdparty/pylab_.py	/^import pylab$/;"	i
pytest	bundle/jedi-vim/conftest.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/conftest.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_cache.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_evaluate/test_annotations.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_integration.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_integration_import.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^import pytest$/;"	i
pytest	bundle/jedi-vim/jedi/test/test_regression.py	/^import pytest$/;"	i
pytest_addoption	bundle/jedi-vim/jedi/conftest.py	/^def pytest_addoption(parser):$/;"	f
pytest_addoption	bundle/jedi-vim/jedi/test/conftest.py	/^def pytest_addoption(parser):$/;"	f
pytest_configure	bundle/jedi-vim/conftest.py	/^def pytest_configure(config):$/;"	f
pytest_configure	bundle/jedi-vim/jedi/conftest.py	/^def pytest_configure(config):$/;"	f
pytest_generate_tests	bundle/jedi-vim/conftest.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_generate_tests	bundle/jedi-vim/jedi/test/conftest.py	/^def pytest_generate_tests(metafunc):$/;"	f
pytest_unconfigure	bundle/jedi-vim/jedi/conftest.py	/^def pytest_unconfigure(config):$/;"	f
pytestmark	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^pytestmark = pytest.mark.skipif('sys.version_info[0] < 3')$/;"	v
python	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    import builtins  # module name in python 3$/;"	i
python_highlight_all	bundle/vim-colorschemes/colors/256-grayvim.vim	/^let python_highlight_all = 1$/;"	v
python_highlight_all	bundle/vim-colorschemes/colors/256-jungle.vim	/^let python_highlight_all = 1$/;"	v
python_highlight_all	bundle/vim-colorschemes/colors/devbox-dark-256.vim	/^let python_highlight_all = 1$/;"	v
quick_help	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:quick_help() "{{{$/;"	f
quick_look	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:quick_look() "{{{$/;"	f
r	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def r(self):$/;"	m	class:B
r	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def r(self, value):$/;"	m	class:B
raboof	bundle/jedi-vim/jedi/test/completion/precedence.py	/^    raboof = 'fourtytwo'$/;"	v	class:FooBar
raise_error	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def raise_error(self, msg, *args):$/;"	m	class:ParserGenerator
raises	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^from pytest import raises$/;"	i
random	bundle/jedi-vim/jedi/sith.py	/^import random$/;"	i
random	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import import_tree.random$/;"	i
random	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import random$/;"	i
random	bundle/jedi-vim/jedi/test/completion/thirdparty/pylab_.py	/^import numpy.random$/;"	i
random	bundle/vim-colorschemes/colors/xmaslights.vim	/^import random$/;"	m
raw	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def raw(self):$/;"	m	class:_Help
raw_doc	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def raw_doc(self):$/;"	m	class:BaseDefinition
raw_doc	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def raw_doc(self):$/;"	m	class:DocstringMixin
re	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/api/classes.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/cache.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/common.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/jedi/utils.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/test/conftest.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/test/refactor.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi/test/run.py	/^import re$/;"	i
re	bundle/jedi-vim/jedi_vim.py	/^import re$/;"	i
re	bundle/syntastic/syntax_checkers/python/codec.py	/^import re$/;"	i
react	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def react(self):$/;"	m	class:Dude
readfile	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
readfile	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
readline	bundle/jedi-vim/jedi/jedi/utils.py	/^        import readline$/;"	i
readline	bundle/jedi-vim/jedi/test/test_utils.py	/^    import readline$/;"	i
readline	bundle/jedi-vim/jedi/test/test_utils.py	/^    readline = False$/;"	v
readme	bundle/jedi-vim/jedi/setup.py	/^readme = open('README.rst').read() + '\\n\\n' + open('CHANGELOG.rst').read()$/;"	v
rebar_file	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir) ->$/;"	f
rebar_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
recache_candidates_loop	bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:recache_candidates_loop(context, is_force) "{{{$/;"	f
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
record	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f
recurse	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def recurse(self):$/;"	f	function:Recursion
recurse_class1	bundle/jedi-vim/jedi/test/completion/import_tree/recurse_class2.py	/^import recurse_class1$/;"	i
recurse_class2	bundle/jedi-vim/jedi/test/completion/import_tree/recurse_class1.py	/^import recurse_class2$/;"	i
recursion	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import recursion$/;"	i
recursion	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.evaluate import recursion$/;"	i
recursion	bundle/jedi-vim/jedi/test/completion/functions.py	/^def recursion(a, b):$/;"	f
recursion1	bundle/jedi-vim/jedi/test/completion/arrays.py	/^def recursion1(foo):$/;"	f
recursion2	bundle/jedi-vim/jedi/test/completion/functions.py	/^def recursion2(a):$/;"	f
recursion_decorator	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^def recursion_decorator(func):$/;"	f
redraw	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:redraw() "{{{$/;"	f
redraw_prompt	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! s:redraw_prompt() "{{{$/;"	f
reduce	bundle/jedi-vim/jedi/test/refactor.py	/^from functools import reduce$/;"	i
reduce	bundle/jedi-vim/jedi/test/run.py	/^from functools import reduce$/;"	i
refactor	bundle/jedi-vim/jedi/test/conftest.py	/^from . import refactor$/;"	i
refactor	bundle/jedi-vim/jedi/test/refactor.py	/^    def refactor(self):$/;"	m	class:RefactoringCase
refactoring	bundle/jedi-vim/jedi/test/refactor.py	/^from jedi import refactoring$/;"	i
reformat	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f
refresh	bundle/vim-bufferline/autoload/bufferline.vim	/^function! s:refresh(updatetime)$/;"	f
refreshCurrent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
regexfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f
regisfilter	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f
release	bundle/jedi-vim/jedi/docs/conf.py	/^release = jedi.__version__$/;"	v
remarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f
remove_last_newline	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^    def remove_last_newline(self):$/;"	m	class:Parser
remove_last_newline	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def remove_last_newline(self):$/;"	m	class:ParserNode
ren	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from . import import_tree as ren$/;"	i
rename	bundle/jedi-vim/jedi/jedi/refactoring.py	/^def rename(script, new_name):$/;"	f
rename	bundle/jedi-vim/jedi_vim.py	/^def rename():$/;"	f
rename	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:rename() "{{{$/;"	f
rename_visual	bundle/jedi-vim/jedi_vim.py	/^def rename_visual():$/;"	f
replace	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
report	bundle/jedi-vim/jedi/jedi/parser/pgen2/grammar.py	/^    def report(self):$/;"	m	class:Grammar
report	bundle/jedi-vim/jedi/test/run.py	/^    def report(case, actual, desired):$/;"	f
representation	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^from jedi.evaluate import compiled, representation$/;"	i
requires	bundle/jedi-vim/jedi_vim.py	/^        print('Pyimport completion requires jedi module: https:\/\/github.com\/davidhalter\/jedi')$/;"	i
reraise	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    def reraise(exception, traceback):$/;"	f
reraise	bundle/jedi-vim/jedi/jedi/common.py	/^from jedi._compatibility import unicode, reraise$/;"	i
reraise_uncaught	bundle/jedi-vim/jedi/jedi/common.py	/^def reraise_uncaught(func):$/;"	f
res	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^res = add_to_arr(arr3, 1)$/;"	v
reset_caches	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def reset_caches(self):$/;"	m	class:FastModule
reset_node	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def reset_node(self):$/;"	m	class:ParserNode
reset_time	bundle/jedi-vim/jedi/jedi/debug.py	/^def reset_time():$/;"	f
resolution	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from datetime.timedelta import resolution$/;"	i
resolve	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:resolve(file) "{{{$/;"	f
resolve_implicit_imports	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^        def resolve_implicit_imports(names):$/;"	f	function:Evaluator.goto
resolve_import_paths	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^        def resolve_import_paths(scopes):$/;"	f	function:Script.goto_definitions
resource	bundle/jedi-vim/jedi/scripts/wx_check.py	/^import resource$/;"	i
response	bundle/jedi-vim/jedi/test/completion/usages.py	/^response = 5$/;"	v
response	bundle/jedi-vim/jedi/test/completion/usages.py	/^response = HttpResponse(mimetype='application\/pdf')$/;"	v
restart	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:restart() "{{{$/;"	f
restore	bundle/jedi-vim/jedi/test/conftest.py	/^    def restore():$/;"	f	function:clean_jedi_cache
restore_cursor	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:restore_cursor(dir, fullpath, save_pos, previous_current_dir) "{{{$/;"	f
restore_statusline	bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:restore_statusline()  "{{{$/;"	f
restore_vimfiler_mode	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:restore_vimfiler_mode() "{{{$/;"	f
result	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
result	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^result = arg_l(*args)$/;"	v
ret	bundle/jedi-vim/jedi/test/completion/basic.py	/^def ret(a):$/;"	f
ret	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def ret(self):$/;"	m	class:V
ret	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def ret(self, a1):$/;"	m	class:TestClass
ret	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def ret(self, b):$/;"	m	class:Base
ret	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def ret(self):$/;"	m	class:A
ret	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def ret(self):$/;"	m	class:PropClass
ret	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def ret(self, value):$/;"	m	class:PropClass
ret	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^    def ret(a, b):$/;"	f	function:xy
ret	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^    def ret(self):$/;"	m	class:C
ret2	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def ret2(self):$/;"	m	class:PropClass
ret2	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    ret2 = property(ret2)$/;"	v	class:PropClass
return_module_object	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def return_module_object():$/;"	f
return_one	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^def return_one(something):$/;"	f
return_sup	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def return_sup(self):$/;"	m	class:Super
return_sup	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def return_sup(self):$/;"	m	class:TestSuper
return_value	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^        def return_value(search_path):$/;"	f	function:ModuleWrapper.py__path__
returns	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def returns(self):$/;"	m	class:FunctionExecution
returns	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def returns(self):$/;"	m	class:Scope
reverse	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
rgb	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:rgb(r, g, b) abort$/;"	f
rgb	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>rgb(rgb)$/;"	f
rgb	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>rgb(rgb)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>rgb_color(x, y, z)$/;"	f
rgb_colour	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_colour	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>rgb_colour(x, y, z)$/;"	f
rgb_level	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_level	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>rgb_level(n)$/;"	f
rgb_number	bundle/papercolor-theme/colors/PaperColor.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/Tomorrow.vim	/^	fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/candyman.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/desert256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/desert256v2.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/jelleybeans.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/jellybeans.vim	/^fun! s:rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/lizard256.vim	/^fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/mrkn256.vim	/^    function! <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/simple256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/summerfruit256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/twilight256.vim	/^    fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/wombat256.vim	/^fun <SID>rgb_number(x)$/;"	f
rgb_number	bundle/vim-colorschemes/colors/wombat256i.vim	/^fun <SID>rgb_number(x)$/;"	f
rmdir	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:rmdir(...) abort$/;"	f
rmdir	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:rmdir(path, ...) abort$/;"	f
root_dir	bundle/jedi-vim/jedi/test/helpers.py	/^root_dir = dirname(test_dir)$/;"	v
rotate_source	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:rotate_source(is_next) "{{{$/;"	f
row	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^row = c.fetchall()[0]$/;"	v
rparam	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def rparam(a,b):$/;"	f
rtp_add	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	bundle/vundle/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
ruby_operators	bundle/vim-colorschemes/colors/detailed.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	bundle/vim-colorschemes/colors/herald.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	bundle/vim-colorschemes/colors/kiss.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	bundle/vim-colorschemes/colors/seoul256.vim	/^let ruby_operators = 1$/;"	v
ruby_operators	bundle/vim-colorschemes/colors/thor.vim	/^let ruby_operators = 1$/;"	v
run	bundle/jedi-vim/conftest.py	/^    def run(self):$/;"	m	class:IntegrationTestFile
run	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def run(evaluator, stmt, *args, **kwargs):$/;"	f	function:recursion_decorator
run	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^    def run(execution, **kwargs):$/;"	f	function:execution_recursion_decorator
run	bundle/jedi-vim/jedi/scripts/profile.py	/^def run(code, index):$/;"	f
run	bundle/jedi-vim/jedi/scripts/wx_check.py	/^def run():$/;"	f
run	bundle/jedi-vim/jedi/sith.py	/^    def run(self, debugger, record=None, print_result=False):$/;"	m	class:TestCase
run	bundle/jedi-vim/jedi/test/completion/imports.py	/^from . import run$/;"	i
run	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from .. import run$/;"	i
run	bundle/jedi-vim/jedi/test/conftest.py	/^    def run(self, compare_cb):$/;"	m	class:StaticAnalysisCase
run	bundle/jedi-vim/jedi/test/conftest.py	/^from . import run$/;"	i
run	bundle/jedi-vim/jedi/test/refactor.py	/^    def run(self):$/;"	m	class:RefactoringCase
run	bundle/jedi-vim/jedi/test/run.py	/^    def run(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_completion	bundle/jedi-vim/jedi/test/run.py	/^    def run_completion(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_goto_assignments	bundle/jedi-vim/jedi/test/run.py	/^    def run_goto_assignments(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_goto_definitions	bundle/jedi-vim/jedi/test/run.py	/^    def run_goto_definitions(self, compare_cb):$/;"	m	class:IntegrationTestCase
run_usages	bundle/jedi-vim/jedi/test/run.py	/^    def run_usages(self, compare_cb):$/;"	m	class:IntegrationTestCase
rw_prop	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def rw_prop(self):$/;"	m	class:TestProperty
rw_prop	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def rw_prop(self, value):$/;"	m	class:TestProperty
s	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        debug.speed('import %s' % (import_path,))$/;"	i
s	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^    c = "import os; from os.path import *; result=%s"$/;"	i
s	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def s(cls, x):$/;"	m	class:E
s	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    s = classmethod(s)$/;"	v	class:E
s	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^s = set(lst)$/;"	v
s	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "dave.%s" % letter$/;"	i
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	bundle/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s:Aluminium	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Aluminium		= ['#eeeeec', '#d3d7cf', '#babdb6',$/;"	v
s:BB	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:BLOCKLEVEL_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:Background	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Background    = '#212628'$/;"	v
s:BaseTag	bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Black	bundle/vim-colorschemes/colors/3dglasses.vim	/^let s:Black			=	['#000000', '#001621', '#1B3641', '#00222B']$/;"	v
s:BoldStatement	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:BoldStatement = g:Tabula_BoldStatement$/;"	v
s:BoldStatement	bundle/vim-colorschemes/colors/tabula.vim	/^let s:BoldStatement = 0$/;"	v
s:Bookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:BooleanBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:BooleanBg = s:NormalBg $/;"	v
s:BooleanFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:BooleanFg = '#1BD1DD'$/;"	v
s:Butter	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Butter		= ['#fce94f', '#edd400', '#c4a000']$/;"	v
s:Cache	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:Cache = unite#util#get_vital().import('System.Cache')$/;"	v
s:Cache	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^let s:Cache = vimfiler#util#get_vital().import('System.Cache')$/;"	v
s:Cache	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^let s:Cache = vimfiler#util#get_vital().import('System.Cache')$/;"	v
s:Cache	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^let s:Cache = vimfiler#util#get_vital().import('System.Cache')$/;"	v
s:Chameleon	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Chameleon		= ['#8ae234', '#73d216', '#4e9a06']$/;"	v
s:CharacterBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CharacterBg = s:NormalBg $/;"	v
s:CharacterFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CharacterFg = '#8D523D'$/;"	v
s:Chocolate	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Chocolate		= ['#e9b96e', '#c17d11', '#8f5902']$/;"	v
s:ChocolatePapaya_style	bundle/vim-colorschemes/colors/ChocolatePapaya.vim	/^let s:ChocolatePapaya_style = &background$/;"	v
s:ColorPre	bundle/vim-colorschemes/colors/tabula.vim	/^    let s:ColorPre = g:Tabula_ColorPre$/;"	v
s:ColorPre	bundle/vim-colorschemes/colors/tabula.vim	/^let s:ColorPre = "blue"$/;"	v
s:Colors	bundle/vim-colorschemes/colors/abra.vim	/^let s:Colors = [$/;"	v
s:Colors	bundle/vim-colorschemes/colors/obsidian2.vim	/^let s:Colors = [$/;"	v
s:CommentBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CommentBg = s:NormalBg $/;"	v
s:CommentFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CommentFg = '#5766c9'$/;"	v
s:ConcealBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:ConcealBg = s:NormalBg$/;"	v
s:ConcealFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:ConcealFg = s:NormalBg $/;"	v
s:ConstantBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:ConstantBg = s:NormalBg $/;"	v
s:ConstantFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:ConstantFg = '#bf8095'$/;"	v
s:Creator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:CurColor	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:CurColor = g:Tabula_CurColor$/;"	v
s:CurColor	bundle/vim-colorschemes/colors/tabula.vim	/^let s:CurColor = "blue"$/;"	v
s:Cursor	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Cursor = 'reverse'$/;"	v
s:CursorBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CursorBg = s:StatementFg$/;"	v
s:CursorFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CursorFg = s:StringFg $/;"	v
s:CursorLine	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CursorLine = 'reverse'$/;"	v
s:CursorLineBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CursorLineBg = s:StringFg$/;"	v
s:CursorLineFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:CursorLineFg = s:CommentFg $/;"	v
s:DarkBlue	bundle/vim-colorschemes/colors/3dglasses.vim	/^let s:DarkBlue		=	['#00117B', '#0D4CAD', '#01BEF6']$/;"	v
s:DarkError	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:DarkError = g:Tabula_DarkError$/;"	v
s:DarkError	bundle/vim-colorschemes/colors/tabula.vim	/^let s:DarkError = 0$/;"	v
s:Directory	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Directory = 'italic'$/;"	v
s:DirectoryBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:DirectoryBg = s:NormalBg$/;"	v
s:DirectoryFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:DirectoryFg = s:NormalFg $/;"	v
s:EMPTY_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:Error	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Error = 'bold'$/;"	v
s:ErrorBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:ErrorBg = s:OperatorFg$/;"	v
s:ErrorFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:ErrorFg = s:StringFg$/;"	v
s:Event	bundle/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FileInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:FlagSet	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlatConstants	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:FlatConstants = g:Tabula_FlatConstants$/;"	v
s:FlatConstants	bundle/vim-colorschemes/colors/tabula.vim	/^let s:FlatConstants = 1$/;"	v
s:FloatBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FloatBg = s:NormalBg $/;"	v
s:FloatFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FloatFg = '#A3CE54'$/;"	v
s:FoldColumn	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FoldColumn = 'underline'$/;"	v
s:FoldColumnBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FoldColumnBg = s:IdentifierFg$/;"	v
s:FoldColumnFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FoldColumnFg = s:NormalBg$/;"	v
s:Folded	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Folded = 'underline'$/;"	v
s:FoldedBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FoldedBg = s:IdentifierFg$/;"	v
s:FoldedFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FoldedFg = s:NormalBg$/;"	v
s:Function	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Function = 'bold'$/;"	v
s:FunctionBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FunctionBg = s:NormalBg $/;"	v
s:FunctionFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:FunctionFg = '#6947a1'$/;"	v
s:GitStatusCacheTime	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTime = 0$/;"	v
s:GitStatusCacheTimeExpiry	bundle/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTimeExpiry = 2$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I1 = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:I1 = [ '#005f5f' , '#8abeb7' , 23  , 14 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I1 = [ '#242322' , '#7eaefd' , 234 , 111 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#1a1a18' , '#1693a5' , 232 , 62 ] " blackestgravel & crystallake$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I1 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I1 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#1a1a18' , '#fade3e' , 232 , 221 ] " blackestgravel & warmcorn$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file position)$/;"	v
s:I1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I2 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:I2 = [ '#9e9e9e' , '#303030' , 247 , 236 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:I2 = [ '#c5c8c6' , '#0087af' , 15  , 31 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I2 = [ '#75d7d8' , '#242322' , 80  , 234 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#515744' , '#44403a' , 101 , 238 ] " lichen & deepgravel$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I2 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I2 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#c7b386' , '#45413b' , 252 , 238 ] " bleaksand & deepgravel$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 236 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:I3 = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:I3 = [ '#ffffff' , '#005f87' , 255 , 24 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:I3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5' , '#2e2d2a' , 39 , 235 ] " crystallake & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:I3 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:I3 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ] " lighttannedskin & darkgravel$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:I3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 234 ]$/;"	v
s:I4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_dark_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3], s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:IA = [ '#5e5e5e' , '#222222' , 59 , 235 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:IA = [ '#a1a1a1' , '#dddddd' , 145 , 188 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA1 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA2 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
s:IA2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:IA3 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IGNORE_ERRORS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:IM	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:INLINE_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:IdentifierBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:IdentifierBg = s:NormalBg$/;"	v
s:IdentifierFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:IdentifierFg = '#9d5abf'$/;"	v
s:InvisibleIgnore	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:InvisibleIgnore = g:Tabula_InvisibleIgnore$/;"	v
s:InvisibleIgnore	bundle/vim-colorschemes/colors/tabula.vim	/^let s:InvisibleIgnore = 1$/;"	v
s:KeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:LNumUnderline	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:LNumUnderline = g:Tabula_LNumUnderline$/;"	v
s:LNumUnderline	bundle/vim-colorschemes/colors/tabula.vim	/^let s:LNumUnderline = 0$/;"	v
s:LightBlue	bundle/vim-colorschemes/colors/3dglasses.vim	/^let s:LightBlue		=	['#004455', '#0088AA', '#00CCFF', '#55DDFF', '#80E5FF']$/;"	v
s:LineNr	bundle/vim-colorschemes/colors/otaku.vim	/^let s:LineNr = 'bold,underline'$/;"	v
s:LineNrBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:LineNrBg = s:FunctionFg$/;"	v
s:LineNrFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:LineNrFg = s:NormalBg$/;"	v
s:M	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:M = (s:m + s:h) \/ 2$/;"	v
s:MatchParenBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:MatchParenBg = s:NormalBg$/;"	v
s:MatchParenFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:MatchParenFg = '#ffffff' $/;"	v
s:MenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:N1 = [ '#282a2e' , '#c5c8c6' , 'black' , 15      ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N1 = [ '#e2e2e2' , '#4f3598' , 254 , 56  ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ] " blackestgravel & snow$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N1 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N1 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#141413' , '#c7b386' , 232 , 252 ] " blackestgravel & bleaksand$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file position)$/;"	v
s:N1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:N2 = [ '#93a1a1' , '#586e75' , 245 , 240 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:N2 = [ '#c5c8c6' , '#373b41' , 15      , 8       ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N2 = [ '#ff5fd7' , '#242322' , 206 , 234 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#ffffff' , '#44403a' , 255, 238 ] " snow & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16  ] " info$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N2 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N2 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#c7b386' , '#45413b' , 252, 238 ] " bleaksand & deepgravel$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 236 ] " info$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:N3 = [ '#93a1a1' , '#073642' , 240 , 233 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/hybridline.vim	/^let s:N3 = [ '#ffffff' , '#282a2e' , 255     , 'black' ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:N3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ] " dilutedpaint & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:N3 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ] " toffee & darkgravel$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:N3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 234 ] " statusline$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#777470' , 240 ] " gravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#857f78' , 243 ] " gravel$/;"	v
s:N4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:NERDTree	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NonTextBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:NonTextBg = s:NormalBg $/;"	v
s:NonTextFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:NonTextFg = '#414F6C' $/;"	v
s:NormalBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:NormalBg = '#372e85'$/;"	v
s:NormalFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:NormalFg = '#a7a8e8'$/;"	v
s:NormalTag	bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:Notifier	bundle/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:NumberBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:NumberBg = s:NormalBg $/;"	v
s:NumberFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:NumberFg = '#C6C536'$/;"	v
s:Opener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:OperatorBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:OperatorBg = s:NormalBg $/;"	v
s:OperatorFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:OperatorFg = '#DC1794'$/;"	v
s:Orange	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Orange		= ['#fcaf3e', '#f57900', '#ce5c00']$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ] " raspberry$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ] " bleaklemon$/;"	v
s:PA	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:PREFIX	bundle/unite.vim/autoload/unite/exrename.vim	/^let s:PREFIX = unite#util#is_windows() ? '[exrename]' : '*exrename*'$/;"	v
s:Path	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Plum	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:Plum			= ['#ad7fa8', '#75507b', '#5c3566']$/;"	v
s:PreProcBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:PreProcBg = s:NormalBg $/;"	v
s:PreProcFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:PreProcFg = '#b58848'$/;"	v
s:PseudoTag	bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R1 = [ '#d75fff' , '#ffffff','171','231']$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R2 = [ '#5f005f' , '#d75fff','53','171']$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
s:R2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 236 ]$/;"	v
s:R3	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:R3 = [ '#ff87ff' , '#8700af','213','91']$/;"	v
s:R3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 234 ]$/;"	v
s:R4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:RE = [ '#233e09' , 22 ] " oakleaf$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:RE = [ '#c7915b' , 173 ] " nut$/;"	v
s:Red	bundle/vim-colorschemes/colors/3dglasses.vim	/^let s:Red			=	['#2b0000', '#800000', '#AA0000', '#FF0000', '#FF2A2A', '#FF5555']$/;"	v
s:Repeat	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Repeat = 'bold'$/;"	v
s:RepeatBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:RepeatBg = s:NormalBg $/;"	v
s:RepeatFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:RepeatFg = '#4a827c'$/;"	v
s:SQLKeywords	bundle/vim-comfortable/ftplugin/sql/AutoSQLUpperCase.vim	/^let s:SQLKeywords = [$/;"	v
s:ScarletRed	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:ScarletRed	= ['#ef2929', '#cc0000', '#a40000']$/;"	v
s:Search	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Search = 'reverse'$/;"	v
s:SearchBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:SearchBg = s:StringFg$/;"	v
s:SearchFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:SearchFg = s:IdentifierFg $/;"	v
s:SearchStandOut	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:SearchStandOut = g:Tabula_SearchStandOut$/;"	v
s:SearchStandOut	bundle/vim-colorschemes/colors/tabula.vim	/^let s:SearchStandOut=0$/;"	v
s:SkyBlue	bundle/vim-colorschemes/colors/two2tango.vim	/^let s:SkyBlue		= ['#729fcf', '#3465a4', '#204a87']$/;"	v
s:SpecialBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:SpecialBg = s:NormalBg$/;"	v
s:SpecialFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:SpecialFg = s:IdentifierFg$/;"	v
s:SpecialKeyBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:SpecialKeyBg = s:NormalBg$/;"	v
s:SpecialKeyFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:SpecialKeyFg = s:IdentifierFg$/;"	v
s:Statement	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Statement = 'bold'$/;"	v
s:StatementBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatementBg = s:NormalBg $/;"	v
s:StatementFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatementFg = '#1C1745'$/;"	v
s:StatusLine	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatusLine = 'reverse,underline' $/;"	v
s:StatusLineBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatusLineBg = s:StatementFg$/;"	v
s:StatusLineFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatusLineFg = s:FunctionFg $/;"	v
s:StatusLineNC	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatusLineNC = 'reverse,underline' $/;"	v
s:StatusLineNCBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatusLineNCBg = s:NormalBg$/;"	v
s:StatusLineNCFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StatusLineNCFg = s:FunctionFg $/;"	v
s:StringBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StringBg = s:NormalBg $/;"	v
s:StringFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:StringFg = '#d6d9b6'$/;"	v
s:System	bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:TODO	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TODO = 'bold'$/;"	v
s:TODOBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TODOBg = '#3F52FF'$/;"	v
s:TODOFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TODOFg = s:StringFg$/;"	v
s:TYPE_DICT	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TYPE_STRING	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:Title	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Title = 'bold'$/;"	v
s:TitleBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TitleBg = s:NormalBg$/;"	v
s:TitleFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TitleFg = s:NormalFg $/;"	v
s:Tlist_Skip_Refresh	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TodoUnderline	bundle/vim-colorschemes/colors/tabula.vim	/^  let s:TodoUnderline = g:Tabula_TodoUnderline$/;"	v
s:TodoUnderline	bundle/vim-colorschemes/colors/tabula.vim	/^let s:TodoUnderline=1$/;"	v
s:TreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:Type	bundle/vim-colorschemes/colors/otaku.vim	/^let s:Type = 'NONE'$/;"	v
s:TypeBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TypeBg = s:NormalBg $/;"	v
s:TypeFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:TypeFg = '#778D92'$/;"	v
s:TypeInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:UI	bundle/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:V	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^let s:V = vital#of('vimfiler')$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V1 = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:V1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V1 = [ '#0087ff' , '#ffffff','33','231']$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V1 = [ '#242322' , '#e6987a' , 234 , 180 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#1a1a18' , '#ab3e5d' , 232 , 161 ] " blackestgravel & raspberry$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#fd971f' , 232 , 208 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V1 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V1 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#1c1b1a' , '#9a4820' , 233 , 88 ] " blackgravel & warmadobe$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V1	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V2 = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:V2 = [ '#ffffff' , '#44403a' , 255, 238 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V2 = [ '#005faf' , '#5fafff','25','75']$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V2 = [ '#dbc570' , '#242322' , 186 , 234 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#000000' , '#908571' , 16 , 252 ] " coal & winterterrain$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16  ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V2 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V2 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#000000' , '#88633f' , 16 , 95 ] " coal & cappuccino$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V2	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 236 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/dark.vim	/^let s:V3 = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/durant.vim	/^let s:V3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/kalisi.vim	/^let s:V3 = [ '#87d7ff' , '#005faf','117','25']$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/kolor.vim	/^let s:V3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#ab3e5d' , '#8c7f77' , 161 , 245 ] " raspberry & wetcoldterrain$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:V3 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:V3 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#88633f' , '#c7b386' , 95 , 252 ] " cappuccino & bleaksand$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 234 ]$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#515744' , 101 ] " lichen$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#c14c3d' , 160 ] " tannedumbrella$/;"	v
s:V4	bundle/vim-airline/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:VERSION	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:VERSION = '0.1.0'$/;"	v
s:VOID	bundle/unite.vim/autoload/unite/exrename.vim	/^let s:VOID = function('s:void')$/;"	v
s:VertSplit	bundle/vim-colorschemes/colors/otaku.vim	/^let s:VertSplit = 'reverse,underline' $/;"	v
s:VertSplitBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:VertSplitBg = s:NormalBg$/;"	v
s:VertSplitFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:VertSplitFg = s:FunctionFg $/;"	v
s:VisualBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:VisualBg = s:StatementFg$/;"	v
s:VisualFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:VisualFg = s:ErrorBg $/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/raven.vim	/^let s:WI = [ '#ff0000', '#2e2e2e', 196, 235 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/silver.vim	/^let s:WI = [ '#ff0000', '#e1e1e1', 196, 188 ]$/;"	v
s:WI	bundle/vim-airline/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#e33900', 255, 166 ]$/;"	v
s:White	bundle/vim-colorschemes/colors/3dglasses.vim	/^let s:White			=	['#ffffff', '#dddddd', '#bbbbbb']$/;"	v
s:_	bundle/lightline.vim/autoload/lightline.vim	/^let s:_ = 1$/;"	v
s:_DEBUG_DUMP_OPTIONS	bundle/syntastic/plugin/syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_NOTIFIER_TYPES	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_YCM_TYPES	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_isDebugEnabled	bundle/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_unify_path_cache	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_width	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:accent1	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent1    = s:middleDarkBlue$/;"	v
s:accent1	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent1    = s:middleLightBlue$/;"	v
s:accent2	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent2    = s:middleDarkGreen$/;"	v
s:accent2	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent2    = s:middleLightGreen$/;"	v
s:accent3	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent3    = s:lightGreen$/;"	v
s:accent3	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent3    = s:middleDarkPink$/;"	v
s:accent4	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent4    = s:darkTan$/;"	v
s:accent4	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:accent4    = s:lightTan$/;"	v
s:accents	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:ack_mappings	bundle/ack.vim/plugin/ack.vim	/^let s:ack_mappings = {$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^let s:action_table.delete = {$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^let s:action_table.change = {$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:action_table.cd = {$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:action_table.delete = {$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^let s:action_table = {}$/;"	v
s:action_table	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^let s:action_table.sort = {$/;"	v
s:active_winnr	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:actual_white	bundle/vim-colorschemes/colors/pencil.vim	/^let s:actual_white    = { "gui": "#FFFFFF", "cterm": "231" }$/;"	v
s:addbg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:addbg      = "#d7ffd7"$/;"	v
s:addbg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:addbg      = "194"$/;"	v
s:addbg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:addbg      = "#5F875F"$/;"	v
s:addbg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:addbg      = "65"$/;"	v
s:addbg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:addbg      = "#5f875f"$/;"	v
s:addbg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:addbg      = "65"$/;"	v
s:addfg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:addfg      = "#d7ffaf"$/;"	v
s:addfg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:addfg      = "193"$/;"	v
s:addfg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:addfg      = "#d7ffaf"$/;"	v
s:addfg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:addfg      = "193"$/;"	v
s:airline_initialized	bundle/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:airline_theme_defined	bundle/vim-airline/plugin/airline.vim	/^let s:airline_theme_defined = 0$/;"	v
s:alizarin	bundle/vim-colorschemes/colors/flatui.vim	/^let s:alizarin=       { "gui": "#e74c3c", "cterm": "196"  }$/;"	v
s:almostBlack	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:almostBlack      = { "gui": "#111111", "cterm": "233" }$/;"	v
s:almostWhite	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:almostWhite      = { "gui": "#EEEEEE", "cterm": "255" }$/;"	v
s:alternative_bold_items	bundle/vim-colorschemes/colors/lucius.vim	/^let s:alternative_bold_items = ["Identifier", "PreProc", "Statement",$/;"	v
s:amethyst	bundle/vim-colorschemes/colors/flatui.vim	/^let s:amethyst=       { "gui": "#9b59b6", "cterm": "133" }$/;"	v
s:aqua	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:aqua = "3e999f"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:aqua = "99ffff"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:aqua = "70c0b1"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:aqua = "009999"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:aqua = "8abeb7"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:aqua = "3e999f"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:aqua       = "#005f5f"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:aqua       = "23"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:aqua       = "109"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:aqua       = "14"   " LightCyan$/;"	v
s:aqua	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:aqua       = "6"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:aqua       = "#8abeb7"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/last256.vim	/^  let s:aqua       = "#5fafd7"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/last256.vim	/^  let s:aqua       = "111"$/;"	v
s:aqua	bundle/vim-colorschemes/colors/saturn.vim	/^let s:aqua =             [s:hsl2color(180, 20, 65), 65 ]$/;"	v
s:array_beg	bundle/vim-web-indent/indent/javascript.vim	/^let s:array_beg = '\\[[^\\]]*' . s:js_end_line_comment . '$'$/;"	v
s:array_end	bundle/vim-web-indent/indent/javascript.vim	/^let s:array_end = '^' . s:js_mid_line_comment . '[^\\[]*\\][;,]*' . s:js_end_line_comment . '$'$/;"	v
s:ars	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:asbestos	bundle/vim-colorschemes/colors/flatui.vim	/^let s:asbestos=       { "gui": "#7f8c8d", "cterm": "245" }$/;"	v
s:assert	bundle/unite.vim/test/matcher.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	bundle/unite.vim/test/sorter.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	bundle/unite.vim/test/source.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	bundle/vimfiler.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:b	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:b      = ",bold"$/;"	v
s:b	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:b      = ",bold"$/;"	v
s:b	bundle/vim-colorschemes/colors/last256.vim	/^let s:b      = ",bold"$/;"	v
s:b	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:b_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:b_blue = "#2D69FF" $/;"	v
s:b_cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:b_cyan = "#33CCCC"$/;"	v
s:b_green	bundle/vim-colorschemes/colors/mdark.vim	/^let s:b_green = "#5AB578"$/;"	v
s:b_red	bundle/vim-colorschemes/colors/mdark.vim	/^let s:b_red = "#990000"$/;"	v
s:b_yellow	bundle/vim-colorschemes/colors/mdark.vim	/^let s:b_yellow = "#FFFF00"$/;"	v
s:back	bundle/vim-colorschemes/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:background	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:background = "F5F5F5"$/;"	v
s:background	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:background = "002451"$/;"	v
s:background	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:background = "000000"$/;"	v
s:background	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:background = "2d2d2d"$/;"	v
s:background	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	let s:background = "303030"$/;"	v
s:background	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:background = "1d1f21"$/;"	v
s:background	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:background = "fafafa"$/;"	v
s:background	bundle/vim-colorschemes/colors/gotham.vim	/^let s:background = 'base0'$/;"	v
s:background	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:background = 'base0'$/;"	v
s:background	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:background = "#e4e4e4"$/;"	v
s:background	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:background = "254"$/;"	v
s:background	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:background = "NONE"$/;"	v
s:background	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:background = "#1d1f21"$/;"	v
s:background	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:background = "234"$/;"	v
s:background	bundle/vim-colorschemes/colors/last256.vim	/^	let s:background = "#002b30"$/;"	v
s:background	bundle/vim-colorschemes/colors/last256.vim	/^  let s:background = "16"$/;"	v
s:background	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:background  = &background$/;"	v
s:backup	bundle/vim-colorschemes/colors/seoul256-light.vim	/^      let s:backup = g:seoul256_background$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base0 = [ '#0000ff', 12 ]$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base0 = '#666666'$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base0 = '#909090'$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base0 = '#ffffff'$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base0 = '#949494'$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base0 = '#777777'$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base0 = [ '#808070', 244 ]$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base0 = [ '#839496', s:cuicolors.base0[s:cuiindex] ]$/;"	v
s:base0	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base0 = [ '#808080', 244 ]$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base00 = [ '#ffff00', 11  ]$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base00 = '#808080'$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base00 = '#6060df'$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base00 = '#767676'$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base00 = '#666666'$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base00 = [ '#666656', 242  ]$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base00 = [ '#657b83', s:cuicolors.base00[s:cuiindex] ]$/;"	v
s:base00	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base00 = [ '#666666', 242  ]$/;"	v
s:base00	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base00  = "0"$/;"	v
s:base00	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base00  = "235"$/;"	v
s:base00	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base00 = "002d49"$/;"	v
s:base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base01 = [ '#00ff00', 10 ]$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base01 = '#b4b4b4'$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base01 = '#6060af'$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base01 = '#606060'$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base01 = '#555555'$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base01 = [ '#4e4e43', 239 ]$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base01 = [ '#586e75', s:cuicolors.base01[s:cuiindex] ]$/;"	v
s:base01	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base01 = [ '#585858', 240 ]$/;"	v
s:base01	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base01  = "236"$/;"	v
s:base01	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base01  = "8"$/;"	v
s:base01	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base01 = "003951" $/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base02 = [ '#000000', 0 ]$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base02 = '#c8c8c8'$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base02 = '#434343'$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base02 = '#606087'$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base02 = '#4e4e4e'$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base02 = '#444444'$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base02 = [ '#30302c ', 236 ]$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base02 = [ '#073642', s:cuicolors.base02[s:cuiindex] ]$/;"	v
s:base02	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base02 = [ '#444444 ', 238 ]$/;"	v
s:base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base023	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base023 = '#dfdfdf'$/;"	v
s:base023	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base023 = '#303030'$/;"	v
s:base023	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base023 = '#202087'$/;"	v
s:base023	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base023 = '#262626'$/;"	v
s:base023	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base023 = '#333333'$/;"	v
s:base023	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base023 = [ '#353535 ', 236 ]$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base03 = [ '#808080', 8 ]$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base03 = '#fafafa'$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base03 = '#1d1f21'$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base03 = '#002451'$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base03 = '#12124c'$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base03 = '#2d2d2d'$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base03 = [ '#151513', 233 ]$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base03 = [ '#002b36', s:cuicolors.base03[s:cuiindex] ]$/;"	v
s:base03	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base03 = [ '#242424', 235 ]$/;"	v
s:base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base1 = [ '#00ffff', 14 ]$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base1 = '#555555'$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base1 = '#a0a0a0'$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base1 = '#ffffff'$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base1 = '#b2b2b2'$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base1 = '#999999'$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base1 = [ '#949484', 246 ]$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base1 = [ '#93a1a1', s:cuicolors.base1[s:cuiindex] ]$/;"	v
s:base1	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base1 = [ '#969696', 247 ]$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base10	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base10  = "11"$/;"	v
s:base10	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base10  = "24"$/;"	v
s:base10	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base10 = "2f5468"$/;"	v
s:base11	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base11  = "110"$/;"	v
s:base11	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base11  = "12"$/;"	v
s:base11	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base11 = "b4c3cf"$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base2 = [ '#c0c0c0', 7 ]$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base2 = '#4f4f4f'$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base2 = '#bababa'$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base2 = '#ffffff'$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base2 = '#c6c6c6'$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base2 = '#aaaaaa'$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base2 = [ '#a8a897', 248 ]$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base2 = [ '#eee8d5', s:cuicolors.base2[s:cuiindex] ]$/;"	v
s:base2	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base2 = [ '#a8a8a8', 248 ]$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base20	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base20  = "242"$/;"	v
s:base20	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base20  = "9"$/;"	v
s:base20	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base20 = "577284"$/;"	v
s:base21	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base21  = "14"$/;"	v
s:base21	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base21  = "247"$/;"	v
s:base21	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base21 = "8ea2b0"$/;"	v
s:base23	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base23 = '#ffffff'$/;"	v
s:base23	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base23 = '#d0d0d0'$/;"	v
s:base23	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base23 = '#bbbbbb'$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:base3 = [ '#ffffff', 15 ]$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:base3 = '#4d4d4c'$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:base3 = '#c5c8c6'$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:base3 = '#ffffff'$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:base3 = '#eaeaea'$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:base3 = '#cccccc'$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:base3 = [ '#e8e8d3', 253 ]$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:base3 = [ '#fdf6e3', s:cuicolors.base3[s:cuiindex] ]$/;"	v
s:base3	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:base3 = [ '#d0d0d0', 252 ]$/;"	v
s:base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:base30	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base30  = "253"$/;"	v
s:base30	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base30  = "7"$/;"	v
s:base30	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base30 = "dae6f0"$/;"	v
s:base31	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base31  = "15"$/;"	v
s:base31	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:base31  = "254"$/;"	v
s:base31	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:base31 = "edf8ff"$/;"	v
s:base_path	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:baseback0	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:baseback0  = s:base00$/;"	v
s:baseback0	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:baseback0  = s:base31$/;"	v
s:baseback1	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:baseback1  = s:base01$/;"	v
s:baseback1	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:baseback1  = s:base30$/;"	v
s:basecolor0	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor0 = s:base10$/;"	v
s:basecolor0	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor0 = s:base11$/;"	v
s:basecolor1	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor1 = s:base10$/;"	v
s:basecolor1	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor1 = s:base11$/;"	v
s:basecolor2	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor2 = s:base20$/;"	v
s:basecolor2	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor2 = s:base21$/;"	v
s:basecolor3	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor3 = s:base20$/;"	v
s:basecolor3	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basecolor3 = s:base21$/;"	v
s:basefore0	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basefore0  = s:base00$/;"	v
s:basefore0	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basefore0  = s:base30$/;"	v
s:basefore1	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basefore1  = s:base01$/;"	v
s:basefore1	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:basefore1  = s:base31$/;"	v
s:bb	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:beige	bundle/vim-colorschemes/colors/twilight.vim	/^let s:beige = '#ceb67f'$/;"	v
s:belizeHole	bundle/vim-colorschemes/colors/flatui.vim	/^let s:belizeHole=     { "gui": "#2980b9", "cterm": "26"  }$/;"	v
s:bg	bundle/vim-colorschemes/colors/elda.vim	/^let s:bg = 233 "|234$/;"	v
s:bg	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:bg=s:clouds$/;"	v
s:bg	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:bg=s:midnightBlue$/;"	v
s:bg	bundle/vim-colorschemes/colors/grey2.vim	/^    let s:bg = !!g:grey2_text_bg$/;"	v
s:bg	bundle/vim-colorschemes/colors/grey2.vim	/^    let s:bg = 1$/;"	v
s:bg	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:bg         = s:black$/;"	v
s:bg	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:bg         = s:white$/;"	v
s:bg	bundle/vim-colorschemes/colors/mdark.vim	/^let s:bg = "#1E2426"$/;"	v
s:bg	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:bg              = s:black$/;"	v
s:bg	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:bg              = s:white$/;"	v
s:bg	bundle/vim-colorschemes/colors/phd.vim	/^let s:bg = '#061229'$/;"	v
s:bg_hl	bundle/vim-colorschemes/colors/phd.vim	/^let s:bg_hl = '#324454'$/;"	v
s:bg_hl_soft	bundle/vim-colorschemes/colors/phd.vim	/^let s:bg_hl_soft = '#1e293e'$/;"	v
s:bg_minor	bundle/vim-colorschemes/colors/phd.vim	/^let s:bg_minor = '#030a17'$/;"	v
s:bg_subtle	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:bg_subtle       = s:light_black$/;"	v
s:bg_subtle	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:bg_subtle       = s:light_gray$/;"	v
s:bg_very_subtle	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:bg_very_subtle  = s:lighter_gray$/;"	v
s:bg_very_subtle	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:bg_very_subtle  = s:subtle_black$/;"	v
s:bins	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:black	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:black='#000000'$/;"	v
s:black	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:black   = "black"$/;"	v
s:black	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:black = ['#000000', 0]$/;"	v
s:black	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:black = ['#292929', 8]$/;"	v
s:black	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:black            = { "gui": "#000000", "cterm": "16"  }$/;"	v
s:black	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:black        = "#2e3436"$/;"	v
s:black	bundle/vim-colorschemes/colors/mdark.vim	/^let s:black = "#000000"$/;"	v
s:black	bundle/vim-colorschemes/colors/pencil.vim	/^let s:black           = { "gui": "#212121", "cterm": "0"   }$/;"	v
s:block_rules	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:block_rules = {$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:blue = [ '#000080', 4 ]$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:blue = '#4271ae'$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:blue = '#81a2be'$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:blue = '#bbdaff'$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:blue = '#7aa6da'$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:blue = '#99cccc'$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:blue = [ '#8197bf', 103 ]$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:blue = [ '#268bd2', s:cuicolors.blue[s:cuiindex] ]$/;"	v
s:blue	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:blue = [ '#8ac6f2', 117 ]$/;"	v
s:blue	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:blue = "4271ae"$/;"	v
s:blue	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:blue = "bbdaff"$/;"	v
s:blue	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:blue = "7aa6da"$/;"	v
s:blue	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:blue = "99cccc"$/;"	v
s:blue	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:blue = "81a2be"$/;"	v
s:blue	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:blue = "4271ae"$/;"	v
s:blue	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:blue='#1d28d2'$/;"	v
s:blue	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:blue    = "blue"$/;"	v
s:blue	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:blue    = "darkblue"$/;"	v
s:blue	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:blue    = "32"$/;"	v
s:blue	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:blue    = "4"$/;"	v
s:blue	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:blue    = "0094d4"$/;"	v
s:blue	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:blue       = "#00005f"$/;"	v
s:blue	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:blue       = "17"$/;"	v
s:blue	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:blue       = "110"$/;"	v
s:blue	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:blue       = "12"   " LightBlue$/;"	v
s:blue	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:blue       = "4"$/;"	v
s:blue	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:blue       = "#81a2be"$/;"	v
s:blue	bundle/vim-colorschemes/colors/last256.vim	/^  let s:blue       = "#5f87ff"$/;"	v
s:blue	bundle/vim-colorschemes/colors/last256.vim	/^  let s:blue       = "69"$/;"	v
s:blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:blue = "#3B6BBD"$/;"	v
s:blue	bundle/vim-colorschemes/colors/pencil.vim	/^let s:blue            = { "gui": "#20BBFC", "cterm": "12"  }$/;"	v
s:blue	bundle/vim-colorschemes/colors/phd.vim	/^let s:blue = '#5299bf'$/;"	v
s:blue	bundle/vim-colorschemes/colors/saturn.vim	/^let s:blue =             [s:hsl2color(215, 20, 60), 60 ]$/;"	v
s:blue	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:blue_lav	bundle/vim-colorschemes/colors/mdark.vim	/^let s:blue_lav = "#393CC3"$/;"	v
s:blue_light	bundle/vim-colorschemes/colors/saturn.vim	/^let s:blue_light =       [s:hsl2color(210, 25, 65), 60 ]$/;"	v
s:bold	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:bold=""$/;"	v
s:bold	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:bold=",bold"$/;"	v
s:boldBlack	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldBlack='#555555'$/;"	v
s:boldBlue	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldBlue='#5050ff'$/;"	v
s:boldCyan	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldCyan='#44ffff'$/;"	v
s:boldGreen	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldGreen='#44ff44'$/;"	v
s:boldMagenta	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldMagenta='#ff44ff'$/;"	v
s:boldRed	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldRed='#dc3244'$/;"	v
s:boldWhite	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:boldWhite='#ffffff'$/;"	v
s:bold_items	bundle/vim-colorschemes/colors/lucius.vim	/^let s:bold_items = [$/;"	v
s:bold_opt	bundle/vim-colorschemes/colors/marklar.vim	/^    let s:bold_opt = 0$/;"	v
s:bookmarks	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:bookmarks = {}$/;"	v
s:border1_bg	bundle/vim-colorschemes/colors/phd.vim	/^let s:border1_bg = s:bg_hl$/;"	v
s:border1_fg	bundle/vim-colorschemes/colors/phd.vim	/^let s:border1_fg = s:text_minor$/;"	v
s:brick	bundle/vim-colorschemes/colors/mdark.vim	/^let s:brick = "#993333"$/;"	v
s:bright	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:brown	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:brown='#aa5500'$/;"	v
s:brown	bundle/vim-colorschemes/colors/last256.vim	/^  let s:brown      = "#87875f"$/;"	v
s:brown	bundle/vim-colorschemes/colors/last256.vim	/^  let s:brown      = "101"    $/;"	v
s:brown	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:brown        = "#c4a000"$/;"	v
s:brown_orange	bundle/vim-colorschemes/colors/mdark.vim	/^let s:brown_orange = "#CC6633"$/;"	v
s:buf_min_count	bundle/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr_format	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buffer_bookmark_action	bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:buffer_bookmark_action = {$/;"	v
s:buffer_idx_mode	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:buffer_idx_mode = get(g:, 'airline#extensions#tabline#buffer_idx_mode', 0)$/;"	v
s:buffer_list	bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:buffer_list = {}$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:builder	bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	bundle/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	bundle/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bundle	bundle/vundle/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc = {}$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.blackestgravel = ['141413', 232]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.blackgravel    = ['1c1b1a', 233]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.brightgravel   = ['d9cec3', 252]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.coal = ['000000', 16]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.coffee    = ['c7915b', 173]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.dalespale = ['fade3e', 221]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.darkgravel     = ['242321', 235]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.darkroast = ['88633f', 95]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.deepergravel   = ['35322d', 236]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.deepgravel     = ['45413b', 238]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.dirtyblonde = ['f4cf86', 222]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.dress = ['ff9eb8', 211]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.gravel         = ['857f78', 243]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.lightgravel    = ['998f84', 245]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.lime = ['aeee00', 154]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.mediumgravel   = ['666462', 241]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.orange = ['ffa724', 214]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.plain = ['f8f6f2', 15]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.saltwatertaffy = ['8cffba', 121]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.snow = ['ffffff', 15]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.taffy = ['ff2c4b', 196]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.tardis = ['0a9dff', 39]$/;"	v
s:bwc	bundle/vim-colorschemes/colors/badwolf.vim	/^let s:bwc.toffee = ['b88853', 137]$/;"	v
s:c	bundle/vim-colorschemes/colors/detailed.vim	/^let s:c = {$/;"	v
s:c	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	bundle/vim-colorschemes/colors/last256.vim	/^let s:c      = ",undercurl"$/;"	v
s:c	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_files	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:cache_files = {}$/;"	v
s:cache_ignore_files	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:cache_ignore_files = {}$/;"	v
s:cache_module_path	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:cache_sid = {}$/;"	v
s:cached_result	bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:cached_result = []$/;"	v
s:cached_result	bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:cached_result = []$/;"	v
s:cached_result	bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:cached_result = []$/;"	v
s:cached_result	bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:cached_result = []$/;"	v
s:cached_result	bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:cached_result = {}$/;"	v
s:cached_result	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:cached_result = []$/;"	v
s:carrot	bundle/vim-colorschemes/colors/flatui.vim	/^let s:carrot=         { "gui": "#e67e22", "cterm": "172"  }$/;"	v
s:ccex	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:ccube	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:ccube = "002a557faad4"$/;"	v
s:ccube	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:ccube = g:xterm16_ccube$/;"	v
s:ccube	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:ccube ="005f87afd7ff"$/;"	v
s:cdable_action_file	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:cdable_action_file = {$/;"	v
s:cdable_action_rec	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec = {$/;"	v
s:cdable_action_rec_async	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_async = {$/;"	v
s:cdable_action_rec_parent	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent = {$/;"	v
s:cdable_action_rec_parent_async	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent_async = {$/;"	v
s:cdable_action_rec_project	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project = {$/;"	v
s:cdable_action_rec_project_async	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project_async = {$/;"	v
s:cerise	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:cerise = ['#FF0033', 197] " red\/ping$/;"	v
s:cerise	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:cerise = ['#FF0033', 1] " red\/ping$/;"	v
s:changebg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:changebg   = "#d7d7ff"$/;"	v
s:changebg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:changebg   = "189"$/;"	v
s:changebg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:changebg   = "#5F5F87"$/;"	v
s:changebg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:changebg   = "60"$/;"	v
s:changebg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:changebg   = "#5f5f87"$/;"	v
s:changebg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:changebg   = "60"$/;"	v
s:changefg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:changefg   = "#d7d7ff"$/;"	v
s:changefg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:changefg   = "189"$/;"	v
s:changefg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:changefg   = "#d7d7ff"$/;"	v
s:changefg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:changefg   = "189"$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:cinterval	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:cinterval = s:cinterval . s:tohex( (('0x'.s:lower) + ('0x'.s:upper))\/2 )$/;"	v
s:cinterval	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:cinterval = ""$/;"	v
s:close_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:close_symbol = get(g:, 'airline#extensions#tabline#close_symbol', 'X')$/;"	v
s:closed_icon	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let s:closed_icon = vimfiler#util#escape_pattern($/;"	v
s:clouds	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:clouds = ['#ECF0F1', 15] " very light gray$/;"	v
s:clouds	bundle/vim-colorschemes/colors/flatui.vim	/^let s:clouds=         { "gui": "#ecf0f1", "cterm": "255" }$/;"	v
s:cmap	bundle/vim-colorschemes/colors/calmar256-light.vim	/^    let s:cmap =   [ $/;"	v
s:cmap	bundle/vim-colorschemes/colors/pink.vim	/^    let s:cmap = [$/;"	v
s:cntrl_beg	bundle/vim-web-indent/indent/javascript.vim	/^let s:cntrl_beg = s:cntrl_beg_keys . s:js_end_line_comment . '$' $/;"	v
s:cntrl_beg_keys	bundle/vim-web-indent/indent/javascript.vim	/^let s:cntrl_beg_keys = '\\(\\(\\(if\\|for\\|with\\|while\\)\\s*(.*)\\)\\|\\(try\\|do\\)\\)\\s*'$/;"	v
s:cntrl_end	bundle/vim-web-indent/indent/javascript.vim	/^let s:cntrl_end = '\\(while\\s*(.*)\\)\\s*;\\=\\s*' . s:js_end_line_comment . '$'$/;"	v
s:cntrl_mid	bundle/vim-web-indent/indent/javascript.vim	/^let s:cntrl_mid = s:cntrl_mid_keys . s:js_end_line_comment . '$' $/;"	v
s:cntrl_mid_keys	bundle/vim-web-indent/indent/javascript.vim	/^let s:cntrl_mid_keys = '\\(\\(\\(else\\s*if\\|catch\\)\\s*(.*)\\)\\|\\(finally\\|else\\)\\)\\s*'$/;"	v
s:col	bundle/vim-colorschemes/colors/calmar256-light.vim	/^            let s:col[i] = "NONE"$/;"	v
s:color_map	bundle/vim-colorschemes/colors/lucius.vim	/^let s:color_map = {$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:colormap	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:colormap = 'allblue'$/;"	v
s:colormap	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:colormap = 'standard'$/;"	v
s:colormap	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:colormap = g:xterm16_colormap$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors = {}$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base0 = { 'gui': '#0c1014', 'cterm': 0 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base1 = { 'gui': '#11151c', 'cterm': 8 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base2 = { 'gui': '#091f2e', 'cterm': 10 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base3 = { 'gui': '#0a3749', 'cterm': 12 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base4 = { 'gui': '#245361', 'cterm': 11 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base5 = { 'gui': '#599cab', 'cterm': 14 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base6 = { 'gui': '#99d1ce', 'cterm': 7 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.base7 = { 'gui': '#d3ebe9', 'cterm': 15 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.blue    = { 'gui': '#195466', 'cterm': 4  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.cyan    = { 'gui': '#33859E', 'cterm': 6  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.green   = { 'gui': '#2aa889', 'cterm': 2  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.magenta = { 'gui': '#888ca6', 'cterm': 13 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.orange  = { 'gui': '#d26937', 'cterm': 9  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.red     = { 'gui': '#c23127', 'cterm': 1  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.violet  = { 'gui': '#4e5166', 'cterm': 5  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham.vim	/^let s:colors.yellow  = { 'gui': '#edb443', 'cterm': 3  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors = {}$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base0 = { 'gui': '#0c1014', 'cterm': 232 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base1 = { 'gui': '#11151c', 'cterm': 233 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base2 = { 'gui': '#091f2e', 'cterm': 17  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base3 = { 'gui': '#0a3749', 'cterm': 18  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base4 = { 'gui': '#245361', 'cterm': 24  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base5 = { 'gui': '#599cab', 'cterm': 81  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base6 = { 'gui': '#99d1ce', 'cterm': 122 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.base7 = { 'gui': '#d3ebe9', 'cterm': 194 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.blue    = { 'gui': '#195466', 'cterm': 24  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.cyan    = { 'gui': '#33859E', 'cterm': 44  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.green   = { 'gui': '#2aa889', 'cterm': 78  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.magenta = { 'gui': '#888ca6', 'cterm': 67  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.orange  = { 'gui': '#d26937', 'cterm': 166 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.red     = { 'gui': '#c23127', 'cterm': 124 }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.violet  = { 'gui': '#4e5166', 'cterm': 60  }$/;"	v
s:colors	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:colors.yellow  = { 'gui': '#edb443', 'cterm': 214 }$/;"	v
s:colors256	bundle/vim-colorschemes/colors/calmar256-light.vim	/^let s:colors256 = [$/;"	v
s:colors256	bundle/vim-colorschemes/colors/pink.vim	/^let s:colors256 = [$/;"	v
s:colors_name	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:colors_name = get(g:, 'colors_name', '')$/;"	v
s:colorscheme_list	bundle/vim-colorschemes/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:colorvim7	bundle/vim-colorschemes/colors/calmar256-light.vim	/^let s:colorvim7 = [$/;"	v
s:colorvim7	bundle/vim-colorschemes/colors/pink.vim	/^let s:colorvim7 = [$/;"	v
s:column	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^let s:column = {$/;"	v
s:column	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^let s:column = {$/;"	v
s:column	bundle/vimfiler.vim/autoload/vimfiler/columns/type.vim	/^let s:column = {$/;"	v
s:column_display	bundle/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:comment	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:comment = "8e908c"$/;"	v
s:comment	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:comment = "7285b7"$/;"	v
s:comment	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:comment = "969896"$/;"	v
s:comment	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:comment = "999999"$/;"	v
s:comment	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:comment = "969896"$/;"	v
s:comment	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:comment = "8e908c"$/;"	v
s:comment	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:comment    = s:middleDarkGrey$/;"	v
s:comment	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:comment    = s:middleLightGrey$/;"	v
s:comment	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:comment    = "#5f5f5f"$/;"	v
s:comment	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:comment    = "59"$/;"	v
s:comment	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:comment    = "15"$/;"	v
s:comment	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:comment    = "243"$/;"	v
s:comment	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:comment    = "7"    " LightGrey$/;"	v
s:comment	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:comment    = "#707880"$/;"	v
s:comment	bundle/vim-colorschemes/colors/last256.vim	/^  let s:comment    = "#585858"$/;"	v
s:comment	bundle/vim-colorschemes/colors/last256.vim	/^  let s:comment    = "240"$/;"	v
s:common_efm	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compare_lim	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:compare_lim = 3000$/;"	v
s:compare_typeinfo	bundle/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:concrete	bundle/vim-colorschemes/colors/flatui.vim	/^let s:concrete=       { "gui": "#95a5a6", "cterm": "247" }$/;"	v
s:const	bundle/vim-colorschemes/colors/elda.vim	/^let s:const = 35$/;"	v
s:constant1	bundle/vim-colorschemes/colors/phd.vim	/^let s:constant1 = '#c08040'$/;"	v
s:constant2	bundle/vim-colorschemes/colors/phd.vim	/^let s:constant2 = '#d2852b'$/;"	v
s:constant3	bundle/vim-colorschemes/colors/phd.vim	/^let s:constant3 = '#f2a54b'$/;"	v
s:contexts	bundle/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:continuation	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:continuation = { 'directory' : {}, 'file' : {} }$/;"	v
s:continuation	bundle/vim-web-indent/indent/javascript.vim	/^let s:continuation = '\\(+\\|\\\\\\)\\{1}' . s:js_line_comment . '$' $/;"	v
s:contrast	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:contrast = "normal"$/;"	v
s:contrast	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:contrast = g:lucius_contrast$/;"	v
s:contrast_bg	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:contrast_bg = "normal"$/;"	v
s:contrast_bg	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:contrast_bg = g:lucius_contrast_bg$/;"	v
s:control1	bundle/vim-colorschemes/colors/phd.vim	/^let s:control1 = '#f9f7a4'$/;"	v
s:control2	bundle/vim-colorschemes/colors/phd.vim	/^let s:control2 = '#c9b794'$/;"	v
s:control_statement	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:control_statement = '^\\s*\\(class\\|def\\|if\\|while\\|with\\|for\\|except\\)\\>'$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:converter = {$/;"	v
s:converter	bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^let s:converter = {$/;"	v
s:core_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:cpo_save	bundle/vim-colorschemes/colors/xterm16.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-web-indent/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cterm00	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm00 = "Black"$/;"	v
s:cterm01	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm01 = "18"$/;"	v
s:cterm01	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm01 = "Green"$/;"	v
s:cterm02	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm02 = "19"$/;"	v
s:cterm02	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm02 = "Yellow"$/;"	v
s:cterm03	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm03 = "DarkGray"$/;"	v
s:cterm04	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm04 = "20"$/;"	v
s:cterm04	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm04 = "Blue"$/;"	v
s:cterm05	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm05 = "Gray"$/;"	v
s:cterm06	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm06 = "21"$/;"	v
s:cterm06	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm06 = "Magenta"$/;"	v
s:cterm07	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm07 = "White"$/;"	v
s:cterm08	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm08 = "DarkRed"$/;"	v
s:cterm09	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm09 = "16"$/;"	v
s:cterm09	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm09 = "Red"$/;"	v
s:cterm0A	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm0A = "Brown"$/;"	v
s:cterm0B	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm0B = "DarkGreen"$/;"	v
s:cterm0C	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm0C = "DarkCyan"$/;"	v
s:cterm0D	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm0D = "DarkBlue"$/;"	v
s:cterm0E	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:cterm0E = "DarkMagenta"$/;"	v
s:cterm0F	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm0F = "17"$/;"	v
s:cterm0F	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^  let s:cterm0F = "Cyan"$/;"	v
s:cterm_alert	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_alert     = 88   " Modified file alert color$/;"	v
s:cterm_blue	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_blue = 67$/;"	v
s:cterm_blue	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_dark_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_dark_gray = 234$/;"	v
s:cterm_dark_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_green	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_green = 151$/;"	v
s:cterm_green	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_gui_map	bundle/vim-colorschemes/colors/detailed.vim	/^let s:cterm_gui_map = {$/;"	v
s:cterm_inactivebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivebg = 234 " Background for inactive mode$/;"	v
s:cterm_inactivefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivefg = 239 " Foreground for inactive mode$/;"	v
s:cterm_insertbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_insertbg  = 70   " Background for insert mode and file position blocks$/;"	v
s:cterm_insertfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_insertfg  = 15   " Foreground for insert mode and file position blocks$/;"	v
s:cterm_light_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_light_gray = 239$/;"	v
s:cterm_light_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_med_gray_hi	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_hi = 236$/;"	v
s:cterm_med_gray_hi	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_lo	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_none	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:cterm_none = 'NONE'$/;"	v
s:cterm_normalbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_normalbg  = 27   " Background for normal mode and file position blocks$/;"	v
s:cterm_normalfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_normalfg  = 15   " Foreground for normal mode and file position blocks$/;"	v
s:cterm_orange	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_orange = 173$/;"	v
s:cterm_orange	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_pink	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_pink = 182$/;"	v
s:cterm_pink	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_purple	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_purple = 139$/;"	v
s:cterm_purple	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_red	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:cterm_red = 131$/;"	v
s:cterm_red	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_replacebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_replacebg = 88   " Background for replace mode and file position blocks$/;"	v
s:cterm_replacefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_replacefg = 15   " Foreground for replace mode and file position blocks$/;"	v
s:cterm_termbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg    = 237  " Background for branch and file format blocks$/;"	v
s:cterm_termbg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg2   = 234  " Background for middle block$/;"	v
s:cterm_termfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg    = 144  " Foreground for branch and file format blocks$/;"	v
s:cterm_termfg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg2   = 39   " Foreground for middle block$/;"	v
s:cterm_visualbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_visualbg  = 166  " Background for visual mode and file position blocks$/;"	v
s:cterm_visualfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:cterm_visualfg  = 15   " Foreground for visual mode and file position blocks$/;"	v
s:ctype	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:ctype = has('gui_running') ? 'gui' : 'cterm'$/;"	v
s:cuicolor	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:cuicolor = {$/;"	v
s:cuicolors	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:cuicolors = {$/;"	v
s:cuicolors	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:cuicolors = {$/;"	v
s:cuiindex	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^  let s:cuiindex = 2$/;"	v
s:cuiindex	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^  let s:cuiindex = 0$/;"	v
s:cuiindex	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^  let s:cuiindex = 1$/;"	v
s:cuiindex	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^  let s:cuiindex = 2$/;"	v
s:current_bufnr	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_modified	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_tabcnt	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabnr	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^let s:current_vimfiler = {}$/;"	v
s:current_visible_buffers	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:currentfile	bundle/vim-colorschemes/colors/darkroom.vim	/^let s:currentfile=bufname(0)$/;"	v
s:cursorline	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:cursorline = ['#34495e', 0]$/;"	v
s:cursorline	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:cursorline = ['#34495e', 59]$/;"	v
s:cursorline	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:cursorline = ['#808080', 0]$/;"	v
s:cursorline	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:cursorline = ['#808080', 244]$/;"	v
s:custom_bg	bundle/vim-colorschemes/colors/seoul256-light.vim	/^let s:custom_bg = get(g:, 'seoul256_light_background', get(g:, 'seoul256_background', 253))$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:cyan = [ '#008080', 6 ]$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:cyan = '#3e999f'$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:cyan = '#8abeb7'$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:cyan = '#99ffff'$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:cyan = '#70c0b1'$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:cyan = '#009999'$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:cyan = [ '#8fbfdc', 110 ]$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:cyan = [ '#2aa198', s:cuicolors.cyan[s:cuiindex] ]$/;"	v
s:cyan	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:cyan = s:blue$/;"	v
s:cyan	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:cyan='#00aaaa'$/;"	v
s:cyan	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:cyan    = "cyan"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:cyan    = "darkcyan"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:cyan    = "37"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:cyan    = "6"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:cyan    = "00a39a"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:cyan = "#66CCCC"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:cyan            = s:dark_cyan$/;"	v
s:cyan	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:cyan            = s:light_cyan$/;"	v
s:cyan	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:cyan	bundle/vim-colorschemes/colors/twilight.vim	/^let s:cyan = '#74dad9'$/;"	v
s:d_cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_cyan = "#006666"$/;"	v
s:d_dusty_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_dusty_blue = "#535E95"$/;"	v
s:d_gray	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_gray   = "#2E3436"$/;"	v
s:d_green	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_green = "#447864"$/;"	v
s:d_orange	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_orange = "#E1593D"$/;"	v
s:d_pink	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_pink = "#D15F7A"$/;"	v
s:d_red	bundle/vim-colorschemes/colors/mdark.vim	/^let s:d_red = "#871019"$/;"	v
s:darkAccent1	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent1=s:greenSea$/;"	v
s:darkAccent1	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent1=s:turquoise$/;"	v
s:darkAccent2	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent2=s:emerald$/;"	v
s:darkAccent2	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent2=s:nephritis$/;"	v
s:darkAccent3	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent3=s:belizeHole$/;"	v
s:darkAccent3	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent3=s:peterRiver$/;"	v
s:darkAccent4	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent4=s:amethyst$/;"	v
s:darkAccent4	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent4=s:wisteria$/;"	v
s:darkAccent5	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent5=s:orange$/;"	v
s:darkAccent5	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent5=s:sunFlower$/;"	v
s:darkAccent6	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent6=s:carrot$/;"	v
s:darkAccent6	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent6=s:pumpkin$/;"	v
s:darkAccent7	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent7=s:alizarin$/;"	v
s:darkAccent7	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:darkAccent7=s:pomegranate$/;"	v
s:darkBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:darkBlue         = { "gui": "#005F87", "cterm": "24"  }$/;"	v
s:darkGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:darkGreen        = { "gui": "#5F5F00", "cterm": "58"  }$/;"	v
s:darkGrey	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:darkGrey         = { "gui": "#444444", "cterm": "238" }$/;"	v
s:darkPink	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:darkPink         = { "gui": "#63001C", "cterm": "88"  }$/;"	v
s:darkTan	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:darkTan          = { "gui": "#503D15", "cterm": "52"  }$/;"	v
s:dark_bg	bundle/vim-colorschemes/colors/seoul256.vim	/^  let s:dark_bg  = 237$/;"	v
s:dark_bg	bundle/vim-colorschemes/colors/seoul256.vim	/^  let s:dark_bg  = get(s:, 'seoul256_background', 237)$/;"	v
s:dark_bg_2	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:dark_bg_2 = s:dark_bg > 233 ? s:dark_bg - 2 : 16$/;"	v
s:dark_blue	bundle/vim-colorschemes/colors/pencil.vim	/^let s:dark_blue       = { "gui": "#008EC4", "cterm": "4"   }$/;"	v
s:dark_cyan	bundle/vim-colorschemes/colors/pencil.vim	/^let s:dark_cyan       = { "gui": "#20A5BA", "cterm": "6"   }$/;"	v
s:dark_fg	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:dark_fg = 252$/;"	v
s:dark_green	bundle/vim-colorschemes/colors/pencil.vim	/^let s:dark_green      = { "gui": "#10A778", "cterm": "2"   }$/;"	v
s:dark_grey_blue	bundle/vim-colorschemes/colors/twilight.vim	/^let s:dark_grey_blue = '#34383c'$/;"	v
s:dark_purple	bundle/vim-colorschemes/colors/pencil.vim	/^let s:dark_purple     = { "gui": "#523C79", "cterm": "5"   }$/;"	v
s:dark_red	bundle/vim-colorschemes/colors/pencil.vim	/^let s:dark_red        = { "gui": "#C30771", "cterm": "1"   }$/;"	v
s:dark_yellow	bundle/vim-colorschemes/colors/pencil.vim	/^let s:dark_yellow     = { "gui": "#A89C14", "cterm": "3"   }$/;"	v
s:darkblue	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:darkblue = "005f87"$/;"	v
s:darkblue	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkblue   = "#00005f"$/;"	v
s:darkblue	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkblue   = "17"$/;"	v
s:darkblue	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:darkblue     = "#3465a4"$/;"	v
s:darkblue	bundle/vim-colorschemes/colors/phd.vim	/^let s:darkblue = '#32698f'$/;"	v
s:darkcolumn	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:darkcolumn = "#808080"$/;"	v
s:darkcolumn	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:darkcolumn = "244"$/;"	v
s:darkcolumn	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkcolumn = "#1c1c1c"$/;"	v
s:darkcolumn	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkcolumn = "234"$/;"	v
s:darkcolumn	bundle/vim-colorschemes/colors/last256.vim	/^  let s:darkcolumn = "#1c1c1c"$/;"	v
s:darkcolumn	bundle/vim-colorschemes/colors/last256.vim	/^  let s:darkcolumn = "234"$/;"	v
s:darkcyan	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkcyan   = "#005f5f"$/;"	v
s:darkcyan	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkcyan   = "24"$/;"	v
s:darkcyan	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:darkcyan     = "#06989a"$/;"	v
s:darker_blue	bundle/vim-colorschemes/colors/pencil.vim	/^let s:darker_blue     = { "gui": "#005F87", "cterm": "18"  }$/;"	v
s:darkgreen	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:darkgreen = "008700"$/;"	v
s:darkgreen	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:darkgreen    = "#4e9a06"$/;"	v
s:darkgreen	bundle/vim-colorschemes/colors/phd.vim	/^let s:darkgreen = '#80a050'$/;"	v
s:darkgrey	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:darkgrey     = "#555753"$/;"	v
s:darkgrey	bundle/vim-colorschemes/colors/twilight.vim	/^let s:darkgrey = '#1a1a1a'$/;"	v
s:darkgreys	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:darkgreys = [['#080808',232],['#121212',233],["#1c1c1c",234],['#262626',235],["#303030",236],["#3a3a3a",237],["#444444",238],["#4e4e4e",239]]$/;"	v
s:darkmagenta	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:darkmagenta  = "#75507b"$/;"	v
s:darkpurple	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkpurple = "#5f005f"$/;"	v
s:darkpurple	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkpurple = "53"$/;"	v
s:darkred	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkred    = "#5f0000"$/;"	v
s:darkred	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:darkred    = "52"$/;"	v
s:darkred	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:darkred      = "#cc0000"$/;"	v
s:debug	bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:default_checks	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing']$/;"	v
s:default_comment_string	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:default_comment_string = s:DefaultValue('commentstring')$/;"	v
s:default_comments	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:default_comments       = s:DefaultValue('comments')$/;"	v
s:default_completeopt	bundle/jedi-vim/plugin/jedi.vim	/^    let s:default_completeopt=&completeopt$/;"	v
s:default_converters	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:default_converters = ['converter_nothing']$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_matchers	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:default_matchers = ['matcher_context']$/;"	v
s:default_settings	bundle/jedi-vim/autoload/jedi.vim	/^let s:default_settings = {$/;"	v
s:default_sorters	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:default_sorters = ['sorter_nothing']$/;"	v
s:defaults_list	bundle/vim-colorschemes/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:definitions	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:definitions = {}$/;"	v
s:delbg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:delbg      = "#ffd7d7"$/;"	v
s:delbg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:delbg      = "224"$/;"	v
s:deprecations	bundle/jedi-vim/autoload/jedi.vim	/^let s:deprecations = {$/;"	v
s:dg_dusty_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:dg_dusty_blue = "#406371"$/;"	v
s:diff	bundle/vim-colorschemes/colors/elda.vim	/^let s:diff = 202$/;"	v
s:diff_bg	bundle/vim-colorschemes/colors/elda.vim	/^let s:diff_bg = 233$/;"	v
s:dimmed	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:dimmed     = s:middleDarkGrey$/;"	v
s:dimmed	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:dimmed     = s:middleLightGrey$/;"	v
s:dir_for_worktree	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dircounts	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:directory_stack	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:directory_stack = []$/;"	v
s:dummy_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:dusty_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:dusty_blue = "#7993BD"$/;"	v
s:e	bundle/jedi-vim/after/syntax/python.vim	/^    let s:e = g:jedi#call_signature_escape$/;"	v
s:emerald	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:emerald = ['#2ECC71', 2] " green$/;"	v
s:emerald	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:emerald = ['#2ECC71', 41] " green$/;"	v
s:emerald	bundle/vim-colorschemes/colors/flatui.vim	/^let s:emerald=        { "gui": "#2ecc71", "cterm": "41" }$/;"	v
s:enable_italic	bundle/vim-colorschemes/colors/jellyx.vim	/^let s:enable_italic = exists('g:jellyx_italic') ? g:jellyx_italic == 1 : 1$/;"	v
s:enabled	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:excludes	bundle/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^let s:excludes = get(g:, 'airline#extensions#tabline#excludes', [])$/;"	v
s:exists_unite_version	bundle/vimfiler.vim/autoload/vimfiler.vim	/^  let s:exists_unite_version = unite#version()$/;"	v
s:exit_code	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:expand_bufnr	bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:ext	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:faint	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faint      = s:almostBlack$/;"	v
s:faint	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faint      = s:almostWhite$/;"	v
s:faintBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faintBlue  = s:darkBlue$/;"	v
s:faintBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faintBlue  = s:lightBlue$/;"	v
s:faintGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faintGreen = s:darkGreen$/;"	v
s:faintGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faintGreen = s:lightGreen$/;"	v
s:faintRed	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faintRed   = s:darkPink$/;"	v
s:faintRed	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:faintRed   = s:lightPink$/;"	v
s:fg	bundle/vim-colorschemes/colors/elda.vim	/^let s:fg = 38$/;"	v
s:fg	bundle/vim-colorschemes/colors/mdark.vim	/^let s:fg = "#BABDB6"$/;"	v
s:fg_pdef	bundle/vim-colorschemes/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	bundle/vim-colorschemes/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	bundle/vim-colorschemes/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:ficounts	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:file_bookmark_action	bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:file_bookmark_action = {$/;"	v
s:file_icon	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let s:file_icon = vimfiler#util#escape_pattern($/;"	v
s:filecounts	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:filetype_overrides	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:first_completion	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:first_completion = 0$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:first_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:flags	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:fmod	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fmod = get(g:, 'airline#extensions#tabline#fnamemod', ':~:.')$/;"	v
s:fnamecollapse	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnametruncate	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnametruncate = get(g:, 'airline#extensions#tabline#fnametruncate', 0)$/;"	v
s:foreground	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:foreground = "4d4d4c"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:foreground = "ffffff"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:foreground = "eaeaea"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:foreground = "cccccc"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:foreground = "c5c8c6"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:foreground = "4d4d4c"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:foreground = "#000000"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:foreground = "16"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:foreground = "15"   " White$/;"	v
s:foreground	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:foreground = "250"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:foreground = "7"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:foreground = "#c5c8c6"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/last256.vim	/^  let s:foreground = "#808080"$/;"	v
s:foreground	bundle/vim-colorschemes/colors/last256.vim	/^  let s:foreground = "244"$/;"	v
s:formatter	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:formatter = get(g:, 'airline#extensions#tabline#formatter', 'default')$/;"	v
s:fpats	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:full	bundle/jedi-vim/after/syntax/python.vim	/^    let s:full = s:e.'jedi=.\\{-}'.s:e.'.\\{-}'.s:e.'jedi'.s:e$/;"	v
s:func	bundle/vim-colorschemes/colors/elda.vim	/^let s:func = 33$/;"	v
s:func	bundle/vim-colorschemes/colors/phd.vim	/^let s:func = '#96b2cc'$/;"	v
s:g_cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:g_cyan = "#B6E3FF"$/;"	v
s:g_green	bundle/vim-colorschemes/colors/mdark.vim	/^let s:g_green = "#406A5C"$/;"	v
s:g_lavender	bundle/vim-colorschemes/colors/mdark.vim	/^let s:g_lavender = "#363243"$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.aqua   = ['427b58', 14]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.aqua   = ['8ec07c', 14]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.blue   = ['076678', 12]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.blue   = ['83a598', 12]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.dark0  = ['1d2021', 234]     " 29-32-33$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.dark0  = ['282828', 0]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.dark0  = ['32302f', 236]     " 50-48-47$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.dark0  = ['f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.dark0  = ['f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.dark0  = ['fbf1c7', 0]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.green  = ['79740e', 10]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.green  = ['b8bb26', 10]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.light1 = ['3c3836', 15]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.light1 = ['ebdbb2', 15]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.light4 = ['7c6f64', 7]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.light4 = ['a89984', 7]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.medium = ['928374', 8]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.purple = ['8f3f71', 13]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.purple = ['d3869b', 13]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.red    = ['9d0006', 9]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.red    = ['fb4934', 9]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.yellow = ['b57614', 11]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^		let s:gb.yellow = ['fabd2f', 11]$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.aqua   = ['427b58', 66]      " 66-123-88$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.aqua   = ['8ec07c', 108]     " 142-192-124$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.blue   = ['076678', 24]      " 7-102-120$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.blue   = ['83a598', 109]     " 131-165-152$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark0  = ['282828', 235]     " 40-40-40$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark0  = ['fbf1c7', 229]     " 251-241-199$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark1  = ['3c3836', 237]     " 60-56-54$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark1  = ['ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark2  = ['504945', 239]     " 80-73-69$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark2  = ['d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark3  = ['665c54', 241]     " 102-92-84$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark3  = ['bdae93', 248]     " 189-174-147$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark4  = ['7c6f64', 243]     " 124-111-100$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.dark4  = ['a89984', 246]     " 168-153-132$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.green  = ['79740e', 100]     " 121-116-14$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.green  = ['b8bb26', 142]     " 184-187-38$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light0 = ['282828', 235]     " 40-40-40$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light0 = ['fdf4c1', 229]     " 253-244-193$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light1 = ['3c3836', 237]     " 60-56-54$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light1 = ['ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light2 = ['504945', 239]     " 80-73-69$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light2 = ['d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light3 = ['665c54', 241]     " 102-92-84$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light3 = ['bdae93', 248]     " 189-174-147$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light4 = ['7c6f64', 243]     " 124-111-100$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light4 = ['a89984', 246]     " 168-153-132$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light4_256 = ['7c6f64', 243] " 124-111-100$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.light4_256 = ['a89984', 246] " 168-153-132$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.medium = ['928374', 244]     " 146-131-116$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.medium = ['928374', 245]     " 146-131-116$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.orange = ['af3a03', 130]     " 175-58-3$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.orange = ['fe8019', 208]     " 254-128-25$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.purple = ['8f3f71', 96]      " 143-63-113$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.purple = ['d3869b', 175]     " 211-134-155$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.red    = ['9d0006', 88]      " 157-0-6$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.red    = ['fb4934', 167]     " 251-73-52$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.yellow = ['b57614', 136]     " 181-118-20$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^	let s:gb.yellow = ['fabd2f', 214]     " 250-189-47$/;"	v
s:gb	bundle/vim-colorschemes/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:ghc_mod_new	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:git_dirs	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:git_dirs = {}$/;"	v
s:git_versions	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:glbs	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:globpath_third_arg	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:glsl_extensions	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:gold	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:gold = ['#F1C40F', 3]$/;"	v
s:gold	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:gold = ['#FFD700', 220]$/;"	v
s:gold	bundle/vim-colorschemes/colors/saturn.vim	/^let s:gold =             [s:hsl2color(50,  90, 85), 221]$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:green = [ '#008000', 2 ]$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:green = '#718c00'$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:green = '#b5bd68'$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:green = '#d1f1a9'$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:green = '#b9ca4a'$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:green = '#99cc99'$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:green = [ '#99ad6a', 107 ]$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:green = [ '#859900', s:cuicolors.green[s:cuiindex] ]$/;"	v
s:green	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:green = [ '#95e454', 119 ]$/;"	v
s:green	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:green = "718c00"$/;"	v
s:green	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:green = "d1f1a9"$/;"	v
s:green	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:green = "b9ca4a"$/;"	v
s:green	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:green = "99cc99"$/;"	v
s:green	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:green = "b5bd68"$/;"	v
s:green	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:green = "718c00"$/;"	v
s:green	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:green='#00aa00'$/;"	v
s:green	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:green   = "darkgreen"$/;"	v
s:green	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:green   = "green"$/;"	v
s:green	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:green   = "2"$/;"	v
s:green	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:green   = "28"$/;"	v
s:green	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:green   = "009e3c"$/;"	v
s:green	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:green      = "#005f00"$/;"	v
s:green	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:green      = "22"$/;"	v
s:green	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:green      = "10"   " LightGreen$/;"	v
s:green	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:green      = "143"$/;"	v
s:green	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:green      = "2"$/;"	v
s:green	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:green      = "#b5bd68"$/;"	v
s:green	bundle/vim-colorschemes/colors/last256.vim	/^  let s:green      = "#5faf5f"$/;"	v
s:green	bundle/vim-colorschemes/colors/last256.vim	/^  let s:green      = "71"$/;"	v
s:green	bundle/vim-colorschemes/colors/mdark.vim	/^let s:green = "#66CC66"$/;"	v
s:green	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:green           = s:dark_green$/;"	v
s:green	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:green           = s:light_green$/;"	v
s:green	bundle/vim-colorschemes/colors/phd.vim	/^let s:green = '#99bf52'$/;"	v
s:green	bundle/vim-colorschemes/colors/saturn.vim	/^let s:green =            [s:hsl2color(90,  30, 65), 107]$/;"	v
s:green	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:green	bundle/vim-colorschemes/colors/twilight.vim	/^let s:green = '#a2a96f'$/;"	v
s:greenSea	bundle/vim-colorschemes/colors/flatui.vim	/^let s:greenSea=       { "gui": "#16a085", "cterm": "29" }$/;"	v
s:grep_available	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:grep_available = executable('grep')$/;"	v
s:grep_command	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^    let s:grep_command .= ' --color=never'$/;"	v
s:grep_command	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command .= ' -e '.gitgutter#utility#shellescape('^@@ ')$/;"	v
s:grep_command	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_command = ' | '.(g:gitgutter_escape_grep ? '\\grep' : 'grep')$/;"	v
s:grep_help	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^  let s:grep_help = gitgutter#utility#system('grep --help')$/;"	v
s:grey	bundle/vim-colorschemes/colors/phd.vim	/^let s:grey = '#808080'$/;"	v
s:grey	bundle/vim-colorschemes/colors/saturn.vim	/^let s:grey =             [s:hsl2color(220, 10, 70), 244]$/;"	v
s:grey	bundle/vim-colorschemes/colors/twilight.vim	/^let s:grey = '#303030'$/;"	v
s:grey_blue	bundle/vim-colorschemes/colors/twilight.vim	/^let s:grey_blue = '#8a9597'$/;"	v
s:grey_dark	bundle/vim-colorschemes/colors/saturn.vim	/^let s:grey_dark =        [s:hsl2color(220, 10, 55), 242]$/;"	v
s:grey_light	bundle/vim-colorschemes/colors/saturn.vim	/^let s:grey_light =       [s:hsl2color(220, 20, 90), 252]$/;"	v
s:grey_very_dark	bundle/vim-colorschemes/colors/saturn.vim	/^let s:grey_very_dark =   [s:hsl2color(220, 10, 45), 239]$/;"	v
s:grey_very_light	bundle/vim-colorschemes/colors/saturn.vim	/^let s:grey_very_light =  [s:hsl2color(220, 30, 97), 255]$/;"	v
s:greyed	bundle/vim-colorschemes/colors/phd.vim	/^let s:greyed = '#687898'$/;"	v
s:greys	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:greys = [['#BEBEBE', 250], ['#808080', 244], ['#696969', 242], ['#545454', 240], ['#343434', 236], ['#080808', 232]]$/;"	v
s:gui	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:gui = has('gui_running')$/;"	v
s:gui00	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui00 = "20201d"$/;"	v
s:gui01	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui01 = "292824"$/;"	v
s:gui02	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui02 = "6e6b5e"$/;"	v
s:gui03	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui03 = "7d7a68"$/;"	v
s:gui04	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui04 = "999580"$/;"	v
s:gui05	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui05 = "a6a28c"$/;"	v
s:gui06	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui06 = "e8e4cf"$/;"	v
s:gui07	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui07 = "fefbec"$/;"	v
s:gui08	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui08 = "d73737"$/;"	v
s:gui09	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui09 = "b65611"$/;"	v
s:gui0A	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui0A = "cfb017"$/;"	v
s:gui0B	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui0B = "60ac39"$/;"	v
s:gui0C	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui0C = "1fad83"$/;"	v
s:gui0D	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui0D = "6684e1"$/;"	v
s:gui0E	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui0E = "b854d4"$/;"	v
s:gui0F	bundle/vim-colorschemes/colors/base16-atelierdune.vim	/^let s:gui0F = "d43552"$/;"	v
s:gui_alert	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_alert       = '#870000'$/;"	v
s:gui_blue	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_blue = '#6a9fb5'$/;"	v
s:gui_blue	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_dark_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_dark_gray = '#202020'$/;"	v
s:gui_dark_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_green	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_green = '#99cc99'$/;"	v
s:gui_green	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_inactivebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:gui_inactivefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:gui_insertbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_insertbg    = '#87AF5F'$/;"	v
s:gui_insertfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:gui_light_gray	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_light_gray = '#505050'$/;"	v
s:gui_light_gray	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_med_gray_hi	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_hi = '#303030'$/;"	v
s:gui_med_gray_hi	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_lo	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_none	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:gui_none = 'NONE'$/;"	v
s:gui_normalbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_normalbg    = '#5F87FF'$/;"	v
s:gui_normalfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:gui_orange	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_orange = '#d28445'$/;"	v
s:gui_orange	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_pink	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_purple	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_purple = '#aa759f'$/;"	v
s:gui_purple	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_red	bundle/vim-airline/autoload/airline/themes/base16.vim	/^  let s:gui_red = '#ac4142'$/;"	v
s:gui_red	bundle/vim-airline/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_replacebg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_replacebg   = '#870000'$/;"	v
s:gui_replacefg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:gui_termbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termbg      = '#5F5F5F'$/;"	v
s:gui_termbg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:gui_termfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:gui_termfg2	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_termfg2     = '#F5F5F5'$/;"	v
s:gui_visualbg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_visualbg    = '#ff8c00'$/;"	v
s:gui_visualfg	bundle/vim-airline/autoload/airline/themes/murmur.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:guibg	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:guicolor	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:guicolor = {$/;"	v
s:guisep	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:gutter	bundle/vim-colorschemes/colors/badwolf.vim	/^    let s:gutter = 'blackestgravel'$/;"	v
s:gutter	bundle/vim-colorschemes/colors/badwolf.vim	/^    let s:gutter = 'blackgravel'$/;"	v
s:h	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:h = s:c3$/;"	v
s:has_fugitive	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_fugitive = exists('*fugitive#head')$/;"	v
s:has_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_lawrencium	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_lawrencium = exists('*lawrencium#statusline')$/;"	v
s:has_maven	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:has_vcscommand	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:has_vcscommand = get(g:, 'airline#extensions#branch#use_vcscommand', 0) && exists('*VCSCommandGetStatusLine')$/;"	v
s:hash_colors	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:head_a	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:head_a         = s:dark_blue$/;"	v
s:head_a	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:head_a         = s:norm$/;"	v
s:head_b	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:head_b         = s:blue$/;"	v
s:head_b	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:head_b         = s:norm$/;"	v
s:head_c	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:head_c         = s:dark_cyan$/;"	v
s:head_c	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:head_c         = s:norm$/;"	v
s:head_format	bundle/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:hex	bundle/vim-colorschemes/colors/xterm16.vim	/^let s:hex = '0123456789abcdef'$/;"	v
s:hlgrps	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:htmlTagNameBg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:htmlTagNameBg = s:NormalBg $/;"	v
s:htmlTagNameFg	bundle/vim-colorschemes/colors/otaku.vim	/^let s:htmlTagNameFg = '#6c5ebf'$/;"	v
s:hunk_re	bundle/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunk_symbols	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:hunks	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:hunks = []$/;"	v
s:i	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:i      = ",italic"$/;"	v
s:i	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:i      = ",italic"$/;"	v
s:i	bundle/vim-colorschemes/colors/last256.vim	/^let s:i      = ",italic"$/;"	v
s:i	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:i	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:i = s:i + 1$/;"	v
s:i	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:i = 1$/;"	v
s:icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:ignore	bundle/jedi-vim/after/syntax/python.vim	/^    let s:ignore = s:e.'jedi.\\{-}'.s:e$/;"	v
s:ignore_opt	bundle/vim-colorschemes/colors/marklar.vim	/^    let s:ignore_opt = 1$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:inactive_funcrefs	bundle/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:indent_algo	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:indent_algo = get(g:, 'airline#extensions#whitespace#mixed_indent_algo', 0)$/;"	v
s:is_cygwin	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dark	bundle/vim-colorschemes/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_mac	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win32term	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) && !has('gui_running') && (empty($CONEMUBUILD) || &term !=? 'xterm')$/;"	v
s:is_windows	bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	bundle/unite.vim/autoload/unite/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:italic	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:italic= ""$/;"	v
s:italic	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:italic= ",italic"$/;"	v
s:job_info	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:job_info = {}$/;"	v
s:js_end_line_comment	bundle/vim-web-indent/indent/javascript.vim	/^let s:js_end_line_comment = s:js_mid_line_comment . '\\s*\\(\/\/.*\\)*'$/;"	v
s:js_line_comment	bundle/vim-web-indent/indent/javascript.vim	/^let s:js_line_comment = s:js_end_line_comment$/;"	v
s:js_mid_line_comment	bundle/vim-web-indent/indent/javascript.vim	/^let s:js_mid_line_comment = '\\s*\\(\\\/\\*.*\\*\\\/\\)*\\s*'$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.fdelete = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.goto = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.unload = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.wipeout = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.cd = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.lcd = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.narrow = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.project_cd = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_cd = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_lcd = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimfiler = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimshell = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimfiler = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimshell = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec'] =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec\/async'] =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent'] =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent\/async'] =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project'] =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project\/async'] =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.append = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.echo = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.ex = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert_directory = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.nop = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank_escape = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/directory.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.backup = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.diff = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.dirdiff = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.exrename = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.find = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.grep = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.mkdir = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.read = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.vimgrep = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.wunix = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.copy = deepcopy(s:kind.action_table.vimfiler__copy)$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.copy.is_listed = 1$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.move =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.move.is_listed = 1$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.unite__new_candidate =$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__copy = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__delete = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__execute = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__external_filer = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__mkdir = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__move = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__newfile = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__rename = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__shell = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__shellcmd = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__write = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.above = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.below = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.choose = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.left = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.persist_open = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.right = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.split = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.splitswitch = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.switch = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabopen = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabsplit = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabswitch = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplit = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplitswitch = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.action_table.rename = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.parents = ['cdable']$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.unite__new_candidate = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.only = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	bundle/unite.vim/autoload/unite/kinds/word.vim	/^let s:kind = {$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:kprange	bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:l	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:l = s:c1$/;"	v
s:l_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_blue = "#848FB1"$/;"	v
s:l_cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_cyan = "#99CCCC"$/;"	v
s:l_dusty_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_dusty_blue = "#729FCF"$/;"	v
s:l_green	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_green = "#8BA692"$/;"	v
s:l_lavender	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_lavender = "#ADA5CB"$/;"	v
s:l_orange	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_orange = "#FCAF3E"$/;"	v
s:l_pink	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_pink = "#D4A0A0"$/;"	v
s:l_purple	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_purple = "#CB9DCD"$/;"	v
s:l_red	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_red = "#FB4453"$/;"	v
s:l_yellow	bundle/vim-colorschemes/colors/mdark.vim	/^let s:l_yellow = "#FFFF82"$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:lavender	bundle/vim-colorschemes/colors/mdark.vim	/^let s:lavender = "#9B8BD4"$/;"	v
s:layout	bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:lazycat_list	bundle/vim-colorschemes/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:leaf_icon	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let s:leaf_icon = vimfiler#util#escape_pattern($/;"	v
s:lg_dusty_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:lg_dusty_blue = "#8389A3"$/;"	v
s:light	bundle/vim-colorschemes/colors/seoul256-light.vim	/^let s:light     = s:custom_bg >= 252 && s:custom_bg <= 256$/;"	v
s:lightAccent1	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent1=s:greenSea$/;"	v
s:lightAccent1	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent1=s:turquoise$/;"	v
s:lightAccent2	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent2=s:emerald$/;"	v
s:lightAccent2	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent2=s:nephritis$/;"	v
s:lightAccent3	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent3=s:belizeHole$/;"	v
s:lightAccent3	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent3=s:peterRiver$/;"	v
s:lightAccent4	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent4=s:amethyst$/;"	v
s:lightAccent4	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent4=s:wisteria$/;"	v
s:lightAccent5	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent5=s:orange$/;"	v
s:lightAccent5	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent5=s:sunFlower$/;"	v
s:lightAccent6	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent6=s:carrot$/;"	v
s:lightAccent6	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent6=s:pumpkin$/;"	v
s:lightAccent7	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent7=s:alizarin$/;"	v
s:lightAccent7	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightAccent7=s:pomegranate$/;"	v
s:lightBg	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightBg=s:silver$/;"	v
s:lightBg	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightBg=s:wetAsphalt$/;"	v
s:lightBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:lightBlue        = { "gui": "#CBE4EE", "cterm": "195" }$/;"	v
s:lightGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:lightGreen       = { "gui": "#BBFFAA", "cterm": "157" }$/;"	v
s:lightGrey	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:lightGrey        = { "gui": "#BBBBBB", "cterm": "249" }$/;"	v
s:lightNorm	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightNorm=s:silver$/;"	v
s:lightNorm	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:lightNorm=s:wetAsphalt$/;"	v
s:lightPink	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:lightPink        = { "gui": "#FFAFAF", "cterm": "217" }$/;"	v
s:lightTan	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:lightTan         = { "gui": "#ECE1C8", "cterm": "230" }$/;"	v
s:light_bg	bundle/vim-colorschemes/colors/seoul256.vim	/^  let s:light_bg = 253$/;"	v
s:light_bg	bundle/vim-colorschemes/colors/seoul256.vim	/^  let s:light_bg = get(s:, 'seoul256_background', 253)$/;"	v
s:light_bg_1	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:light_bg_1 = min([s:light_bg + 1, 256])$/;"	v
s:light_bg_2	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:light_bg_2 = min([s:light_bg + 2, 256])$/;"	v
s:light_black	bundle/vim-colorschemes/colors/pencil.vim	/^let s:light_black     = { "gui": "#424242", "cterm": "8"   }$/;"	v
s:light_blue	bundle/vim-colorschemes/colors/pencil.vim	/^let s:light_blue      = { "gui": "#b6d6fd", "cterm": "153" }$/;"	v
s:light_cyan	bundle/vim-colorschemes/colors/pencil.vim	/^let s:light_cyan      = { "gui": "#4FB8CC", "cterm": "14"  }$/;"	v
s:light_fg	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:light_fg = 239$/;"	v
s:light_gray	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:light_gray    = { "gui": "#B2B2B2", "cterm": "249" }$/;"	v
s:light_gray	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:light_gray    = { "gui": "#D9D9D9", "cterm": "253" }$/;"	v
s:light_green	bundle/vim-colorschemes/colors/pencil.vim	/^let s:light_green     = { "gui": "#5FD7A7", "cterm": "10"  }$/;"	v
s:light_grey_blue	bundle/vim-colorschemes/colors/twilight.vim	/^let s:light_grey_blue = '#a0a8b0'$/;"	v
s:light_orange	bundle/vim-colorschemes/colors/phd.vim	/^let s:light_orange = '#fbd461'$/;"	v
s:light_orange	bundle/vim-colorschemes/colors/twilight.vim	/^let s:light_orange = '#ebc471'$/;"	v
s:light_purple	bundle/vim-colorschemes/colors/pencil.vim	/^let s:light_purple    = { "gui": "#6855DE", "cterm": "13"  }$/;"	v
s:light_red	bundle/vim-colorschemes/colors/pencil.vim	/^let s:light_red       = { "gui": "#E32791", "cterm": "1"   }$/;"	v
s:light_var_found	bundle/vim-colorschemes/colors/seoul256-light.vim	/^let s:light_var_found = exists('g:seoul256_light_background')$/;"	v
s:light_violet	bundle/vim-colorschemes/colors/phd.vim	/^let s:light_violet = '#a989ac'$/;"	v
s:lightblue	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:lightblue    = "#729fcf"$/;"	v
s:lightblue	bundle/vim-colorschemes/colors/phd.vim	/^let s:lightblue = '#72b9bf'$/;"	v
s:lightcyan	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:lightcyan    = "#34e2e2"$/;"	v
s:lighter_black	bundle/vim-colorschemes/colors/pencil.vim	/^let s:lighter_black   = { "gui": "#545454", "cterm": "240" }$/;"	v
s:lighter_gray	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:lighter_gray  = { "gui": "#C6C6C6", "cterm": "251" }$/;"	v
s:lighter_gray	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:lighter_gray  = { "gui": "#E5E6E6", "cterm": "254" }$/;"	v
s:lightgreen	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:lightgreen   = "#8ae234"$/;"	v
s:lightgreen	bundle/vim-colorschemes/colors/phd.vim	/^let s:lightgreen = '#e2e9af'$/;"	v
s:lightgreen	bundle/vim-colorschemes/colors/twilight.vim	/^let s:lightgreen = '#c2c98f'$/;"	v
s:lightgrey	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:lightgrey    = "#d3d7cf"$/;"	v
s:lightgrey	bundle/vim-colorschemes/colors/twilight.vim	/^let s:lightgrey = '#605958'$/;"	v
s:lightmagenta	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:lightmagenta = "#ad7fa8"$/;"	v
s:lightred	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:lightred     = "#ef2929"$/;"	v
s:line	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:line = "efefef"$/;"	v
s:line	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:line = "00346e"$/;"	v
s:line	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:line = "2a2a2a"$/;"	v
s:line	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:line = "393939"$/;"	v
s:line	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	let s:line = "3a3a3a"$/;"	v
s:line	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:line = "282a2e"$/;"	v
s:line	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:line = "efefef"$/;"	v
s:line	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:line       = "#d0d0d0"$/;"	v
s:line	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:line       = "252"$/;"	v
s:line	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:line       = "0"    " Black$/;"	v
s:line	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:line       = "0"$/;"	v
s:line	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:line       = "235"$/;"	v
s:line	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:line       = "#282a2e"$/;"	v
s:line	bundle/vim-colorschemes/colors/last256.vim	/^  let s:line       = "#204444"$/;"	v
s:line	bundle/vim-colorschemes/colors/last256.vim	/^  let s:line       = "236"$/;"	v
s:line_col	bundle/vim-colorschemes/colors/mdark.vim	/^let s:line_col = "#283033"$/;"	v
s:line_nr	bundle/vim-colorschemes/colors/mdark.vim	/^let s:line_nr = "#49646A"$/;"	v
s:linenr_background	bundle/vim-colorschemes/colors/gotham.vim	/^let s:linenr_background = 'base1'$/;"	v
s:linenr_background	bundle/vim-colorschemes/colors/gotham256.vim	/^let s:linenr_background = 'base1'$/;"	v
s:loaded	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:loaded = {}$/;"	v
s:loaded	bundle/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^let s:loaded = {}$/;"	v
s:loaded_columns	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let s:loaded_columns = {}$/;"	v
s:low_color	bundle/vim-colorschemes/colors/candyman.vim	/^let s:low_color = 0$/;"	v
s:low_color	bundle/vim-colorschemes/colors/candyman.vim	/^let s:low_color = 1$/;"	v
s:low_color	bundle/vim-colorschemes/colors/jelleybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	bundle/vim-colorschemes/colors/jelleybeans.vim	/^  let s:low_color = 1$/;"	v
s:low_color	bundle/vim-colorschemes/colors/jellybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	bundle/vim-colorschemes/colors/jellybeans.vim	/^  let s:low_color = 1$/;"	v
s:lower	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:lower = s:upper$/;"	v
s:lower	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:lower	= "00"$/;"	v
s:m	bundle/vim-colorschemes/colors/xterm16.vim	/^    let s:m = s:c2$/;"	v
s:m_cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:m_cyan = "#579CAD"$/;"	v
s:m_gray	bundle/vim-colorschemes/colors/mdark.vim	/^let s:m_gray   = "#888A85"$/;"	v
s:macro	bundle/vim-colorschemes/colors/elda.vim	/^let s:macro = 29$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:magenta = [ '#800080', 5 ]$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:magenta = '#8959a8'$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:magenta = '#b294bb'$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:magenta = '#ebbbff'$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:magenta = '#c397d8'$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:magenta = '#cc99cc'$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:magenta = [ '#f0a0c0', 217 ]$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:magenta = [ '#d33682', s:cuicolors.magenta[s:cuiindex] ]$/;"	v
s:magenta	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:magenta = [ '#f2c68a', 216 ]$/;"	v
s:magenta	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:magenta='#aa00aa'$/;"	v
s:magenta	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:magenta = "darkmagenta"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:magenta = "magenta"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:magenta = "170"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:magenta = "5"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:magenta = "d74bb9"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/mdark.vim	/^let s:magenta = "#FF00FF"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:manager	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let s:manager = vimfiler#util#get_vital().import('Vim.Buffer')$/;"	v
s:marked_file_icon	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let s:marked_file_icon = vimfiler#util#escape_pattern($/;"	v
s:master	bundle/vim-colorschemes/colors/seoul256-light.vim	/^let s:master    = get(split(globpath(&rtp, 'colors\/seoul256.vim'), '\\n'), 0, '')$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/vimfiler.vim/autoload/unite/filters/matcher_vimfiler_mask.vim	/^let s:matcher = {$/;"	v
s:max_lines	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:max_lines = get(g:, 'airline#extensions#whitespace#max_lines', 20000)$/;"	v
s:maxoff	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:maxoff = 50$/;"	v
s:medium_gray	bundle/vim-colorschemes/colors/pencil.vim	/^let s:medium_gray     = { "gui": "#767676", "cterm": "243" }$/;"	v
s:menu_char_prefix	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:mid_grey_blue	bundle/vim-colorschemes/colors/twilight.vim	/^let s:mid_grey_blue = '#64686c'$/;"	v
s:middleDarkBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleDarkBlue   = { "gui": "#538192", "cterm": "24"  }$/;"	v
s:middleDarkGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleDarkGreen  = { "gui": "#739200", "cterm": "64"  }$/;"	v
s:middleDarkGrey	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleDarkGrey   = { "gui": "#777777", "cterm": "241" }$/;"	v
s:middleDarkPink	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleDarkPink   = { "gui": "#FF0055", "cterm": "197" }$/;"	v
s:middleLightBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleLightBlue  = { "gui": "#9FD3E6", "cterm": "116" }$/;"	v
s:middleLightGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleLightGreen = { "gui": "#B1D631", "cterm": "149" }$/;"	v
s:middleLightGrey	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleLightGrey  = { "gui": "#999999", "cterm": "246" }$/;"	v
s:middleLightPink	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:middleLightPink  = { "gui": "#D65E76", "cterm": "167" }$/;"	v
s:midnightBlue	bundle/vim-colorschemes/colors/flatui.vim	/^let s:midnightBlue=   { "gui": "#2c3e50", "cterm": "236"  }$/;"	v
s:mixed_indent_format	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:mixed_indent_format = get(g:, 'airline#extensions#whitespace#mixed_indent_format', 'mixed-indent[%s]')$/;"	v
s:mode	bundle/lightline.vim/autoload/lightline.vim	/^let s:mode = ''$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:molokai_original	bundle/vim-colorschemes/colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	bundle/vim-colorschemes/colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:molokai_original	bundle/vim-colorschemes/colors/monokain.vim	/^	let s:molokai_original = 0$/;"	v
s:molokai_original	bundle/vim-colorschemes/colors/monokain.vim	/^	let s:molokai_original = g:molokai_original$/;"	v
s:moria_fontface	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_fontface = "plain"$/;"	v
s:moria_fontface	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_fontface = g:moria_fontface$/;"	v
s:moria_monochrome	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_monochrome = 0$/;"	v
s:moria_monochrome	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_monochrome = g:moria_monochrome$/;"	v
s:moria_style	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_style = &background $/;"	v
s:moria_style	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_style = &background$/;"	v
s:moria_style	bundle/vim-colorschemes/colors/moria.vim	/^    let s:moria_style = g:moria_style$/;"	v
s:moss	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:moss = ['#004225', 22] "dark green$/;"	v
s:moss	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:moss = ['#27ae60', 10] "dark green$/;"	v
s:mustard	bundle/vim-colorschemes/colors/mdark.vim	/^let s:mustard = "#996633"$/;"	v
s:n	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:n      = "NONE"$/;"	v
s:n	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:n      = "NONE"$/;"	v
s:n	bundle/vim-colorschemes/colors/last256.vim	/^let s:n      = "NONE"$/;"	v
s:n	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:nearby_disabled	bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:nefertiti_brightness_level_max	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_brightness_level_max = len(s:nefertiti_brightness_levels) - 1$/;"	v
s:nefertiti_brightness_level_min	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_brightness_level_min = 0$/;"	v
s:nefertiti_brightness_levels	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_brightness_levels = range(-96, 96, 8)$/;"	v
s:nefertiti_default_brightness_level	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_default_brightness_level = index(s:nefertiti_brightness_levels, 0)$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors = {}$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Boolean"]           = [ [0xff, 0x98, 0x00], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Comment"]           = [ [0x70, 0x70, 0x70], [], "gui=italic" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Constant"]          = [ [0xff, 0x98, 0x00], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Folded"]            = [ [0x88, 0x80, 0x78], [0x3c, 0x34, 0x34], "gui=italic" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Function"]          = [ [0xdd, 0xcc, 0xa8], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Identifier"]        = [ [0x99, 0x88, 0x77], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Keyword"]           = [ [0x90, 0x9a, 0x9f], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["NonText"]           = [ [0x66, 0x60, 0x46], [], "guibg=bg gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Normal"]            = [ [0xdd, 0xd6, 0xc0], [], "guibg=#2c2824 gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Number"]            = [ [0xcc, 0x88, 0x00], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["PreProc"]           = [ [0xbb, 0xaa, 0x88], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Special"]           = [ [0x71, 0x96, 0x11], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Statement"]         = [ [0x90, 0x9a, 0x9f], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["String"]            = [ [0xaa, 0xaa, 0x99], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Title"]             = [ [0x77, 0x88, 0x88], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Todo"]              = [ [0x8f, 0x6f, 0x8f], [], "guibg=#202020   gui=italic,underline,bold" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["Type"]              = [ [0x99, 0x66, 0x44], [], "gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["pythonDecorator"]   = [ [0x88, 0x77, 0x44], [], "guibg=NONE gui=NONE" ]$/;"	v
s:nefertiti_dynamic_colors	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:nefertiti_dynamic_colors["pythonExClass"]     = [ [0x99, 0x76, 0x76], [], "guibg=NONE gui=NONE" ]$/;"	v
s:nephritis	bundle/vim-colorschemes/colors/flatui.vim	/^let s:nephritis=      { "gui": "#27ae60", "cterm": "35" }$/;"	v
s:neutral1	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:neutral1=s:concrete$/;"	v
s:neutral2	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:neutral2=s:asbestos$/;"	v
s:new_window	bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:next_sign_id	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:no_term_bg	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:no_term_bg = 0$/;"	v
s:no_term_bg	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:no_term_bg = g:lucius_no_term_bg$/;"	v
s:node_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:non_zero_only	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:none   = "NONE"$/;"	v
s:none	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:none   = "NONE"$/;"	v
s:none	bundle/vim-colorschemes/colors/last256.vim	/^let s:none   = "NONE"$/;"	v
s:none	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:norm	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:norm=s:clouds$/;"	v
s:norm	bundle/vim-colorschemes/colors/flatui.vim	/^  let s:norm=s:midnightBlue$/;"	v
s:norm	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:norm       = s:almostBlack$/;"	v
s:norm	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:norm       = s:almostWhite$/;"	v
s:norm	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:norm            = s:light_black$/;"	v
s:norm	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:norm            = s:lighter_gray$/;"	v
s:normBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:normBlue   = s:middleDarkBlue$/;"	v
s:normBlue	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:normBlue   = s:middleLightBlue$/;"	v
s:normGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:normGreen  = s:middleDarkGreen$/;"	v
s:normGreen	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:normGreen  = s:middleLightGreen$/;"	v
s:normRed	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:normRed    = s:middleDarkPink$/;"	v
s:normRed	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:normRed    = s:middleLightPink$/;"	v
s:norm_subtle	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:norm_subtle     = s:light_gray$/;"	v
s:norm_subtle	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:norm_subtle     = s:lighter_black$/;"	v
s:normal_items	bundle/vim-colorschemes/colors/lucius.vim	/^let s:normal_items = [$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:null_comment_string	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:null_comment_string    = '%s'$/;"	v
s:number_map	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:o_black	bundle/vim-colorschemes/colors/mdark.vim	/^let s:o_black = "#0A1012"$/;"	v
s:o_white	bundle/vim-colorschemes/colors/mdark.vim	/^let s:o_white = "#EEEEEC"$/;"	v
s:o_yellow	bundle/vim-colorschemes/colors/mdark.vim	/^let s:o_yellow = "#CC9933"$/;"	v
s:ob	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:object_beg	bundle/vim-web-indent/indent/javascript.vim	/^let s:object_beg = '{[^}]*' . s:js_end_line_comment . '$'$/;"	v
s:object_end	bundle/vim-web-indent/indent/javascript.vim	/^let s:object_end = '^' . s:js_mid_line_comment . '}[;,]\\='$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4o'$/;"	v
s:ocamlpp	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4r'$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:olive	bundle/vim-colorschemes/colors/mdark.vim	/^let s:olive = "#4C6C3D"$/;"	v
s:one_time_notices_issued	bundle/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:opened_icon	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let s:opened_icon = vimfiler#util#escape_pattern($/;"	v
s:options_list	bundle/vim-colorschemes/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:opts	bundle/vim-colorschemes/colors/marklar.vim	/^        let s:opts = {'bold': 0, 'ignore': 1}$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:orange = [ '#ff0000', 9 ]$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:orange = '#f5871f'$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:orange = '#de935f'$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:orange = '#ffc58f'$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:orange = '#e78c45'$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:orange = '#f99157'$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:orange = [ '#fad07a', 222 ]$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:orange = [ '#cb4b16', s:cuicolors.orange[s:cuiindex] ]$/;"	v
s:orange	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:orange = [ '#e5786d', 173 ]$/;"	v
s:orange	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:orange = "d75f00"$/;"	v
s:orange	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:orange = "ffc58f"$/;"	v
s:orange	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:orange = "e78c45"$/;"	v
s:orange	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:orange = "f99157"$/;"	v
s:orange	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:orange = "de935f"$/;"	v
s:orange	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:orange = "f5871f"$/;"	v
s:orange	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:orange  = "10"$/;"	v
s:orange	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:orange  = "136"$/;"	v
s:orange	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:orange  = "b67800"$/;"	v
s:orange	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:orange = ['#F39C12', 11]$/;"	v
s:orange	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:orange = ['#ff5f00', 202]$/;"	v
s:orange	bundle/vim-colorschemes/colors/flatui.vim	/^let s:orange=         { "gui": "#f39c12", "cterm": "214" }$/;"	v
s:orange	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:orange     = "#875f00"$/;"	v
s:orange	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:orange     = "94"$/;"	v
s:orange	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:orange     = "11"$/;"	v
s:orange	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:orange     = "173"$/;"	v
s:orange	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:orange     = "3"    " DarkYellow$/;"	v
s:orange	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:orange     = "#de935f"$/;"	v
s:orange	bundle/vim-colorschemes/colors/last256.vim	/^  let s:orange     = "#d78700"$/;"	v
s:orange	bundle/vim-colorschemes/colors/last256.vim	/^  let s:orange     = "172"$/;"	v
s:orange	bundle/vim-colorschemes/colors/mdark.vim	/^let s:orange = "#FF3300"$/;"	v
s:orange	bundle/vim-colorschemes/colors/pencil.vim	/^let s:orange          = { "gui": "#D75F5F", "cterm": "167" }$/;"	v
s:orange	bundle/vim-colorschemes/colors/phd.vim	/^let s:orange = '#bba401'$/;"	v
s:orange	bundle/vim-colorschemes/colors/saturn.vim	/^let s:orange =           [s:hsl2color(30,  65, 70), 215]$/;"	v
s:orange	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:ou	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:overwrite	bundle/vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base0 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base00 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.replace.left = [ [ s:base02, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base0 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.error = [ [ s:red, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.left =  [ [ s:base02, s:base0 ], [ s:base00, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.inactive.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.insert.left = [ [ s:base023, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.error = [ [ s:base023, s:red ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.left = [ [ s:base023, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.replace.left = [ [ s:base023, s:orange ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:p.visual.left = [ [ s:base023, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.middle = [ [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.inactive.right = [ [ s:base02, s:base00 ], [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.error = [ [ s:red, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.right = [ [ s:base02, s:base1 ], [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.replace.left = [ [ s:base02, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base1 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.tabline.tabsel = [ [ s:base3, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.middle = [ [ '#303030', '#121212', 236, 233 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.inactive.right = [ [ '#121212', '#606060', 233, 241 ], [ '#121212', '#3a3a3a', 233, 237 ], [ '#121212', '#262626', 233, 235 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.insert.left =  [ ['#005f00', '#ffffff', 22, 231, 'bold' ], [ '#ffffff', '#005f00', 231, 22 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.error = [ [ '#d0d0d0', '#ff0000', 252, 196 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.left = [ ['#0000ff', '#ffffff', 21, 231, 'bold' ], [ '#ffffff', '#0000ff', 231, 21 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.middle = [ [ '#8a8a8a', '#303030', 245, 236 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.right = [ [ '#303030', '#d0d0d0', 236, 252 ], [ '#303030', '#8a8a8a', 236, 245 ], [ '#bcbcbc', '#585858', 250, 240 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.normal.warning = [ [ '#262626', '#ffff00', 235, 226 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.replace.left = [ [ '#af0000', '#ffffff', 124, 231, 'bold' ], [ '#ffffff', '#af0000', 231, 124 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.left = [ [ '#dadada', '#606060', 253, 241 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.middle = [ [ '#3a3a3a', '#b2b2b2', 237, 249 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.right = [ [ '#dadada', '#606060', 253, 241 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.tabline.tabsel = [ [ '#dadada', '#121212', 253, 233 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/landscape.vim	/^let s:p.visual.left = [ [ '#5f00ff', '#ffffff', 57, 231, 'bold' ], [ '#ffffff', '#5f00ff', 231, 57 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.left = s:p.inactive.right[1:]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.inactive.right = [ ['gray1', 'gray5'], ['gray4', 'gray1'], ['gray4', 'gray0'] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.left = [ ['darkestcyan', 'white', 'bold'], ['white', 'darkblue'] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.middle = [ [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.insert.right = [ [ 'darkestcyan', 'mediumcyan' ], [ 'mediumcyan', 'darkblue' ], [ 'mediumcyan', 'darkestblue' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.error = [ [ 'gray9', 'brightestred' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.left = [ ['darkestgreen', 'brightgreen', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.middle = [ [ 'gray7', 'gray2' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.right = [ ['gray5', 'gray10'], ['gray9', 'gray4'], ['gray8', 'gray2'] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.normal.warning = [ [ 'gray1', 'yellow' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.left = [ ['white', 'brightred', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.middle = s:p.normal.middle$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.replace.right = s:p.normal.right$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.left = [ [ 'gray9', 'gray4' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.middle = [ [ 'gray2', 'gray8' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.right = [ [ 'gray9', 'gray3' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.tabline.tabsel = [ [ 'gray9', 'gray1' ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/powerline.vim	/^let s:p.visual.left = [ ['darkred', 'brightorange', 'bold'], ['white', 'gray4'] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.error = [ [ s:base2, s:red ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.normal.warning = [ [ s:base02, s:yellow ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.inactive.left =  [ [ s:base0, s:base02 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.inactive.middle = [ [ s:base0, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.inactive.right = [ [ s:base02, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.insert.left = [ [ s:base3, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.error = [ [ s:base02, s:red ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.error = [ [ s:red, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.left = [ [ s:base3, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.middle = [ [ s:base1, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.warning = [ [ s:base2, s:yellow ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.normal.warning = [ [ s:yellow, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.replace.left = [ [ s:base3, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.left = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.middle = [ [ s:base01, s:base2 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.right = copy(s:p.normal.right)$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base03 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:p.visual.left = [ [ s:base3, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p = {'normal': {}, 'inactive': {}, 'insert': {}, 'replace': {}, 'visual': {}, 'tabline': {}}$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.left =  [ [ s:base1, s:base02 ], [ s:base00, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.middle = [ [ s:base1, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.inactive.right = [ [ s:base023, s:base01 ], [ s:base00, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.insert.left = [ [ s:base02, s:green ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.error = [ [ s:base03, s:red ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.left = [ [ s:base02, s:blue ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.middle = [ [ s:base2, s:base02 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.right = [ [ s:base02, s:base0 ], [ s:base1, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.normal.warning = [ [ s:base023, s:yellow ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.replace.left = [ [ s:base023, s:red ], [ s:base3, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.left = [ [ s:base3, s:base00 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.middle = [ [ s:base02, s:base1 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.right = [ [ s:base2, s:base01 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.tabline.tabsel = [ [ s:base2, s:base023 ] ]$/;"	v
s:p	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:p.visual.left = [ [ s:base02, s:magenta ], [ s:base3, s:base01 ] ]$/;"	v
s:padding	bundle/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:padding = s:spc . s:spc . s:spc$/;"	v
s:paren_beg	bundle/vim-web-indent/indent/javascript.vim	/^let s:paren_beg = '([^)]*' . s:js_end_line_comment . '$'$/;"	v
s:paren_end	bundle/vim-web-indent/indent/javascript.vim	/^let s:paren_end = '^' . s:js_mid_line_comment . '[^(]*)[;,]*'$/;"	v
s:paren_pairs	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:paren_pairs = ['()', '{}', '[]']$/;"	v
s:parts	bundle/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:peach	bundle/vim-colorschemes/colors/mdark.vim	/^let s:peach = "#FF9966"$/;"	v
s:peterRiver	bundle/vim-colorschemes/colors/flatui.vim	/^let s:peterRiver=     { "gui": "#3498db", "cterm": "33"  }$/;"	v
s:peterriver	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:peterriver = ['#3498DB', 4] "light blue$/;"	v
s:peterriver	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:peterriver = ['#3498DB', 68] "light blue$/;"	v
s:pink	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:pink = "d7005f"$/;"	v
s:pink	bundle/vim-colorschemes/colors/mdark.vim	/^let s:pink = "#D16B7C"$/;"	v
s:pink	bundle/vim-colorschemes/colors/pencil.vim	/^let s:pink            = { "gui": "#fb007a", "cterm": "9"   }$/;"	v
s:pink	bundle/vim-colorschemes/colors/saturn.vim	/^let s:pink =             [s:hsl2color(310, 20, 80), 109]$/;"	v
s:pomegranate	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:pomegranate = ['#C0392B', 196] "red$/;"	v
s:pomegranate	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:pomegranate = ['#C0392B', 9] "red$/;"	v
s:pomegranate	bundle/vim-colorschemes/colors/flatui.vim	/^let s:pomegranate=    { "gui": "#c0392b", "cterm": "124" }$/;"	v
s:popup_bg	bundle/vim-colorschemes/colors/phd.vim	/^let s:popup_bg = '#101010'$/;"	v
s:popup_bg_hl	bundle/vim-colorschemes/colors/phd.vim	/^let s:popup_bg_hl = '#000000'$/;"	v
s:popup_fg	bundle/vim-colorschemes/colors/phd.vim	/^let s:popup_fg = s:text$/;"	v
s:popup_fg_hl	bundle/vim-colorschemes/colors/phd.vim	/^let s:popup_fg_hl = s:text_hl$/;"	v
s:prev_registers	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:prev_registers = {}$/;"	v
s:prompt_snapshot_file	bundle/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	bundle/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:pumpkin	bundle/vim-colorschemes/colors/flatui.vim	/^let s:pumpkin=        { "gui": "#d35400", "cterm": "166"  }$/;"	v
s:purple	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:purple = "8959a8"$/;"	v
s:purple	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:purple = "ebbbff"$/;"	v
s:purple	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:purple = "c397d8"$/;"	v
s:purple	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:purple = "cc99cc"$/;"	v
s:purple	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:purple = "b294bb"$/;"	v
s:purple	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:purple = "8959a8"$/;"	v
s:purple	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:purple  = "13"$/;"	v
s:purple	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:purple  = "99"$/;"	v
s:purple	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:purple  = "976ce2"$/;"	v
s:purple	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:purple = ['#875faf', 97] " purple$/;"	v
s:purple	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:purple = ['#9b59b6', 5] " purple$/;"	v
s:purple	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:purple     = "#5f005f"$/;"	v
s:purple	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:purple     = "53"$/;"	v
s:purple	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:purple     = "13"   " LightMagenta$/;"	v
s:purple	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:purple     = "139"$/;"	v
s:purple	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:purple     = "5"$/;"	v
s:purple	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:purple     = "#b294bb"$/;"	v
s:purple	bundle/vim-colorschemes/colors/last256.vim	/^  let s:purple     = "#8787ff"$/;"	v
s:purple	bundle/vim-colorschemes/colors/last256.vim	/^  let s:purple     = "105"$/;"	v
s:purple	bundle/vim-colorschemes/colors/mdark.vim	/^let s:purple = "#AD6491"$/;"	v
s:purple	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:purple          = s:dark_purple$/;"	v
s:purple	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:purple          = s:light_purple$/;"	v
s:purple	bundle/vim-colorschemes/colors/saturn.vim	/^let s:purple =           [s:hsl2color(310, 20, 60), 140]$/;"	v
s:pwin_by_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:r      = ",reverse"$/;"	v
s:r	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:r      = ",reverse"$/;"	v
s:r	bundle/vim-colorschemes/colors/last256.vim	/^let s:r      = ",reverse"$/;"	v
s:r	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:red = [ '#800000', 1 ]$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:red = '#c82829'$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:red = '#cc6666'$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:red = '#ff9da4'$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:red = '#d54e53'$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:red = '#f2777a'$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:red = [ '#cf6a4c', 167 ]$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:red = [ '#dc322f', s:cuicolors.red[s:cuiindex] ]$/;"	v
s:red	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:red = [ '#e5786d', 203 ]$/;"	v
s:red	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:red = "df0000"$/;"	v
s:red	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:red = "ff9da4"$/;"	v
s:red	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:red = "d54e53"$/;"	v
s:red	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:red = "f2777a"$/;"	v
s:red	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:red = "cc6666"$/;"	v
s:red	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:red = "c82829"$/;"	v
s:red	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:red='#b90000'$/;"	v
s:red	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:red     = "darkred"$/;"	v
s:red	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:red     = "red"$/;"	v
s:red	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:red     = "1"$/;"	v
s:red	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:red     = "167"$/;"	v
s:red	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:red     = "d75a69"$/;"	v
s:red	bundle/vim-colorschemes/colors/elda.vim	/^let s:red = 124$/;"	v
s:red	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:red        = "#5f0000"$/;"	v
s:red	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:red        = "52"$/;"	v
s:red	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:red        = "1"$/;"	v
s:red	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:red        = "167"$/;"	v
s:red	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:red        = "9"    " LightRed$/;"	v
s:red	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:red        = "#cc6666"$/;"	v
s:red	bundle/vim-colorschemes/colors/last256.vim	/^  let s:red        = "#d75f5f"$/;"	v
s:red	bundle/vim-colorschemes/colors/last256.vim	/^  let s:red        = "167"$/;"	v
s:red	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:red             = s:dark_red$/;"	v
s:red	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:red             = s:light_red$/;"	v
s:red	bundle/vim-colorschemes/colors/phd.vim	/^let s:red = '#d07346'$/;"	v
s:red	bundle/vim-colorschemes/colors/saturn.vim	/^let s:red =              [s:hsl2color(0,   60, 70), 203]$/;"	v
s:red	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:red	bundle/vim-colorschemes/colors/twilight.vim	/^let s:red = '#d08356'$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:rgb_map	bundle/vim-colorschemes/colors/elda.vim	/^let s:rgb_map = {$/;"	v
s:rgb_map	bundle/vim-colorschemes/colors/seoul256.vim	/^  let s:rgb_map = {$/;"	v
s:ro_file_icon	bundle/vimfiler.vim/syntax/vimfiler.vim	/^let s:ro_file_icon = vimfiler#util#escape_pattern($/;"	v
s:rst2pseudoxml	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:s	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:s      = ",standout"$/;"	v
s:s	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:s      = ",standout"$/;"	v
s:s	bundle/vim-colorschemes/colors/last256.vim	/^let s:s      = ",standout"$/;"	v
s:s	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_completeopt	bundle/jedi-vim/plugin/jedi.vim	/^    let s:save_completeopt=&completeopt$/;"	v
s:save_cpo	bundle/lightline.vim/autoload/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/lightline.vim/autoload/lightline/colortable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/lightline.vim/autoload/lightline/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/lightline.vim/plugin/lightline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/apiblueprint/snowcrash.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tcomment_vim/plugin/tcomment.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/candidates.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/kinds/word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/alias.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/file_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/file_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/menu.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/output.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/resume.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/start.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/unite/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/plugin/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/plugin/unite/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/plugin/unite/history_yank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/plugin/unite/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/unite.vim/syntax/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-colorschemes/colors/calmar256-light.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-colorschemes/colors/detailed.vim	/^let s:save_cpo = &cpo | set cpo&vim$/;"	v
s:save_cpo	bundle/vim-colorschemes/colors/nefertiti.vim	/^    let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-colorschemes/colors/pink.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/filters/matcher_vimfiler_mask.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_drive.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_execute.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/columns/type.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vimfiler.vim/plugin/vimfiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:script_path	bundle/jedi-vim/autoload/jedi.vim	/^let s:script_path = fnameescape(expand('<sfile>:p:h:h'))$/;"	v
s:script_path	bundle/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:seashell_style	bundle/vim-colorschemes/colors/seashell.vim	/^let s:seashell_style = &background$/;"	v
s:section_truncate_width	bundle/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:sections	bundle/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z','warning']$/;"	v
s:sections	bundle/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:selection	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:selection = "d6d6d6"$/;"	v
s:selection	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:selection = "003f8e"$/;"	v
s:selection	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:selection = "424242"$/;"	v
s:selection	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:selection = "515151"$/;"	v
s:selection	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	let s:selection = "585858"$/;"	v
s:selection	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:selection = "373b41"$/;"	v
s:selection	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:selection = "d6d6d6"$/;"	v
s:selection	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:selection  = "#bcbcbc"$/;"	v
s:selection	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:selection  = "250"$/;"	v
s:selection	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:selection  = "0"$/;"	v
s:selection	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:selection  = "237"$/;"	v
s:selection	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:selection  = "8"    " DarkGrey$/;"	v
s:selection	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:selection  = "#373b41"$/;"	v
s:selection	bundle/vim-colorschemes/colors/last256.vim	/^  let s:selection  = "#585858"$/;"	v
s:selection	bundle/vim-colorschemes/colors/last256.vim	/^  let s:selection  = "240"$/;"	v
s:self_file	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	bundle/unite.vim/autoload/vital/_unite.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:seoul256_background	bundle/vim-colorschemes/colors/seoul256.vim	/^  let s:seoul256_background = g:seoul256_background$/;"	v
s:separators	bundle/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:short_help	bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:show_buffers	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_buffers	bundle/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_close_button	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_close_button = get(g:, 'airline#extensions#tabline#show_close_button', 1)$/;"	v
s:show_message	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = g:airline_detect_whitespace == 1$/;"	v
s:show_message	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^  let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_tab_nr	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_tab_nr = get(g:, 'airline#extensions#tabline#show_tab_nr', 1)$/;"	v
s:show_tab_type	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:show_tab_type = get(g:, 'airline#extensions#tabline#show_tab_type', 1)$/;"	v
s:show_tab_type	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:show_tab_type = get(g:, 'airline#extensions#tabline#show_tab_type', 1)$/;"	v
s:show_tabs	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:show_tabs = get(g:, 'airline#extensions#tabline#show_tabs', 1)$/;"	v
s:sienna_style	bundle/vim-colorschemes/colors/sienna.vim	/^    let s:sienna_style = 'light'$/;"	v
s:sienna_style	bundle/vim-colorschemes/colors/sienna.vim	/^    let s:sienna_style = g:sienna_style$/;"	v
s:silver	bundle/vim-colorschemes/colors/flatui.vim	/^let s:silver=         { "gui": "#e8e8e8", "cterm": "7" }$/;"	v
s:skip_after_opening_paren	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_search	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:skip_search = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_special_chars	bundle/vim-python-pep8-indent/indent/python.vim	/^    let s:skip_special_chars .= '|| s:is_concealed(line("."), col("."))'$/;"	v
s:skip_special_chars	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:skip_special_chars = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_symbol	bundle/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:slate	bundle/vim-colorschemes/colors/mdark.vim	/^let s:slate = "#555753"$/;"	v
s:solarized_termcolors	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:solarized_termcolors	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:solarized_termcolors = get(g:, 'solarized_termcolors', 256)$/;"	v
s:solarized_termtrans_default	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sortKeyFormat	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:source.action_table.do = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/file_list.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/file_point.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/find.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.call = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/grep.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:source.action_table.start = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/menu.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/output.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigint = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigkill = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigterm = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/resume.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/script.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/source.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/tab.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/window.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.open = {$/;"	v
s:source	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.rename = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_drive.vim	/^let s:source = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_execute.vim	/^let s:source = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^let s:source = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^let s:source = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:source = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^let s:source = {$/;"	v
s:source	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source_buffer_all	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_all = {$/;"	v
s:source_buffer_tab	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab = deepcopy(s:source_buffer_all)$/;"	v
s:source_buffer_tab	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.description =$/;"	v
s:source_buffer_tab	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.name = 'buffer_tab'$/;"	v
s:source_directory	bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory = {$/;"	v
s:source_directory_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async = deepcopy(s:source_file_async)$/;"	v
s:source_directory_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.default_kind = 'directory'$/;"	v
s:source_directory_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.description =$/;"	v
s:source_directory_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.name = 'directory_rec\/async'$/;"	v
s:source_directory_new	bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory_new = {$/;"	v
s:source_directory_rec	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec = deepcopy(s:source_file_rec)$/;"	v
s:source_directory_rec	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.default_kind = 'directory'$/;"	v
s:source_directory_rec	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.description =$/;"	v
s:source_directory_rec	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.name = 'directory_rec'$/;"	v
s:source_file	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file = {$/;"	v
s:source_file_async	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async = deepcopy(s:source_file)$/;"	v
s:source_file_async	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async.description = 'asynchronous candidates from file list'$/;"	v
s:source_file_async	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async.name = 'file\/async'$/;"	v
s:source_file_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async = deepcopy(s:source_file_rec)$/;"	v
s:source_file_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.description =$/;"	v
s:source_file_async	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.name = 'file_rec\/async'$/;"	v
s:source_file_git	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git = deepcopy(s:source_file_async)$/;"	v
s:source_file_git	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git.description =$/;"	v
s:source_file_git	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git.name = 'file_rec\/git'$/;"	v
s:source_file_neovim	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim = deepcopy(s:source_file_rec)$/;"	v
s:source_file_neovim	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim.description =$/;"	v
s:source_file_neovim	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim.name = 'file_rec\/neovim'$/;"	v
s:source_file_new	bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_new = {$/;"	v
s:source_file_rec	bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_rec = {$/;"	v
s:source_func	bundle/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:source_func = ''$/;"	v
s:source_line	bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line = {$/;"	v
s:source_line	bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line.converters = [s:source_line.source__converter]$/;"	v
s:sp_addbg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addbg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addbg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_addbg      = ""$/;"	v
s:sp_addfg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_addfg      = ""$/;"	v
s:sp_addfg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_addfg      = ""$/;"	v
s:sp_aqua	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_aqua	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_aqua	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_aqua       = ""$/;"	v
s:sp_back	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_background	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_background = ""$/;"	v
s:sp_background	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_background = ""$/;"	v
s:sp_background	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_background = ""$/;"	v
s:sp_base0	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_blue       = ""$/;"	v
s:sp_blue	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_brown	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_brown    = ""$/;"	v
s:sp_changebg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changebg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changebg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_changebg   = ""$/;"	v
s:sp_changefg	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_changefg   = ""$/;"	v
s:sp_changefg	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_changefg   = ""$/;"	v
s:sp_comment	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_comment	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_comment	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_comment    = ""$/;"	v
s:sp_cyan	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_darkblue	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_darkblue   = ""$/;"	v
s:sp_darkcyan	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_darkcyan   = ""$/;"	v
s:sp_darkpurple	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_darkpurple = ""$/;"	v
s:sp_darkred	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_darkred    = ""$/;"	v
s:sp_delbg	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_delbg   = ""$/;"	v
s:sp_foreground	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_foreground	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_foreground	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_foreground = ""$/;"	v
s:sp_green	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_green      = ""$/;"	v
s:sp_green	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_line	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_line	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_line	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_line       = ""$/;"	v
s:sp_magenta	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_none       = ""$/;"	v
s:sp_none	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_orange     = ""$/;"	v
s:sp_orange	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_purple	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_purple	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_purple	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_purple     = ""$/;"	v
s:sp_red	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_red        = ""$/;"	v
s:sp_red	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_selection	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_selection	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_selection	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_selection  = ""$/;"	v
s:sp_violet	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_window	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_window	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_window	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_window     = ""$/;"	v
s:sp_yellow	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	bundle/vim-colorschemes/colors/last256.vim	/^  let s:sp_yellow     = ""$/;"	v
s:sp_yellow	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	bundle/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:statusline_in_use	bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:stop_statement	bundle/vim-python-pep8-indent/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:structure	bundle/vim-colorschemes/colors/phd.vim	/^let s:structure =  '#76cc68'$/;"	v
s:style	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:style = &background$/;"	v
s:style	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:style = g:lucius_style$/;"	v
s:style	bundle/vim-colorschemes/colors/seoul256.vim	/^    let s:style = &background$/;"	v
s:style	bundle/vim-colorschemes/colors/seoul256.vim	/^    let s:style = 'dark'$/;"	v
s:style	bundle/vim-colorschemes/colors/seoul256.vim	/^    let s:style = 'light'$/;"	v
s:style_idx	bundle/vim-colorschemes/colors/seoul256.vim	/^let s:style_idx = s:style == 'light'$/;"	v
s:subtle	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:subtle     = s:darkGrey$/;"	v
s:subtle	bundle/vim-colorschemes/colors/hemisu.vim	/^  let s:subtle     = s:lightGrey$/;"	v
s:subtle_black	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:subtle_black  = { "gui": "#262626", "cterm": "235" }$/;"	v
s:subtle_black	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:subtle_black  = { "gui": "#303030", "cterm": "236" }$/;"	v
s:suite	bundle/unite.vim/test/matcher.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	bundle/unite.vim/test/sorter.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	bundle/unite.vim/test/source.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	bundle/vimfiler.vim/test/functions.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:summary	bundle/vim-gitgutter/autoload/gitgutter/hunk.vim	/^let s:summary = [0, 0, 0]$/;"	v
s:sunFlower	bundle/vim-colorschemes/colors/flatui.vim	/^let s:sunFlower=      { "gui": "#f1c40f", "cterm": "220" }$/;"	v
s:supported_search_direction	bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:supported_search_direction =$/;"	v
s:supports_star	bundle/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:switch_beg_next_line	bundle/vim-web-indent/indent/javascript.vim	/^let s:switch_beg_next_line = 'switch\\s*(.*)\\s*' . s:js_mid_line_comment . s:js_end_line_comment . '$'$/;"	v
s:switch_beg_same_line	bundle/vim-web-indent/indent/javascript.vim	/^let s:switch_beg_same_line = 'switch\\s*(.*)\\s*' . s:js_mid_line_comment . '{\\s*' . s:js_line_comment . '$'$/;"	v
s:switch_mid	bundle/vim-web-indent/indent/javascript.vim	/^let s:switch_mid = '^.*\\(case.*\\|default\\)\\s*:\\s*' $/;"	v
s:symbol	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:syn_comment	bundle/vim-web-indent/indent/javascript.vim	/^let s:syn_comment = '\\(Comment\\|String\\|Regexp\\)'$/;"	v
s:t_none	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	bundle/vim-colorschemes/colors/last256.vim	/^let s:t_none = "NONE"$/;"	v
s:t_none	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tab_min_count	bundle/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:tab_nr_type	bundle/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:tab_nr_type = get(g:, 'airline#extensions#tabline#tab_nr_type', 0)$/;"	v
s:table	bundle/lightline.vim/autoload/lightline/colortable.vim	/^let s:table = s:load()$/;"	v
s:tabline	bundle/vim-colorschemes/colors/badwolf.vim	/^        let s:tabline = 'blackestgravel'$/;"	v
s:tabline	bundle/vim-colorschemes/colors/badwolf.vim	/^        let s:tabline = 'blackgravel'$/;"	v
s:tabline	bundle/vim-colorschemes/colors/badwolf.vim	/^        let s:tabline = 'darkgravel'$/;"	v
s:tabline	bundle/vim-colorschemes/colors/badwolf.vim	/^        let s:tabline = 'deepgravel'$/;"	v
s:tabline	bundle/vim-colorschemes/colors/badwolf.vim	/^    let s:tabline = 'blackgravel'$/;"	v
s:taboo	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:temp00	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:termBlack	bundle/vim-colorschemes/colors/jellybeans.vim	/^    let s:termBlack = "Black"$/;"	v
s:termBlack	bundle/vim-colorschemes/colors/jellybeans.vim	/^    let s:termBlack = "Grey"$/;"	v
s:term_has_italic	bundle/vim-colorschemes/colors/jellyx.vim	/^let s:term_has_italic = 0$/;"	v
s:termbg	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termbg	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	bundle/vim-airline/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:terminal_italic	bundle/vim-colorschemes/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	bundle/vim-colorschemes/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	bundle/vim-colorschemes/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:termsep	bundle/vim-airline/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:text	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:text	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:text = s:clouds$/;"	v
s:text	bundle/vim-colorschemes/colors/phd.vim	/^let s:text = '#e0e0e0'$/;"	v
s:text_bg	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:text_bg = ['#1C1C1C', 234]$/;"	v
s:text_bg	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:text_bg = ['#1C1C1C', 8]$/;"	v
s:text_bg	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:text_bg = ['#2c3e50', 23]$/;"	v
s:text_bg	bundle/vim-colorschemes/colors/flatcolor.vim	/^    let s:text_bg = ['#2c3e50', 8]$/;"	v
s:text_bg_light	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:text_bg_light = ['#2b2b2b', 0]$/;"	v
s:text_bg_light	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:text_bg_light = ['#303030', 236]$/;"	v
s:text_hl	bundle/vim-colorschemes/colors/phd.vim	/^let s:text_hl = '#ffffff'$/;"	v
s:text_minor	bundle/vim-colorschemes/colors/phd.vim	/^let s:text_minor = '#909090'$/;"	v
s:text_very_minor	bundle/vim-colorschemes/colors/phd.vim	/^let s:text_very_minor = '#304050'$/;"	v
s:thestars_version	bundle/vim-colorschemes/colors/thestars.vim	/^let s:thestars_version = 1.0.1$/;"	v
s:tlist_app_name	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	bundle/vim-gotosymbol/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	bundle/vim-gotosymbol/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	bundle/vim-gotosymbol/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tmuxline_snapshot_file	bundle/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:trailing_format	bundle/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:trailing_format = get(g:, 'airline#extensions#whitespace#trailing_format', 'trailing[%s]')$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:turquoise	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:turquoise = ['#1ABC9C', 37]$/;"	v
s:turquoise	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:turquoise = ['#1ABC9C', 6]$/;"	v
s:turquoise	bundle/vim-colorschemes/colors/flatui.vim	/^let s:turquoise=      { "gui": "#1abc9c", "cterm": "36"  }$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:type_map	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:types	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:types_dirty	bundle/tcomment_vim/autoload/tcomment.vim	/^let s:types_dirty = 1$/;"	v
s:u	bundle/vim-colorschemes/colors/hybrid-light.vim	/^let s:u      = ",underline"$/;"	v
s:u	bundle/vim-colorschemes/colors/hybrid.vim	/^let s:u      = ",underline"$/;"	v
s:u	bundle/vim-colorschemes/colors/last256.vim	/^let s:u      = ",underline"$/;"	v
s:u	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:ulbg	bundle/vim-colorschemes/colors/astronaut.vim	/^  let s:ulbg     = "ctermbg=darkmagenta guibg=magenta4"$/;"	v
s:ulbg	bundle/vim-colorschemes/colors/astronaut.vim	/^  let s:ulbg     = "ctermbg=magenta guibg=magenta"$/;"	v
s:ulbg	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:ulbg     = ""$/;"	v
s:undercurl_items	bundle/vim-colorschemes/colors/lucius.vim	/^let s:undercurl_items = [$/;"	v
s:underline	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:underline= ",underline"$/;"	v
s:underline	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:underline= "none"$/;"	v
s:underline_items	bundle/vim-colorschemes/colors/lucius.vim	/^let s:underline_items = [$/;"	v
s:unite_histories	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:unite_histories = []$/;"	v
s:unite_histories_file_mtime	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:unite_histories_file_mtime = 0$/;"	v
s:updatetime	bundle/vim-bufferline/autoload/bufferline.vim	/^let s:updatetime = &updatetime$/;"	v
s:upper	bundle/vim-colorschemes/colors/xterm16.vim	/^	let s:upper = s:ccube[2*s:i] . s:ccube[2*s:i + 1]$/;"	v
s:urlpattern	bundle/vim-colorschemes/colors/landscape.vim	/^let s:urlpattern = $/;"	v
s:use_bold	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:use_bold = 1$/;"	v
s:use_bold	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:use_bold = g:lucius_use_bold$/;"	v
s:use_current_unite	bundle/unite.vim/autoload/unite/variables.vim	/^  let s:use_current_unite = 1$/;"	v
s:use_underline	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:use_underline = 1$/;"	v
s:use_underline	bundle/vim-colorschemes/colors/lucius.vim	/^    let s:use_underline = g:lucius_use_underline$/;"	v
s:using_xolox_shell	bundle/vim-gitgutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:var_found	bundle/vim-colorschemes/colors/seoul256-light.vim	/^let s:var_found = exists('g:seoul256_background')$/;"	v
s:vb_blue	bundle/vim-colorschemes/colors/mdark.vim	/^let s:vb_blue = "#2950CB"$/;"	v
s:violet	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:violet = [ '#ff00ff', 13 ]$/;"	v
s:violet	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:violet	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:violet = [ '#6c71c4', s:cuicolors.violet[s:cuiindex] ]$/;"	v
s:violet	bundle/vim-colorschemes/colors/phd.vim	/^let s:violet = '#99699c'$/;"	v
s:violet	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:violet	bundle/vim-colorschemes/colors/twilight.vim	/^let s:violet = '#a999ac'$/;"	v
s:visibility_symbols	bundle/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:visual	bundle/vim-colorschemes/colors/last256.vim	/^  let s:visual     = "#5f8787"$/;"	v
s:visual	bundle/vim-colorschemes/colors/last256.vim	/^  let s:visual     = "66"$/;"	v
s:visual	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:visual          = s:light_blue$/;"	v
s:visual	bundle/vim-colorschemes/colors/pencil.vim	/^  let s:visual          = s:lighter_black$/;"	v
s:vl_cyan	bundle/vim-colorschemes/colors/mdark.vim	/^let s:vl_cyan = "#99FFFF"$/;"	v
s:vl_pink	bundle/vim-colorschemes/colors/mdark.vim	/^let s:vl_pink = "#FFDDCC"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/last256.vim	/^  let s:vmode      = "cterm"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/last256.vim	/^  let s:vmode      = "gui"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:warnings	bundle/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wetAsphalt	bundle/vim-colorschemes/colors/flatui.vim	/^let s:wetAsphalt=     { "gui": "#34495e", "cterm": "237" }$/;"	v
s:white	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:white='#aaaaaa'$/;"	v
s:white	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:white   = "white"$/;"	v
s:white	bundle/vim-colorschemes/colors/elda.vim	/^let s:white = 252$/;"	v
s:white	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:white = ['#BDC3C7', 15]$/;"	v
s:white	bundle/vim-colorschemes/colors/flatcolor.vim	/^  let s:white = ['#FFFFFF', 15]$/;"	v
s:white	bundle/vim-colorschemes/colors/hemisu.vim	/^let s:white            = { "gui": "#FFFFFF", "cterm": "231" }$/;"	v
s:white	bundle/vim-colorschemes/colors/last256.vim	/^	let s:white      = "#c6c6c6"$/;"	v
s:white	bundle/vim-colorschemes/colors/last256.vim	/^	let s:white      = "251"$/;"	v
s:white	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:white        = "#eeeeec"$/;"	v
s:white	bundle/vim-colorschemes/colors/mdark.vim	/^let s:white = "#FFFFFF"$/;"	v
s:white	bundle/vim-colorschemes/colors/pencil.vim	/^let s:white           = { "gui": "#F1F1F1", "cterm": "15"  }$/;"	v
s:white	bundle/vim-colorschemes/colors/twilight.vim	/^let s:white = '#fffedc'$/;"	v
s:wig_cond	bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:window	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:window = "efefef"$/;"	v
s:window	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^	let s:window = "5e5e5e"$/;"	v
s:window	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:window = "4d5057"$/;"	v
s:window	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:window = "efefef"$/;"	v
s:window	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:window     = "#9e9e9e"$/;"	v
s:window	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:window     = "247"$/;"	v
s:window	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:window     = "#303030"$/;"	v
s:window	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:window     = "236"$/;"	v
s:window	bundle/vim-colorschemes/colors/last256.vim	/^  let s:window     = "#5f5f5f"$/;"	v
s:window	bundle/vim-colorschemes/colors/last256.vim	/^  let s:window     = "59"$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:window_start	bundle/vim-bufferline/autoload/bufferline.vim	/^let s:window_start = 0$/;"	v
s:winrestcmd	bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:wisteria	bundle/vim-colorschemes/colors/flatui.vim	/^let s:wisteria=       { "gui": "#8e44ad", "cterm": "97" }$/;"	v
s:worktree_for_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:xterm_colors	bundle/vim-colorschemes/colors/jellyx.vim	/^let s:xterm_colors = {$/;"	v
s:yank_histories	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:yank_histories = []$/;"	v
s:yank_histories_file_mtime	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^let s:yank_histories_file_mtime = 0$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/16color.vim	/^let s:yellow = [ '#808000', 3 ]$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow.vim	/^let s:yellow = '#eab700'$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night.vim	/^let s:yellow = '#f0c674'$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Blue.vim	/^let s:yellow = '#ffeead'$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Bright.vim	/^let s:yellow = '#e7c547'$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/Tomorrow_Night_Eighties.vim	/^let s:yellow = '#ffcc66'$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/jellybeans.vim	/^let s:yellow = [ '#ffb964', 215 ]$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_dark.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/solarized_light.vim	/^let s:yellow = [ '#b58900', s:cuicolors.yellow[s:cuiindex] ]$/;"	v
s:yellow	bundle/lightline.vim/autoload/lightline/colorscheme/wombat.vim	/^let s:yellow = [ '#cae682', 180 ]$/;"	v
s:yellow	bundle/papercolor-theme/colors/PaperColor.vim	/^let s:yellow = "ffff00"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/Tomorrow-Night-Blue.vim	/^let s:yellow = "ffeead"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/Tomorrow-Night-Bright.vim	/^let s:yellow = "e7c547"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/Tomorrow-Night-Eighties.vim	/^let s:yellow = "ffcc66"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/Tomorrow-Night.vim	/^let s:yellow = "f0c674"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/Tomorrow.vim	/^let s:yellow = "eab700"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/ansi_blows.vim	/^let s:yellow='#ffff44'$/;"	v
s:yellow	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:yellow  = "darkyellow"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/astronaut.vim	/^ let s:yellow  = "yellow"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:yellow  = "100"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/bluedrake.vim	/^        let s:yellow  = "3"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/bluedrake.vim	/^    let s:yellow  = "768f00"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:yellow     = "#5f5f00"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/hybrid-light.vim	/^  let s:yellow     = "58"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:yellow     = "11"   " LightYellow$/;"	v
s:yellow	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:yellow     = "221"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/hybrid.vim	/^    let s:yellow     = "3"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/hybrid.vim	/^  let s:yellow     = "#f0c674"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/last256.vim	/^  let s:yellow     = "#d7af5f"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/last256.vim	/^  let s:yellow     = "221"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/literal_tango.vim	/^let s:yellow       = "#fce94f"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/mdark.vim	/^let s:yellow = "#FFCC00"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/pencil.vim	/^let s:yellow          = { "gui": "#F3E430", "cterm": "11"  }$/;"	v
s:yellow	bundle/vim-colorschemes/colors/phd.vim	/^let s:yellow = '#e3d756'$/;"	v
s:yellow	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	bundle/vim-colorschemes/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:yellow	bundle/vim-colorschemes/colors/twilight.vim	/^let s:yellow = '#e3d796'$/;"	v
s:yellow_orange	bundle/vim-colorschemes/colors/mdark.vim	/^let s:yellow_orange = "#FF6600"$/;"	v
safe_property	bundle/jedi-vim/jedi/jedi/common.py	/^def safe_property(func):$/;"	f
samerootsyml	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f
sample_int	bundle/jedi-vim/jedi/test/helpers.py	/^sample_int = 1  # This is used in completion\/imports.py$/;"	v
sanstail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f
save	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:save(filename, bookmark)  "{{{$/;"	f
save	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:save()  "{{{$/;"	f
save_cpo	bundle/vim-colorschemes/colors/candycode.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	bundle/vim-colorschemes/colors/codeblocks_dark.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	bundle/vim-colorschemes/colors/elda.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	bundle/vim-colorschemes/colors/luinnar.vim	/^let save_cpo = &cpo$/;"	v
save_cpo	bundle/vim-colorschemes/colors/mizore.vim	/^let save_cpo = &cpo$/;"	v
save_first_col	bundle/jedi-vim/autoload/jedi.vim	/^function! s:save_first_col()$/;"	f
save_parser	bundle/jedi-vim/jedi/jedi/cache.py	/^    def save_parser(self, path, parser_cache_item):$/;"	m	class:ParserPickling
save_parser	bundle/jedi-vim/jedi/jedi/cache.py	/^def save_parser(path, parser, pickling=True):$/;"	f
savebookmark	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f
savetofile	bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f
say	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^    def say(self): pass$/;"	m	class:A
scale_call_signatures	bundle/jedi-vim/jedi/jedi/settings.py	/^scale_call_signatures = 0.1$/;"	v
scale_speed_settings	bundle/jedi-vim/jedi/jedi/common.py	/^def scale_speed_settings(factor):$/;"	f
scan	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^        def scan(children):$/;"	f	function:Scope._search_in_scope
scan	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^            def scan(scope):$/;"	f	function:UserContextParser.user_scope
scan	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scope	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def scope(self):$/;"	m	class:Arguments
scope_basic	bundle/jedi-vim/jedi/test/completion/imports.py	/^def scope_basic():$/;"	f
scope_from_import_variable	bundle/jedi-vim/jedi/test/completion/imports.py	/^def scope_from_import_variable():$/;"	f
scope_from_import_variable_with_parenthesis	bundle/jedi-vim/jedi/test/completion/imports.py	/^def scope_from_import_variable_with_parenthesis():$/;"	f
scope_nested	bundle/jedi-vim/jedi/test/completion/imports.py	/^def scope_nested():$/;"	f
scope_nested2	bundle/jedi-vim/jedi/test/completion/imports.py	/^def scope_nested2():$/;"	f
scope_pkg	bundle/jedi-vim/jedi/test/completion/imports.py	/^def scope_pkg():$/;"	f
scopes	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^    def scopes(self, search_global=False):$/;"	m	class:NameFinder
script	bundle/jedi-vim/jedi/test/run.py	/^    def script(self):$/;"	m	class:IntegrationTestCase
search	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:search(pattern) abort$/;"	f
search	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:search(pattern) abort$/;"	f
search_buffer	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:search_buffer(candidate) "{{{$/;"	f
search_cursor	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:search_cursor(filename, dest_dir, candidate) "{{{$/;"	f
search_dict	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict()$/;"	f
search_dict2	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict2(name)$/;"	f
search_function_call	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^def search_function_call(evaluator, func):$/;"	f
search_params	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^def search_params(evaluator, param):$/;"	f
search_return_in_docstr	bundle/jedi-vim/jedi/jedi/evaluate/docstrings.py	/^    def search_return_in_docstr(code):$/;"	f	function:find_return_types
search_scope	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^def search_scope(scope, obj_name):$/;"	f
second	bundle/jedi-vim/jedi/test/completion/classes.py	/^second = ""$/;"	v
second	bundle/jedi-vim/jedi/test/completion/classes.py	/^second = 1$/;"	v
second	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def second(a):$/;"	f
select_sort_type	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:select_sort_type() "{{{$/;"	f
select_tab	bundle/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
self_test	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def self_test(self):$/;"	m	class:Abc
set	bundle/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default)$/;"	f
set_brightness	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:set_brightness( default)$/;"	f
set_current_mask	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:set_current_mask() "{{{$/;"	f
set_debug_function	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi.api import Script, Interpreter, NotFoundError, set_debug_function$/;"	i
set_debug_function	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^def set_debug_function(func_cb=debug.print_to_stdout, warnings=True,$/;"	f
set_default	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_dictionary_helper	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_dictionary_helper	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_object_var	bundle/jedi-vim/jedi/test/completion/usages.py	/^set_object_var = object()$/;"	v
set_syntax	bundle/unite.vim/autoload/unite/view.vim	/^function! s:set_syntax() "{{{$/;"	f
set_t	bundle/jedi-vim/jedi/test/completion/types.py	/^set_t = {1,2}$/;"	v
set_t2	bundle/jedi-vim/jedi/test/completion/types.py	/^set_t2 = set()$/;"	v
setcolor	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:setcolor( name, r, g, b)$/;"	f
setentries	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f
settings	bundle/jedi-vim/jedi/jedi/__init__.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/cache.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/common.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/evaluate/recursion.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/test/completion/thirdparty/django_.py	/^from django.conf import settings$/;"	i
settings	bundle/jedi-vim/jedi/test/conftest.py	/^    from jedi import settings$/;"	i
settings	bundle/jedi-vim/jedi/test/test_cache.py	/^from jedi import settings, cache$/;"	i
settings	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^    from jedi import settings$/;"	i
settype	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f
setup	bundle/jedi-vim/jedi/docs/conf.py	/^def setup(app):$/;"	f
setup	bundle/jedi-vim/jedi/setup.py	/^    from distutils.core import setup$/;"	i
setup	bundle/jedi-vim/jedi/setup.py	/^    from setuptools import setup$/;"	i
setup	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/setup.py	/^from distutils.core import setup, Extension$/;"	i
setup_keymaps	bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
setup_readline	bundle/jedi-vim/jedi/jedi/utils.py	/^def setup_readline(namespace_module=__main__):$/;"	f
setupblank	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellescape	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^    def shift(self, type, value, newstate, prefix, start_pos):$/;"	m	class:PgenParser
shift	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shiftwidth	bundle/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def shiftwidth$/;"	f
shortest	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f
should_change_group	bundle/vim-airline/autoload/airline/builder.vim	/^function! s:should_change_group(group1, group2)$/;"	f
shouldnt_expose_var	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def shouldnt_expose_var(not_self):$/;"	m	class:SelfVars
shout	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def shout(self):$/;"	m	class:Angry
shout	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^    def shout(self): pass$/;"	m	class:B
showMenu	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_call_signatures	bundle/jedi-vim/jedi_vim.py	/^def show_call_signatures(signatures=()):$/;"	f
show_completions	bundle/jedi-vim/jedi/sith.py	/^    def show_completions(self):$/;"	m	class:TestCase
show_definitions	bundle/jedi-vim/jedi/sith.py	/^    def show_definitions(self):$/;"	m	class:TestCase
show_documentation	bundle/jedi-vim/jedi_vim.py	/^def show_documentation():$/;"	f
show_errors	bundle/jedi-vim/jedi/sith.py	/^    def show_errors(self):$/;"	m	class:TestCase
show_location	bundle/jedi-vim/jedi/sith.py	/^    def show_location(self, lineno, column, show=3):$/;"	m	class:TestCase
show_operation	bundle/jedi-vim/jedi/sith.py	/^    def show_operation(self):$/;"	m	class:TestCase
show_tabline	bundle/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
shsplit	bundle/jedi-vim/jedi_vim.py	/^from shlex import split as shsplit$/;"	i
shutil	bundle/jedi-vim/jedi/conftest.py	/^import shutil$/;"	i
shutil	bundle/jedi-vim/jedi/jedi/cache.py	/^import shutil$/;"	i
shutil	bundle/jedi-vim/jedi/test/conftest.py	/^import shutil$/;"	i
shutil	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^import shutil$/;"	i
sig_autocmds	bundle/vim-signature/plugin/signature.vim	/^  augroup sig_autocmds$/;"	a
sign	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sign(status)$/;"	f
signature#Input	bundle/vim-signature/plugin/signature.vim	/^function! signature#Input()                                                                                       " {{{2$/;"	f
signature#Remove	bundle/vim-signature/plugin/signature.vim	/^function! signature#Remove(lnum)                                                                                  " {{{2$/;"	f
signature#Toggle	bundle/vim-signature/plugin/signature.vim	/^function! signature#Toggle()                                                                                      " {{{2$/;"	f
signature#mark#ForceGlobalRemoval	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#ForceGlobalRemoval(mark)                                                                 " {{{2$/;"	f
signature#mark#GetList	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#GetList(mode, scope, ...)                                                                " {{{2$/;"	f
signature#mark#Goto	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#Goto(dir, loc, mode)                                                                     " {{{2$/;"	f
signature#mark#List	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#List(scope)                                                                              " {{{2$/;"	f
signature#mark#Place	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#Place(mark)                                                                              " {{{2$/;"	f
signature#mark#Purge	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#Purge(mode)                                                                              " {{{2$/;"	f
signature#mark#Remove	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#Remove(mark)                                                                             " {{{2$/;"	f
signature#mark#Toggle	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#Toggle(mark)                                                                             " {{{2$/;"	f
signature#mark#ToggleAtLine	bundle/vim-signature/plugin/signature/mark.vim	/^function! signature#mark#ToggleAtLine()                                                                           " {{{2$/;"	f
signature#marker#Goto	bundle/vim-signature/plugin/signature/marker.vim	/^function! signature#marker#Goto( dir, marker_num, count )                                                         " {{{2$/;"	f
signature#marker#List	bundle/vim-signature/plugin/signature/marker.vim	/^function! signature#marker#List(...)                                                                              " {{{2$/;"	f
signature#marker#Purge	bundle/vim-signature/plugin/signature/marker.vim	/^function! signature#marker#Purge(...)                                                                             " {{{2$/;"	f
signature#marker#Remove	bundle/vim-signature/plugin/signature/marker.vim	/^function! signature#marker#Remove(lnum, marker)                                                                   " {{{2$/;"	f
signature#marker#Toggle	bundle/vim-signature/plugin/signature/marker.vim	/^function! signature#marker#Toggle(marker)                                                                         " {{{2$/;"	f
signature#sign#GetGitGutterHLGroup	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#GetGitGutterHLGroup(lnum)$/;"	f
signature#sign#GetInfo	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#GetInfo(...)                                                                             " {{{1$/;"	f
signature#sign#GetSignifyHLGroup	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#GetSignifyHLGroup(lnum)$/;"	f
signature#sign#Place	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#Place(sign, lnum)                                                                        " {{{1$/;"	f
signature#sign#Refresh	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#Refresh(...)                                                                             " {{{1$/;"	f
signature#sign#RefreshLine	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#RefreshLine(lnum)                                                                        " {{{1$/;"	f
signature#sign#Remove	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#Remove(sign, lnum)                                                                       " {{{1$/;"	f
signature#sign#ToggleDummy	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#ToggleDummy(...)                                                                         " {{{1$/;"	f
signature#sign#Unplace	bundle/vim-signature/plugin/signature/sign.vim	/^function! signature#sign#Unplace(lnum)                                                                            " {{{1$/;"	f
signature#utils#Init	bundle/vim-signature/plugin/signature/utils.vim	/^function! signature#utils#Init()                                                                                  " {{{1$/;"	f
signature#utils#Maps	bundle/vim-signature/plugin/signature/utils.vim	/^function! signature#utils#Maps(mode)                                                                              " {{{1$/;"	f
signature#utils#NumericSort	bundle/vim-signature/plugin/signature/utils.vim	/^function! signature#utils#NumericSort(x, y)                                                                       " {{{1$/;"	f
signature#utils#Set	bundle/vim-signature/plugin/signature/utils.vim	/^function! signature#utils#Set(var, default)                                                                       " {{{1$/;"	f
simple	bundle/jedi-vim/jedi/test/completion/functions.py	/^def simple(a):$/;"	f
simple	bundle/jedi-vim/jedi/test/completion/generators.py	/^def simple():$/;"	f
simple	bundle/jedi-vim/jedi/test/static_analysis/arguments.py	/^def simple(a):$/;"	f
simple	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def simple(a):$/;"	f
simple2	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def simple2(a, b, c):$/;"	f
simple_mixed	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def simple_mixed(a, b, c):$/;"	f
simplify_dfa	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def simplify_dfa(self, dfa):$/;"	m	class:ParserGenerator
simplify_str	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^            def simplify_str(match):$/;"	f	function:UserContext.call_signature.get_line
single	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^single = r"[^'\\\\]*(?:\\\\.[^'\\\\]*)*'"$/;"	v
single3	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^single3 = r"[^'\\\\]*(?:(?:\\\\.|'(?!''))[^'\\\\]*)*'''"$/;"	v
single_quoted	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^single_quoted = {}$/;"	v
sitepackages_dir	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^    def sitepackages_dir(venv):$/;"	f	function:test_get_sys_path
skip_deprecated	bundle/jedi-vim/jedi/docs/conf.py	/^def skip_deprecated(app, what, name, obj, skip, options):$/;"	f
sleep	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^        run("import time; abc = time; abc.sleep(", 'sleep', 0)$/;"	i
smart_execute_command	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_imap	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap(map) "{{{$/;"	f
smart_imap2	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap2(map) "{{{$/;"	f
smart_preview	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_preview() "{{{$/;"	f
some_func	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def some_func(self):$/;"	m	class:MemoizeTest
some_variable	bundle/jedi-vim/jedi/test/completion/__init__.py	/^some_variable = 1$/;"	v
some_variable	bundle/jedi-vim/jedi/test/completion/goto.py	/^from . import some_variable$/;"	i
some_variable	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from . import some_variable$/;"	i
something	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^something = a$/;"	v
sort	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! s:sort(files, type) "{{{$/;"	f
sort	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort_buffer_name	bundle/unite.vim/autoload/unite/helper.vim	/^function! s:sort_buffer_name(lhs, rhs) "{{{$/;"	f
sort_by	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_lua	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_lua(candidates, inputs) "{{{$/;"	f
sort_ruby	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:sort_ruby(candidates, inputs)$/;"	f
sort_vim	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_vim(candidates, inputs) "{{{$/;"	f
sorted_definitions	bundle/jedi-vim/jedi/jedi/api/helpers.py	/^def sorted_definitions(defs):$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:sorter.filter(candidates, context)$/;"	f
sorter.filter	bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
source.action_table.call.func	bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.call.func(candidate) "{{{$/;"	f
source.action_table.delete.func	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.do.func	bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.action_table.do.func(candidate) "{{{$/;"	f
source.action_table.edit.func	bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.edit.func(candidates) "{{{$/;"	f
source.action_table.edit.func	bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.edit.func(candidate) "{{{$/;"	f
source.action_table.narrow.func	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.narrow.func	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.open.func	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.open.func(candidate) "{{{$/;"	f
source.action_table.preview.func	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.rename.func	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.rename.func(candidate) "{{{$/;"	f
source.action_table.sigint.func	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigint.func(candidates) "{{{$/;"	f
source.action_table.sigkill.func	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigkill.func(candidates) "{{{$/;"	f
source.action_table.sigterm.func	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigterm.func(candidates) "{{{$/;"	f
source.action_table.start.func	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! s:source.action_table.start.func(candidate) "{{{$/;"	f
source.action_table.unite__new_candidate.func	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.unite__new_candidate.func(candidates) "{{{$/;"	f
source.action_table.unite__new_candidate.func	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.change_candidates	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.change_candidates	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.change_candidates	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/file_list.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/file_list.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/jump.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_drive.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_execute.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.hooks.on_close	bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_execute.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_post_filter	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.vimfiler_check_filetype	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_check_filetype(args, context) "{{{$/;"	f
source.vimfiler_complete	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.vimfiler_gather_candidates	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_buffer_all.complete	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_buffer_all.gather_candidates	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.gather_candidates(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_init	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_init(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_post_filter	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_post_filter(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_syntax(args, context) "{{{$/;"	f
source_buffer_tab.gather_candidates	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_tab.gather_candidates(args, context) "{{{$/;"	f
source_directory.change_candidates	bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.change_candidates(args, context) "{{{$/;"	f
source_directory.complete	bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_directory.hooks.on_close	bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.hooks.on_close(args, context) "{{{$/;"	f
source_directory_async.hooks.on_init	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_init(args, context) "{{{$/;"	f
source_directory_async.hooks.on_post_filter	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_post_filter(args, context) "{{{$/;"	f
source_directory_new.change_candidates	bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory_new.change_candidates(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_init	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_init(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_post_filter	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_post_filter(args, context) "{{{$/;"	f
source_encoding	bundle/jedi-vim/jedi/docs/conf.py	/^source_encoding = 'utf-8'$/;"	v
source_file.change_candidates	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.change_candidates(args, context) "{{{$/;"	f
source_file.complete	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.hooks.on_close	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.hooks.on_close(args, context) "{{{$/;"	f
source_file.vimfiler_check_filetype	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file.vimfiler_complete	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.vimfiler_dummy_candidates	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file.vimfiler_gather_candidates	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.change_candidates	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.change_candidates(args, context) "{{{$/;"	f
source_file_async.gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.gather_candidates(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_init	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_init(args, context) "{{{$/;"	f
source_file_git.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.async_gather_candidates(args, context) "{{{$/;"	f
source_file_git.complete	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_git.gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.async_gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.hooks.on_close	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.hooks.on_close(args, context) "{{{$/;"	f
source_file_neovim.hooks.on_init	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.hooks.on_init(args, context) "{{{$/;"	f
source_file_new.change_candidates	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_new.change_candidates(args, context) "{{{$/;"	f
source_file_rec.async_gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.async_gather_candidates(args, context) "{{{$/;"	f
source_file_rec.complete	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.gather_candidates(args, context) "{{{$/;"	f
source_file_rec.hooks.on_init	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.hooks.on_init(args, context) "{{{$/;"	f
source_file_rec.vimfiler_check_filetype	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file_rec.vimfiler_complete	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.vimfiler_dummy_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file_rec.vimfiler_gather_candidates	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_line.complete	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_line.gather_candidates	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.gather_candidates(args, context) "{{{$/;"	f
source_line.hooks.on_init	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_init(args, context) "{{{$/;"	f
source_line.hooks.on_post_filter	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_post_filter(args, context) "{{{$/;"	f
source_line.hooks.on_syntax	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_syntax(args, context) "{{{$/;"	f
source_line.source__converter	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.source__converter(candidates, context) "{{{$/;"	f
source_path	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def source_path(self):$/;"	m	class:Script
source_suffix	bundle/jedi-vim/jedi/docs/conf.py	/^source_suffix = '.rst'$/;"	v
source_to_unicode	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.common import source_to_unicode$/;"	i
source_to_unicode	bundle/jedi-vim/jedi/jedi/common.py	/^def source_to_unicode(source, encoding=None):$/;"	f
source_to_unicode	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.common import source_to_unicode$/;"	i
source_tokens	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.parser.tokenize import source_tokens$/;"	i
source_tokens	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi.parser.tokenize import (source_tokens, NEWLINE,$/;"	i
source_tokens	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^def source_tokens(source):$/;"	f
sources	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/setup.py	/^                    sources=['module.c'])$/;"	v
span	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spawn	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
special	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^special = group(r'\\r?\\n', r'\\.\\.\\.', r'[:;.,@]')$/;"	v
speed	bundle/jedi-vim/jedi/jedi/debug.py	/^def speed(name):$/;"	f
sphinxy	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def sphinxy(a, b, c, d, x):$/;"	f
sphinxy2	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def sphinxy2(a, b, x):$/;"	f
split3	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_by_displaywidth	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_edit_file	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:split_edit_file() "{{{$/;"	f
split_leftright	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_rtp	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:split_rtp(...) "{{{$/;"	f
splitlines	bundle/jedi-vim/jedi/jedi/common.py	/^def splitlines(string):$/;"	f
splits	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^    def splits(source):$/;"	f	function:test_split_parts
sqlite3	bundle/jedi-vim/jedi/test/completion/on_import.py	/^import sqlite3$/;"	i
sqlite3	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import sqlite3$/;"	i
st	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^st = set()$/;"	v
st	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^st = {1.0}$/;"	v
stage_info	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
star_args_with_named	bundle/jedi-vim/jedi/test/static_analysis/star_arguments.py	/^def star_args_with_named(*args):$/;"	f
star_import_cache_validity	bundle/jedi-vim/jedi/jedi/settings.py	/^star_import_cache_validity = 60.0$/;"	v
star_import_name	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def star_import_name(self):$/;"	m	class:ImportFrom
star_imports	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def star_imports(self):$/;"	m	class:ModuleWrapper
stars	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def stars(self):$/;"	m	class:Param
start_pos	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def start_pos(self):$/;"	m	class:BaseDefinition
start_pos	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    start_pos = 0, 0$/;"	v	class:CompiledObject
start_pos	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^    def start_pos(self):$/;"	m	class:FakeImport
start_pos	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def start_pos(self):$/;"	m	class:BaseNode
start_pos	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def start_pos(self):$/;"	m	class:Leaf
start_pos	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def start_pos(self, value):$/;"	m	class:Leaf
statements	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def statements(self):$/;"	m	class:FunctionExecution
statements	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def statements(self):$/;"	m	class:Scope
stdlib	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.evaluate import stdlib$/;"	i
still	bundle/jedi-vim/jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
stl	bundle/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	bundle/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
str_import_path	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def str_import_path(self):$/;"	m	class:Importer
strchars	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
string	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^import string$/;"	i
string	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^string = '%s %s' % (1, 2)$/;"	v
strip	bundle/vundle/autoload/vundle/installer.vim	/^func! s:strip(str)$/;"	f
strs	bundle/jedi-vim/jedi/test/completion/classes.py	/^strs = TestClass("", '')$/;"	v
strwidth	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f
strwidthpart	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
stuff	bundle/jedi-vim/jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
styles	bundle/jedi-vim/jedi/docs/_themes/flask_theme_support.py	/^    styles = {$/;"	v	class:FlaskyStyle
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sublist	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f
sublist7071	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f
subprocess	bundle/jedi-vim/conftest.py	/^import subprocess$/;"	i
subscopes	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def subscopes(self):$/;"	m	class:CompiledObject
subscopes	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def subscopes(self):$/;"	m	class:FunctionExecution
subscopes	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def subscopes(self):$/;"	m	class:Scope
subseparator	bundle/lightline.vim/autoload/lightline.vim	/^function! s:subseparator(x, y, s, a, b) abort$/;"	f
substitute_last	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suite.after_each	bundle/unite.vim/test/matcher.vim	/^function! s:suite.after_each()$/;"	f
suite.before_each	bundle/unite.vim/test/matcher.vim	/^function! s:suite.before_each()$/;"	f
suite.lua	bundle/unite.vim/test/matcher.vim	/^function! s:suite.lua()$/;"	f
suite.sort	bundle/vimfiler.vim/test/functions.vim	/^function! s:suite.sort()$/;"	f
suite.sorter_rank	bundle/unite.vim/test/sorter.vim	/^function! s:suite.sorter_rank()$/;"	f
suite.source	bundle/unite.vim/test/source.vim	/^function! s:suite.source()$/;"	f
summary	bundle/jedi-vim/jedi/test/run.py	/^    summary = []$/;"	v
sw	bundle/vim-python-pep8-indent/indent/python.vim	/^    function! s:sw()$/;"	f
switch	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:switch(candidate) "{{{$/;"	f
switch	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:switch() "{{{$/;"	f
switch_to_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:switch_to_another_vimfiler() "{{{$/;"	f
switch_to_drive	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:switch_to_drive() "{{{$/;"	f
switch_to_history_directory	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:switch_to_history_directory() "{{{$/;"	f
switch_to_other_window	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:switch_to_other_window() "{{{$/;"	f
switch_vim_buffer_mode	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:switch_vim_buffer_mode() "{{{$/;"	f
syn_stack	bundle/jedi-vim/autoload/jedi.vim	/^function! s:syn_stack()$/;"	f
sync	bundle/vundle/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
sync_active_winnr	bundle/vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
sync_with_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:sync_with_another_vimfiler() "{{{$/;"	f
sync_with_current_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:sync_with_current_vimfiler() "{{{$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	bundle/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#compareLexi	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findInParent	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findInParent(what, where) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang() abort " {{{2$/;"	f
syntastic#util#parseVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#redraw	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#shescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#system	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f
syntax	bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f
syntax_cmd	bundle/vim-colorschemes/colors/delek.vim	/^  let syntax_cmd = "enable"$/;"	v
sys	bundle/jedi-vim/initialize.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/docs/conf.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/__main__.py	/^    import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/cache.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/common.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/jedi/utils.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/scripts/memory_check.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/scripts/wx_check.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/sith.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/completion/imports.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/completion/sys_path.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/helpers.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/run.py	/^    import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    assert len(Script("import sys", 1, 8).goto_definitions()) == 1$/;"	i
sys	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^    import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_regression.py	/^import sys$/;"	i
sys	bundle/jedi-vim/jedi/test/test_utils.py	/^        import sys$/;"	i
sys	bundle/jedi-vim/jedi_vim.py	/^import sys$/;"	i
sys_blabla	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    assert Script("import sys_blabla", 1, 8).goto_definitions() == []$/;"	i
sys_path	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.evaluate import sys_path$/;"	i
sys_path	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^from jedi.evaluate import sys_path, Evaluator$/;"	i
sys_path_with_modifications	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^    def sys_path_with_modifications(self):$/;"	m	class:Importer
sys_path_with_modifications	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def sys_path_with_modifications(evaluator, module):$/;"	f
system	bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	bundle/vimfiler.vim/autoload/vital/_vimfiler/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	bundle/vundle/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
t	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def t(cls, x):$/;"	m	class:E
t	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def t(self):$/;"	m	class:B
t	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import t') == set(['module'])$/;"	i
t_start	bundle/jedi-vim/jedi/test/run.py	/^    t_start = time.time()$/;"	v
tabsize	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^tabsize = 8$/;"	v
tabstop	bundle/vim-python-pep8-indent/spec/indent/indent_spec.rb	/^  def tabstop$/;"	f
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#toggle_pause	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tail	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f
take_while	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
target	bundle/jedi-vim/jedi/test/completion/precedence.py	/^target = ''$/;"	v
target	bundle/jedi-vim/jedi/test/completion/precedence.py	/^target = u''$/;"	v
taropen	bundle/jedi-vim/jedi/test/static_analysis/descriptors.py	/^    def taropen(cls, name, **kwargs):$/;"	m	class:TarFile
tcomment#CollectFileTypes	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, comment_anyway, filetype, ...)$/;"	f
tcomment#Complete	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#DefineType(name, commentdef, ...)$/;"	f
tcomment#GetCommentDef	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GetCommentDef(name, ...)$/;"	f
tcomment#GetLineC	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GetLineC(...)$/;"	f
tcomment#GuessCommentType	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#MaybeReuseOptions	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#MaybeReuseOptions(name) "{{{3$/;"	f
tcomment#Operator	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#ResetOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#ResetOption() "{{{3$/;"	f
tcomment#SetOption	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TextObjectInlineComment	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TextObjectInlineComment() "{{{3$/;"	f
tcomment#TypeExists	bundle/tcomment_vim/autoload/tcomment.vim	/^function! tcomment#TypeExists(name, ...)$/;"	f
tee	bundle/jedi-vim/jedi/test/completion/imports.py	/^from itertools import (tee,$/;"	i
temp	bundle/jedi-vim/jedi/test/completion/ordering.py	/^temp = b;$/;"	v
tempfile	bundle/jedi-vim/jedi/conftest.py	/^import tempfile$/;"	i
tempfile	bundle/jedi-vim/jedi/test/conftest.py	/^import tempfile$/;"	i
templates_path	bundle/jedi-vim/jedi/docs/conf.py	/^templates_path = ['_templates']$/;"	v
term	bundle/lightline.vim/autoload/lightline.vim	/^function! s:term(l) abort$/;"	f
test	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def test(self):$/;"	m	class:TestSuper
test	bundle/jedi-vim/jedi/test/completion/docstring.py	/^    def test(self):$/;"	m	class:Test
test	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^    def test(self, a):$/;"	m	class:A
test	bundle/jedi-vim/jedi/test/refactor/extract.py	/^def test():$/;"	f
test	bundle/jedi-vim/jedi/test/refactor/inline.py	/^def test():$/;"	f
test	bundle/jedi-vim/jedi/test/test_evaluate/absolute_import/unittest.py	/^    def test(self):$/;"	m	class:TestCase
test	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^    def test(*parts):$/;"	f	function:test_split_parts
test	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^    def test(source, end_pos):$/;"	f	function:test_end_newlines
test1	bundle/jedi-vim/jedi/test/refactor/rename.py	/^def test1():$/;"	f
test2	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^    def test2(self):$/;"	m	class:A
test3	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^    def test3(self):$/;"	m	class:A
test_add_dynamic_mods	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_add_dynamic_mods(self):$/;"	m	class:TestRegression
test_add_to_end	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_add_to_end():$/;"	f
test_additional_brackets	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_additional_brackets(self):$/;"	m	class:TestCallSignatures
test_after_from	bundle/jedi-vim/jedi/test/test_integration_import.py	/^def test_after_from():$/;"	f
test_append_on_non_sys_path	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^def test_append_on_non_sys_path():$/;"	f
test_attribute_docstring	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_attribute_docstring(self):$/;"	m	class:TestDocstring
test_backslash	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_backslash():$/;"	f
test_backslash_continuation	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_backslash_continuation(self):$/;"	m	class:TestRegression
test_backslash_continuation_and_bracket	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_backslash_continuation_and_bracket(self):$/;"	m	class:TestRegression
test_backslash_dos_style	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_backslash_dos_style():$/;"	f
test_basedefinition_type	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_basedefinition_type(definition):$/;"	f
test_basedefinition_type_import	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_basedefinition_type_import():$/;"	f
test_basic_parsing	bundle/jedi-vim/jedi/test/test_new_parser.py	/^def test_basic_parsing():$/;"	f
test_basic_parsing	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^def test_basic_parsing():$/;"	f
test_bracket_start	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^def test_bracket_start():$/;"	f
test_brackets_in_string_literals	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_brackets_in_string_literals(self):$/;"	m	class:TestCallSignatures
test_buildout_detection	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^def test_buildout_detection():$/;"	f
test_builtin	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def test_builtin(self):$/;"	m	class:MixinTestFullName
test_builtins	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_builtins(self):$/;"	m	class:TestParams
test_cache_call_signatures	bundle/jedi-vim/jedi/test/test_cache.py	/^def test_cache_call_signatures():$/;"	f
test_cache_line_split_issues	bundle/jedi-vim/jedi/test/test_cache.py	/^def test_cache_line_split_issues():$/;"	f
test_call_signature_on_module	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_call_signature_on_module(self):$/;"	m	class:TestCallSignatures
test_call_signatures_empty_parentheses_pre_space	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_call_signatures_empty_parentheses_pre_space(self):$/;"	m	class:TestCallSignatures
test_call_signatures_extension	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^def test_call_signatures_extension():$/;"	f
test_call_signatures_stdlib	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^def test_call_signatures_stdlib():$/;"	f
test_call_signatures_whitespace	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_call_signatures_whitespace(self):$/;"	m	class:TestCallSignatures
test_call_type	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def test_call_type(self):$/;"	m	class:TestCallAndName
test_calls	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_calls(self):$/;"	m	class:TestSetupReadline
test_can_complete_when_shadowing	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^def test_can_complete_when_shadowing():$/;"	f
test_carriage_return_splitting	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_carriage_return_splitting():$/;"	f
test_carriage_return_statements	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_carriage_return_statements():$/;"	f
test_chained_calls	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_chained_calls(self):$/;"	m	class:TestCallSignatures
test_change_and_undo	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_change_and_undo():$/;"	f
test_class_and_if	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_class_and_if():$/;"	f
test_class_call	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_class_call(self):$/;"	m	class:TestGotoAssignments
test_class_call_signature	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_class_call_signature():$/;"	f
test_class_func_if	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_class_func_if():$/;"	f
test_class_in_docstr	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_class_in_docstr():$/;"	f
test_class_mro	bundle/jedi-vim/jedi/test/test_evaluate/test_representation.py	/^def test_class_mro():$/;"	f
test_class_with_class_var	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_class_with_class_var():$/;"	f
test_colorama	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_colorama(self):$/;"	m	class:TestSetupReadline
test_complete_at_zero	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^def test_complete_at_zero():$/;"	f
test_complete_on_empty_import	bundle/jedi-vim/jedi/test/test_integration_import.py	/^def test_complete_on_empty_import():$/;"	f
test_complete_raw_function	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_function(self):$/;"	m	class:TestInterpreterAPI
test_complete_raw_function_different_name	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_function_different_name(self):$/;"	m	class:TestInterpreterAPI
test_complete_raw_instance	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_instance(self):$/;"	m	class:TestInterpreterAPI
test_complete_raw_module	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_complete_raw_module(self):$/;"	m	class:TestInterpreterAPI
test_completion	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_completion(self):$/;"	m	class:TestDocstring
test_completion	bundle/jedi-vim/jedi/test/test_integration.py	/^def test_completion(case, monkeypatch):$/;"	f
test_completion_docstring	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_completion_docstring():$/;"	f
test_completion_interference	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^def test_completion_interference():$/;"	f
test_completion_on_complex_literals	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_completion_on_complex_literals():$/;"	f
test_completion_on_hex_literals	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_completion_on_hex_literals():$/;"	f
test_completion_on_number_literals	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_completion_on_number_literals():$/;"	f
test_completion_params	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_completion_params():$/;"	f
test_completions	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^def test_completions():$/;"	f
test_complex	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_complex(self):$/;"	m	class:TestCallSignatures
test_decorator	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_decorator():$/;"	f
test_decorator_in_class	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_decorator_in_class(self):$/;"	m	class:TestCallSignatures
test_dict_literal_in_incomplete_call	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^def test_dict_literal_in_incomplete_call():$/;"	f
test_dir	bundle/jedi-vim/jedi/test/helpers.py	/^test_dir = dirname(abspath(__file__))$/;"	v
test_doc	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^def test_doc():$/;"	f
test_docstring_instance	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_docstring_instance(self):$/;"	m	class:TestDocstring
test_docstrings_param_type	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_docstrings_param_type(self):$/;"	m	class:TestDocstring
test_docstrings_type_dotted_import	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_docstrings_type_dotted_import(self):$/;"	m	class:TestDocstring
test_docstrings_type_str	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_docstrings_type_str(self):$/;"	m	class:TestDocstring
test_dont_break_imports_without_namespaces	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^def test_dont_break_imports_without_namespaces():$/;"	f
test_dotted_assignment	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def test_dotted_assignment(self):$/;"	m	class:TestDefinedNames
test_empty_decorator	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def test_empty_decorator():$/;"	f
test_empty_script	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_empty_script():$/;"	f
test_end_newlines	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^def test_end_newlines():$/;"	f
test_end_pos	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_end_pos():$/;"	f
test_end_pos_error_correction	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_end_pos_error_correction():$/;"	f
test_end_pos_line	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_end_pos_line(self):$/;"	m	class:TestRegression
test_end_pos_multi_line	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_end_pos_multi_line(self):$/;"	m	class:TokenTest
test_end_pos_one_line	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_end_pos_one_line(self):$/;"	m	class:TokenTest
test_error_correction_with	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_error_correction_with():$/;"	f
test_explicit_absolute_imports	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^def test_explicit_absolute_imports():$/;"	f
test_fake_docstr	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^def test_fake_docstr():$/;"	f
test_fake_loading	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^def test_fake_loading():$/;"	f
test_fake_parentheses	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_fake_parentheses():$/;"	f
test_files	bundle/jedi-vim/jedi/test/run.py	/^    test_files = {}$/;"	v
test_find_module_py33	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^def test_find_module_py33():$/;"	f
test_flask_ext	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^def test_flask_ext(script, name):$/;"	f
test_flow_call	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_flow_call(self):$/;"	m	class:TestCallSignatures
test_flows	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_flows(self):$/;"	m	class:TestCallSignatures
test_follow_definition_land_on_import	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_follow_definition_land_on_import():$/;"	f
test_follow_definition_nested_import	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_follow_definition_nested_import():$/;"	f
test_follow_import_incomplete	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_follow_import_incomplete():$/;"	f
test_follow_imports	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^def test_follow_imports():$/;"	f
test_for	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_for():$/;"	f
test_for_on_one_line	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_for_on_one_line():$/;"	f
test_form_feed_characters	bundle/jedi-vim/jedi/test/test_parser/test_user_context.py	/^def test_form_feed_characters():$/;"	f
test_from_import	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def test_from_import(self):$/;"	m	class:TestFullNameWithGotoDefinitions
test_func_with_for_and_comment	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_func_with_for_and_comment():$/;"	f
test_func_with_if	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_func_with_if():$/;"	f
test_function_call_signature_in_doc	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_function_call_signature_in_doc():$/;"	f
test_function_definitions_should_break	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_function_definitions_should_break(self):$/;"	m	class:TestCallSignatures
test_function_doc	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_function_doc(self):$/;"	m	class:TestDocstring
test_function_execution	bundle/jedi-vim/jedi/test/test_evaluate/test_representation.py	/^def test_function_execution():$/;"	f
test_function_whitespace	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_function_whitespace(self):$/;"	m	class:TokenTest
test_generator	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_generator(self):$/;"	m	class:TestRegression
test_get_code	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^def test_get_code():$/;"	f
test_get_definitions_flat	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def test_get_definitions_flat(self):$/;"	m	class:TestDefinedNames
test_get_sys_path	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^def test_get_sys_path(monkeypatch):$/;"	f
test_getitem_side_effects	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_getitem_side_effects(self):$/;"	m	class:TestInterpreterAPI
test_goto_assignments_keyword	bundle/jedi-vim/jedi/test/test_integration_keyword.py	/^def test_goto_assignments_keyword():$/;"	f
test_goto_assignments_on_non_name	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_goto_assignments_on_non_name():$/;"	f
test_goto_definition_at_zero	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^def test_goto_definition_at_zero():$/;"	f
test_goto_definition_cursor	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_goto_definition_cursor(self):$/;"	m	class:TestRegression
test_goto_definition_not_multiple	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_goto_definition_not_multiple():$/;"	f
test_goto_definition_on_import	bundle/jedi-vim/jedi/test/test_integration_import.py	/^def test_goto_definition_on_import():$/;"	f
test_goto_definitions_on_non_name	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_goto_definitions_on_non_name():$/;"	f
test_goto_following_on_imports	bundle/jedi-vim/jedi/test/test_integration_import.py	/^def test_goto_following_on_imports():$/;"	f
test_hex_values_in_docstring	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_hex_values_in_docstring():$/;"	f
test_identifier_contains_unicode	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_identifier_contains_unicode(self):$/;"	m	class:TokenTest
test_if	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_if():$/;"	f
test_if_simple	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_if_simple():$/;"	f
test_import	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_import(self):$/;"	m	class:TestGotoAssignments
test_import	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_import(self):$/;"	m	class:TestIsDefinition
test_import	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_import(self):$/;"	m	class:TestSetupReadline
test_import_alias	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_import_alias(self):$/;"	m	class:TestGotoAssignments
test_import_empty	bundle/jedi-vim/jedi/test/test_api/test_api_classes_follow_definition.py	/^def test_import_empty():$/;"	f
test_import_names	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def test_import_names(self):$/;"	m	class:TestImports
test_import_not_in_sys_path	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^def test_import_not_in_sys_path():$/;"	f
test_import_priorities	bundle/jedi-vim/jedi/test/completion/imports.py	/^def test_import_priorities():$/;"	f
test_imports	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def test_imports(self):$/;"	m	class:TestFullDefinedName
test_imports_on_global_namespace_without_path	bundle/jedi-vim/jedi/test/test_integration_import.py	/^def test_imports_on_global_namespace_without_path():$/;"	f
test_incomplete_function	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_incomplete_function():$/;"	f
test_incomplete_list_comprehension	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_incomplete_list_comprehension():$/;"	f
test_init_extension_module	bundle/jedi-vim/jedi/test/test_evaluate/test_extension.py	/^def test_init_extension_module():$/;"	f
test_integration	bundle/jedi-vim/test_integration.py	/^def test_integration(case, monkeypatch, pytestconfig):$/;"	f
test_is_keyword	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_is_keyword():$/;"	f
test_issue436	bundle/jedi-vim/jedi/test/test_integration_analysis.py	/^def test_issue436():$/;"	f
test_keyword	bundle/jedi-vim/jedi/test/test_integration_keyword.py	/^def test_keyword():$/;"	f
test_line_number_errors	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_line_number_errors():$/;"	f
test_list	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_list(self):$/;"	m	class:TestInterpreterAPI
test_literal_type	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def test_literal_type(self):$/;"	m	class:TestCallAndName
test_loading_unicode_files_with_bad_global_charset	bundle/jedi-vim/jedi/test/test_regression.py	/^def test_loading_unicode_files_with_bad_global_charset(monkeypatch, tmpdir):$/;"	f
test_local_import	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_local_import(self):$/;"	m	class:TestSetupReadline
test_local_names	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def test_local_names(self):$/;"	m	class:TestFullDefinedName
test_magic_methods	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_magic_methods(self):$/;"	m	class:TestSetupReadline
test_module	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_module():$/;"	f
test_modulepickling_change_cache_dir	bundle/jedi-vim/jedi/test/test_cache.py	/^def test_modulepickling_change_cache_dir(monkeypatch, tmpdir):$/;"	f
test_modulepickling_delete_incompatible_cache	bundle/jedi-vim/jedi/test/test_cache.py	/^def test_modulepickling_delete_incompatible_cache():$/;"	f
test_modules	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_modules(self):$/;"	m	class:TestSetupReadline
test_multi_line_for	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_multi_line_for():$/;"	f
test_multi_line_params	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_multi_line_params():$/;"	f
test_multibyte_script	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^def test_multibyte_script():$/;"	f
test_multiple_assignment	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def test_multiple_assignment(self):$/;"	m	class:TestDefinedNames
test_multiple_docstrings	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_multiple_docstrings(self):$/;"	m	class:TestDocstring
test_multiple_imports	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def test_multiple_imports(self):$/;"	m	class:TestDefinedNames
test_multiple_signatures	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_multiple_signatures(self):$/;"	m	class:TestCallSignatures
test_name	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_name(self):$/;"	m	class:TestIsDefinition
test_name_and_call_positions	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def test_name_and_call_positions(self):$/;"	m	class:TestCallAndName
test_named_import	bundle/jedi-vim/jedi/test/test_integration_import.py	/^def test_named_import():$/;"	f
test_named_params	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_named_params(self):$/;"	m	class:TestGotoAssignments
test_namedtuple_list	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^def test_namedtuple_list():$/;"	f
test_namedtuple_str	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^def test_namedtuple_str(letter, expected):$/;"	f
test_namespace_package	bundle/jedi-vim/jedi/test/test_evaluate/test_namespace_package.py	/^def test_namespace_package():$/;"	f
test_nested	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_nested(self):$/;"	m	class:TestSetupReadline
test_nested_class	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def test_nested_class(self):$/;"	m	class:TestDefinedNames
test_nested_definitions	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^    def test_nested_definitions(self):$/;"	m	class:TestDefinedNames
test_nested_funcs	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_nested_funcs():$/;"	f
test_newline_positions	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_newline_positions():$/;"	f
test_no_duplicate_modules	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^def test_no_duplicate_modules():$/;"	f
test_no_explicit_absolute_imports	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^def test_no_explicit_absolute_imports():$/;"	f
test_no_signature	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^def test_no_signature():$/;"	f
test_no_statement_parent	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_no_statement_parent(self):$/;"	m	class:TestRegression
test_not_importable_file	bundle/jedi-vim/jedi/test/test_evaluate/test_imports.py	/^def test_not_importable_file():$/;"	f
test_numpydoc_alternative_types	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_numpydoc_alternative_types(self):$/;"	m	class:TestDocstring
test_numpydoc_docstring	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_numpydoc_docstring(self):$/;"	m	class:TestDocstring
test_numpydoc_docstring_set_of_values	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^    def test_numpydoc_docstring_set_of_values(self):$/;"	m	class:TestDocstring
test_on_function	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_on_function(self):$/;"	m	class:TestParent
test_one_statement_func	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_one_statement_func():$/;"	f
test_open_parentheses	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_open_parentheses():$/;"	f
test_operators	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^def test_operators():$/;"	f
test_os_nowait	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_os_nowait(self):$/;"	m	class:TestRegression
test_os_path_join	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def test_os_path_join(self):$/;"	m	class:MixinTestFullName
test_os_path_join	bundle/jedi-vim/jedi/test/test_speed.py	/^    def test_os_path_join(self):$/;"	m	class:TestSpeed
test_param_endings	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_param_endings():$/;"	f
test_param_name	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_param_name(self):$/;"	m	class:TestParams
test_param_splitting	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_param_splitting():$/;"	f
test_parent	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_parent(self):$/;"	m	class:TestParent
test_parent_dir_with_file	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^def test_parent_dir_with_file():$/;"	f
test_parent_on_completion	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_parent_on_completion(self):$/;"	m	class:TestParent
test_parentheses	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_parentheses(self):$/;"	m	class:TestGotoAssignments
test_parse_function_doc_illegal_docstr	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^def test_parse_function_doc_illegal_docstr():$/;"	f
test_path_from_invalid_sys_path_assignment	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^def test_path_from_invalid_sys_path_assignment():$/;"	f
test_path_from_sys_path_assignment	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^def test_path_from_sys_path_assignment():$/;"	f
test_paths_from_assignment	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^def test_paths_from_assignment():$/;"	f
test_points_in_completion	bundle/jedi-vim/jedi/test/test_regression.py	/^    def test_points_in_completion(self):$/;"	m	class:TestRegression
test_position_none_if_builtin	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_position_none_if_builtin():$/;"	f
test_positions	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_positions():$/;"	f
test_precedence_slowdown	bundle/jedi-vim/jedi/test/test_speed.py	/^    def test_precedence_slowdown(self):$/;"	m	class:TestSpeed
test_preexisting_values	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_preexisting_values(self):$/;"	m	class:TestSetupReadline
test_preload_modules	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_preload_modules():$/;"	f
test_property_error	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_property_error(self):$/;"	m	class:TestInterpreterAPI
test_pyc	bundle/jedi-vim/jedi/test/test_evaluate/test_pyc.py	/^def test_pyc():$/;"	f
test_quoted_strings	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_quoted_strings(self):$/;"	m	class:TokenTest
test_refactor	bundle/jedi-vim/jedi/test/test_integration.py	/^def test_refactor(refactor_case):$/;"	f
test_repetition	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_repetition(self):$/;"	m	class:TestGotoAssignments
test_return	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_return(self):$/;"	m	class:TestCallSignatures
test_scipy_speed	bundle/jedi-vim/jedi/test/test_speed.py	/^    def test_scipy_speed(self):$/;"	m	class:TestSpeed
test_settings_module	bundle/jedi-vim/jedi/test/test_jedi_system.py	/^def test_settings_module():$/;"	f
test_signature_index	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^def test_signature_index():$/;"	f
test_signature_is_definition	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^def test_signature_is_definition():$/;"	f
test_signature_params	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_signature_params():$/;"	f
test_simple	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_simple(self):$/;"	m	class:TestCallSignatures
test_simple	bundle/jedi-vim/jedi/test/test_debug.py	/^def test_simple():$/;"	f
test_simple	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^def test_simple():$/;"	f
test_simple	bundle/jedi-vim/jedi/test/test_utils.py	/^    def test_simple(self):$/;"	m	class:TestSetupReadline
test_simple_annotations	bundle/jedi-vim/jedi/test/test_evaluate/test_annotations.py	/^def test_simple_annotations():$/;"	f
test_simple_no_whitespace	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_simple_no_whitespace(self):$/;"	m	class:TokenTest
test_simple_with_whitespace	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^    def test_simple_with_whitespace(self):$/;"	m	class:TokenTest
test_slice	bundle/jedi-vim/jedi/test/test_api/test_interpreter.py	/^    def test_slice(self):$/;"	m	class:TestInterpreterAPI
test_split_parts	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_split_parts():$/;"	f
test_star_import_cache_duration	bundle/jedi-vim/jedi/test/test_cache.py	/^def test_star_import_cache_duration():$/;"	f
test_static_analysis	bundle/jedi-vim/jedi/test/test_integration.py	/^def test_static_analysis(static_analysis_case):$/;"	f
test_stmt	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    def test_stmt(self):$/;"	m	class:TestIsDefinition
test_strange_parentheses	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_strange_parentheses():$/;"	f
test_string_literals	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^def test_string_literals():$/;"	f
test_string_literals	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_string_literals():$/;"	f
test_sub_module	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^def test_sub_module():$/;"	f
test_subscope_names	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^    def test_subscope_names(self):$/;"	m	class:TestSubscopes
test_sys_path_with_modifications	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^def test_sys_path_with_modifications():$/;"	f
test_tokenizer_with_string_literal_backslash	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^def test_tokenizer_with_string_literal_backslash():$/;"	f
test_tuple_mapping	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^    def test_tuple_mapping(self):$/;"	m	class:TestFullNameWithGotoDefinitions
test_type	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^def test_type():$/;"	f
test_unicode_attribute	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^def test_unicode_attribute():$/;"	f
test_unicode_script	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^def test_unicode_script():$/;"	f
test_unicode_string	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_unicode_string():$/;"	f
test_unterminated_strings	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_unterminated_strings(self):$/;"	m	class:TestCallSignatures
test_ur_literals	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^def test_ur_literals():$/;"	f
test_usage_description	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^def test_usage_description():$/;"	f
test_user_statement_on_import	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^def test_user_statement_on_import():$/;"	f
test_valid_call	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_valid_call(self):$/;"	m	class:TestCallSignatures
test_version_info	bundle/jedi-vim/jedi/test/test_utils.py	/^def test_version_info():$/;"	f
test_whitespace_before_bracket	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^    def test_whitespace_before_bracket(self):$/;"	m	class:TestCallSignatures
test_wrong_indentation	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^def test_wrong_indentation():$/;"	f
tests_fail	bundle/jedi-vim/jedi/test/run.py	/^    tests_fail = 0$/;"	v
texinfo_documents	bundle/jedi-vim/jedi/docs/conf.py	/^texinfo_documents = [$/;"	v
text	bundle/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	bundle/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	bundle/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
textdialog	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f
textwrap	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^import textwrap$/;"	i
textwrap	bundle/jedi-vim/jedi/test/test_api/test_defined_names.py	/^import textwrap$/;"	i
textwrap	bundle/jedi-vim/jedi/test/test_api/test_full_name.py	/^import textwrap$/;"	i
textwrap	bundle/jedi-vim/jedi/test/test_regression.py	/^import textwrap$/;"	i
the_pkg	bundle/jedi-vim/jedi/test/completion/import_tree/__init__.py	/^the_pkg = invisible_pkg$/;"	v
third	bundle/jedi-vim/jedi/test/completion/dynamic_arrays.py	/^def third():$/;"	f
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	bundle/jedi-vim/jedi/jedi/cache.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/jedi/debug.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/scripts/memory_check.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/scripts/profile.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/scripts/wx_check.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/test/completion/complex.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/test/completion/imports.py	/^    import time$/;"	i
time	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from datetime.time import time$/;"	i
time	bundle/jedi-vim/jedi/test/run.py	/^    import time$/;"	i
time	bundle/jedi-vim/jedi/test/test_api/test_call_signatures.py	/^        run("import time; abc = time; abc.sleep(", 'sleep', 0)$/;"	i
time	bundle/jedi-vim/jedi/test/test_cache.py	/^import time$/;"	i
time	bundle/jedi-vim/jedi/test/test_speed.py	/^import time$/;"	i
time	bundle/vim-colorschemes/colors/xmaslights.vim	/^import time$/;"	m
time_cache	bundle/jedi-vim/jedi/jedi/cache.py	/^def time_cache(time_add_setting):$/;"	f
timedel	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from datetime import timedel$/;"	i
timedel	bundle/jedi-vim/jedi/test/completion/on_import.py	/^from datetime.timedel import timedel$/;"	i
timedelta	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta') == set(['class'])$/;"	i
timedelta	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from datetime import timedelta; timedelta') == set(['class'])$/;"	i
tmpfile	bundle/vim-gitgutter/test/testFileAddedToGit.vim	/^let tmpfile = 'fileAddedToGit.tmp'$/;"	v
tmpfile	bundle/vim-gitgutter/test/testFollowSymlink.vim	/^let tmpfile = 'symlink'$/;"	v
tmpfile	bundle/vim-gitgutter/test/testUntrackedFileOutsideRepo.vim	/^let tmpfile = tempname()$/;"	v
tmpfile	bundle/vim-gitgutter/test/testUntrackedFileWithinRepo.vim	/^let tmpfile = 'untrackedFileWithinRepo.tmp'$/;"	v
to_list	bundle/jedi-vim/jedi/test/completion/arrays.py	/^def to_list(iterable):$/;"	f
today	bundle/jedi-vim/jedi/test/static_analysis/imports.py	/^from datetime.date import today$/;"	i
todo_include_todos	bundle/jedi-vim/jedi/docs/conf.py	/^todo_include_todos = False$/;"	v
toggleIgnoreFilter	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
toggle_auto_highlight	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_highlight() "{{{$/;"	f
toggle_auto_preview	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_preview() "{{{$/;"	f
toggle_mark	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark(map) "{{{$/;"	f
toggle_mark_all_candidates	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_all_candidates() "{{{$/;"	f
toggle_mark_all_lines	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_mark_all_lines() "{{{$/;"	f
toggle_mark_candidates	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_candidates(start, end) "{{{$/;"	f
toggle_mark_current_line	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_mark_current_line(...) "{{{$/;"	f
toggle_mark_lines	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_mark_lines(start, end) "{{{$/;"	f
toggle_maximize_window	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_maximize_window() "{{{$/;"	f
toggle_off	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	bundle/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
toggle_safe_mode	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_safe_mode() "{{{$/;"	f
toggle_simple_mode	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_simple_mode() "{{{$/;"	f
toggle_transpose_window	bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_transpose_window() "{{{$/;"	f
toggle_tree	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_tree(is_recursive) "{{{$/;"	f
toggle_visible_ignore_files	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:toggle_visible_ignore_files() "{{{$/;"	f
tohex	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:tohex( n)$/;"	f
tok_name	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^from jedi.parser.token import (tok_name, N_TOKENS, ENDMARKER, STRING, NUMBER,$/;"	i
token	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser import token$/;"	i
token	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^from jedi.parser import token$/;"	i
tokenize	bundle/jedi-vim/jedi/jedi/parser/__init__.py	/^from jedi.parser import tokenize$/;"	i
tokenize	bundle/jedi-vim/jedi/jedi/parser/pgen2/parse.py	/^from jedi.parser import tokenize$/;"	i
tokenize	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^from jedi.parser import tokenize$/;"	i
tokenize	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi.parser import tokenize, Parser$/;"	i
tokenize	bundle/jedi-vim/jedi/test/completion/imports.py	/^import tokenize$/;"	i
tokenize	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi.parser import Parser, load_grammar, tokenize$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool') == set(['module'])$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('from json import tool; tool') == set(['module'])$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool') == set(['module'])$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool', column=9) == set(['module'])$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json') == set(['module'])$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool') == set(['module'])$/;"	i
tool	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^    assert get_types('import json.tool; json.tool.main') == set(['function'])$/;"	i
top	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^                    debug.warning('Attempted relative import beyond top-level package.')$/;"	i
traceback	bundle/jedi-vim/initialize.py	/^import traceback$/;"	i
traceback	bundle/jedi-vim/jedi/sith.py	/^import traceback$/;"	i
traceback	bundle/jedi-vim/jedi/test/run.py	/^    import traceback$/;"	i
traceback	bundle/jedi-vim/jedi_vim.py	/^import traceback  # for exception output$/;"	i
translate_color	bundle/vim-colorschemes/colors/coffee.vim	/^function! s:translate_color(number)$/;"	f
traverse_parents	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^def traverse_parents(path):$/;"	f
tree	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/api/usages.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/analysis.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/flow_analysis.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/helpers.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^        self._import = name.get_parent_until(tree.Import)$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi.parser import tree$/;"	i
tree	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi.parser import tree$/;"	i
tricky_decorator	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^def tricky_decorator(func):$/;"	f
trim	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:trim(str) abort$/;"	f
triple	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^triple = group("[uUbB]?[rR]?'''", '[uUbB]?[rR]?"""')$/;"	v
triple_quoted	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^triple_quoted = {}$/;"	v
true_obj	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^true_obj = builtin.get_by_name('True')$/;"	v
truncate	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_smart	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
truncate_smart	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
try_except	bundle/jedi-vim/jedi/test/completion/flow_analysis.py	/^def try_except(x):$/;"	f
tup	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^tup = kw(1)$/;"	v
tup	bundle/jedi-vim/jedi/test/completion/types.py	/^tup = ('',2)$/;"	v
tup2	bundle/jedi-vim/jedi/test/completion/types.py	/^tup2 = tuple()$/;"	v
tup3	bundle/jedi-vim/jedi/test/completion/types.py	/^tup3 = 1,""$/;"	v
tup4	bundle/jedi-vim/jedi/test/completion/types.py	/^tup4 = 1,""$/;"	v
two_dots	bundle/jedi-vim/jedi/test/completion/docstring.py	/^def two_dots(a):$/;"	f
two_params	bundle/jedi-vim/jedi/test/static_analysis/arguments.py	/^def two_params(x, y):$/;"	f
typ	bundle/jedi-vim/jedi/test/test_evaluate/test_compiled.py	/^    def typ(string):$/;"	f	function:test_string_literals
type	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def type(self):$/;"	m	class:BaseDefinition
type	bundle/jedi-vim/jedi/jedi/api/classes.py	/^    def type(self):$/;"	m	class:Completion
type	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def type(self):$/;"	m	class:CompiledObject
type	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    type = 'list'$/;"	v	class:ListComprehension
type	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    type = 'funcdef'$/;"	v	class:FunctionExecution
type	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    type = 'file_input'$/;"	v	class:FastModule
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'assert_stmt'$/;"	v	class:AssertStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'classdef'$/;"	v	class:Class
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'comp_for'$/;"	v	class:CompFor
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'decorator'$/;"	v	class:Decorator
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'expr_stmt'$/;"	v	class:ExprStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'file_input'$/;"	v	class:Module
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'for_stmt'$/;"	v	class:ForStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'funcdef'$/;"	v	class:Function
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'global_stmt'$/;"	v	class:GlobalStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'if_stmt'$/;"	v	class:IfStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'import_from'$/;"	v	class:ImportFrom
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'import_name'$/;"	v	class:ImportName
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'keyword'$/;"	v	class:Keyword
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'lambda'$/;"	v	class:Lambda
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'name'$/;"	v	class:Name
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'number'$/;"	v	class:Number
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'operator'$/;"	v	class:Operator
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'param'$/;"	v	class:Param
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'return_stmt'$/;"	v	class:ReturnStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'string'$/;"	v	class:String
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'try_stmt'$/;"	v	class:TryStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'while_stmt'$/;"	v	class:WhileStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'whitespace'$/;"	v	class:Whitespace
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'with_stmt'$/;"	v	class:WithStmt
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = 'yield_expr'$/;"	v	class:YieldExpr
type	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    type = None$/;"	v	class:BaseNode
u	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    u = lambda s: s$/;"	v
u	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    u = lambda s: s.decode('utf-8')$/;"	v
u	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def u(string):$/;"	f
u	bundle/jedi-vim/jedi/jedi/debug.py	/^from jedi._compatibility import encoding, is_py3, u$/;"	i
u	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi._compatibility import unicode, u$/;"	i
u	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^from jedi._compatibility import u$/;"	i
u	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    def u(cls, x):$/;"	m	class:E
u	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^from jedi._compatibility import u, unicode$/;"	i
u	bundle/jedi-vim/jedi/test/test_evaluate/test_absolute_import.py	/^from jedi._compatibility import u$/;"	i
u	bundle/jedi-vim/jedi/test/test_evaluate/test_buildout_detection.py	/^from jedi._compatibility import u$/;"	i
u	bundle/jedi-vim/jedi/test/test_integration_stdlib.py	/^             "garfield.l"$/;"	i
u	bundle/jedi-vim/jedi/test/test_new_parser.py	/^from jedi._compatibility import u$/;"	i
u	bundle/jedi-vim/jedi/test/test_parser/test_fast_parser.py	/^from jedi._compatibility import u$/;"	i
u	bundle/jedi-vim/jedi/test/test_parser/test_get_code.py	/^from jedi._compatibility import u$/;"	i
u	bundle/jedi-vim/jedi/test/test_parser/test_parser.py	/^from jedi._compatibility import u, is_py3$/;"	i
u	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from jedi._compatibility import u, is_py3$/;"	i
u	bundle/jedi-vim/jedi/test/test_regression.py	/^from jedi._compatibility import u$/;"	i
undefined	bundle/jedi-vim/jedi/test/completion/usages.py	/^import undefined$/;"	i
undefined_object	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    def undefined_object(self, obj):$/;"	m	class:Cls
underline_fgbg	bundle/vim-colorschemes/colors/detailed.vim	/^fun! s:underline_fgbg(group, fg, bg)$/;"	f
underscore	bundle/jedi-vim/jedi/test/completion/imports.py	/^def underscore():$/;"	f
underscore_memoization	bundle/jedi-vim/jedi/jedi/api/interpreter.py	/^from jedi.cache import underscore_memoization$/;"	i
underscore_memoization	bundle/jedi-vim/jedi/jedi/cache.py	/^def underscore_memoization(func):$/;"	f
underscore_memoization	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.cache import underscore_memoization, memoize_method$/;"	i
underscore_memoization	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi.cache import underscore_memoization$/;"	i
underscore_memoization	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi.cache import underscore_memoization, cache_star_import$/;"	i
unexpand_tree	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:unexpand_tree() "{{{$/;"	f
unicode	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    unicode = str$/;"	v
unicode	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    unicode = unicode$/;"	v
unicode	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi._compatibility import unicode, builtins$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi._compatibility import unicode, use_metaclass$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/api/usages.py	/^from jedi._compatibility import unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/common.py	/^from jedi._compatibility import unicode, reraise$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi._compatibility import builtins as _builtins, unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/compiled/fake.py	/^from jedi._compatibility import is_py3, builtins, unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/dynamic.py	/^from jedi._compatibility import unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/finder.py	/^from jedi._compatibility import unicode, u$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/imports.py	/^from jedi._compatibility import find_module, unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi._compatibility import use_metaclass, is_py3, unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi._compatibility import unicode, zip_longest$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/precedence.py	/^from jedi._compatibility import unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^from jedi._compatibility import unicode$/;"	i
unicode	bundle/jedi-vim/jedi/jedi/evaluate/sys_path.py	/^from jedi._compatibility import exec_function, unicode$/;"	i
unicode	bundle/jedi-vim/jedi/test/run.py	/^from jedi._compatibility import unicode, is_py3$/;"	i
unicode	bundle/jedi-vim/jedi/test/test_api/test_unicode.py	/^from jedi._compatibility import u, unicode$/;"	i
unicode	bundle/jedi-vim/jedi/test/test_evaluate/test_sys_path.py	/^from jedi._compatibility import unicode$/;"	i
unicode	bundle/jedi-vim/jedi_vim.py	/^    unicode = str$/;"	v
unicode_literals	bundle/jedi-vim/jedi/sith.py	/^from __future__ import print_function, division, unicode_literals$/;"	i
unifystate	bundle/jedi-vim/jedi/jedi/parser/pgen2/pgen.py	/^    def unifystate(self, old, new):$/;"	m	class:DFAState
uniq	bundle/lightline.vim/autoload/lightline.vim	/^function! s:uniq(l) abort$/;"	f
uniq	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unite	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^def unite(iterable):$/;"	f
unite#action#_get_candidate_action_table	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#_get_candidate_action_table(candidate, sources) "{{{$/;"	f
unite#action#do	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#do(action_name, ...) "{{{$/;"	f
unite#action#do_candidates	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#do_candidates(action_name, candidates, ...) "{{{$/;"	f
unite#action#get_action_table	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_action_table(source_name, kind, self_func, ...) "{{{$/;"	f
unite#action#get_alias_table	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_alias_table(source_name, kind, ...) "{{{$/;"	f
unite#action#get_default_action	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_default_action(source_name, kind) "{{{$/;"	f
unite#action#take	bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#take(action_name, candidate, is_parent_action) "{{{$/;"	f
unite#add_previewed_buffer_list	bundle/unite.vim/autoload/unite.vim	/^function! unite#add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#add_source_message	bundle/unite.vim/autoload/unite.vim	/^function! unite#add_source_message(message, source_name) "{{{$/;"	f
unite#all_quit_session	bundle/unite.vim/autoload/unite.vim	/^function! unite#all_quit_session(...)  "{{{$/;"	f
unite#args_complete	bundle/unite.vim/autoload/unite.vim	/^function! unite#args_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#candidates#_gather_pos	bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_gather_pos(offset) "{{{$/;"	f
unite#candidates#_group_post_filters	bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_group_post_filters(candidates) "{{{$/;"	f
unite#candidates#_recache	bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_recache(input, is_force) "{{{$/;"	f
unite#candidates#gather	bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#gather(...) "{{{$/;"	f
unite#clear_message	bundle/unite.vim/autoload/unite.vim	/^function! unite#clear_message() "{{{$/;"	f
unite#complete#args	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#args(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#buffer_name	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#gather	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather(candidates, input) "{{{$/;"	f
unite#complete#gather_lua	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather_lua(candidates, input) "{{{$/;"	f
unite#complete#gather_vim	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather_vim(candidates, input) "{{{$/;"	f
unite#complete#source	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#vimfiler	bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#vimfiler(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_buffer_name	bundle/unite.vim/autoload/unite.vim	/^function! unite#complete_buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_source	bundle/unite.vim/autoload/unite.vim	/^function! unite#complete_source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#custom#action	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#action(kind, name, action) "{{{$/;"	f
unite#custom#alias	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#alias(kind, name, action) "{{{$/;"	f
unite#custom#default_action	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#default_action(kind, default_action) "{{{$/;"	f
unite#custom#get	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get() "{{{$/;"	f
unite#custom#get_profile	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get_profile(profile_name, option_name) "{{{$/;"	f
unite#custom#profile	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#profile(profile_name, option_name, value) "{{{$/;"	f
unite#custom#source	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#source(source_name, option_name, value) "{{{$/;"	f
unite#custom#substitute	bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#substitute(profile, pattern, subst, ...) "{{{$/;"	f
unite#custom_action	bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_action(kind, name, action) "{{{$/;"	f
unite#custom_alias	bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_alias(kind, name, action) "{{{$/;"	f
unite#custom_default_action	bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_default_action(kind, default_action) "{{{$/;"	f
unite#custom_filters	bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_filters(source_name, expr) "{{{$/;"	f
unite#custom_max_candidates	bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_max_candidates(source_name, max) "{{{$/;"	f
unite#custom_source	bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_source(source_name, option_name, value) "{{{$/;"	f
unite#define_filter	bundle/unite.vim/autoload/unite.vim	/^function! unite#define_filter(filter) "{{{$/;"	f
unite#define_kind	bundle/unite.vim/autoload/unite.vim	/^function! unite#define_kind(kind) "{{{$/;"	f
unite#define_source	bundle/unite.vim/autoload/unite.vim	/^function! unite#define_source(source) "{{{$/;"	f
unite#do_action	bundle/unite.vim/autoload/unite.vim	/^function! unite#do_action(action) "{{{$/;"	f
unite#dummy_completefunc	bundle/unite.vim/autoload/unite.vim	/^function! unite#dummy_completefunc(findstart, base) "{{{$/;"	f
unite#exrename#create_buffer	bundle/unite.vim/autoload/unite/exrename.vim	/^function! unite#exrename#create_buffer(candidates, ...) "{{{$/;"	f
unite#filters#converter_default#define	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#define() "{{{$/;"	f
unite#filters#converter_default#get	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#get() "{{{$/;"	f
unite#filters#converter_default#use	bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#use(converters) "{{{$/;"	f
unite#filters#converter_file_directory#define	bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! unite#filters#converter_file_directory#define() "{{{$/;"	f
unite#filters#converter_full_path#define	bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! unite#filters#converter_full_path#define() "{{{$/;"	f
unite#filters#converter_nothing#define	bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! unite#filters#converter_nothing#define() "{{{$/;"	f
unite#filters#converter_relative_abbr#define	bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! unite#filters#converter_relative_abbr#define() "{{{$/;"	f
unite#filters#converter_relative_word#define	bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#define() "{{{$/;"	f
unite#filters#converter_relative_word#lua	bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#lua(candidates, cwd) "{{{$/;"	f
unite#filters#converter_smart_path#define	bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! unite#filters#converter_smart_path#define() "{{{$/;"	f
unite#filters#converter_tail#define	bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! unite#filters#converter_tail#define() "{{{$/;"	f
unite#filters#converter_tail_abbr#define	bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^function! unite#filters#converter_tail_abbr#define() "{{{$/;"	f
unite#filters#escape	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#escape(string) "{{{$/;"	f
unite#filters#filter_matcher	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_matcher(list, expr, context) "{{{$/;"	f
unite#filters#filter_patterns	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#filters#fuzzy_escape	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#fuzzy_escape(string) "{{{$/;"	f
unite#filters#globs2lua_patterns	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2lua_patterns(globs) "{{{$/;"	f
unite#filters#globs2patterns	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2patterns(globs) "{{{$/;"	f
unite#filters#globs2vim_patterns	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2vim_patterns(globs) "{{{$/;"	f
unite#filters#lua_filter_head	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_filter_head(candidates, input) "{{{$/;"	f
unite#filters#lua_filter_patterns	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#filters#lua_fuzzy_matcher	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_fuzzy_matcher(candidates, context, ignorecase) "{{{$/;"	f
unite#filters#lua_matcher	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_matcher(candidates, context, ignorecase) "{{{$/;"	f
unite#filters#matcher_context#define	bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! unite#filters#matcher_context#define() "{{{$/;"	f
unite#filters#matcher_default#define	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#define() "{{{$/;"	f
unite#filters#matcher_default#get	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#get() "{{{$/;"	f
unite#filters#matcher_default#use	bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#use(matchers) "{{{$/;"	f
unite#filters#matcher_fuzzy#define	bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#define() "{{{$/;"	f
unite#filters#matcher_fuzzy#get_fuzzy_input	bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#get_fuzzy_input(input) "{{{$/;"	f
unite#filters#matcher_glob#define	bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#define() "{{{$/;"	f
unite#filters#matcher_glob#glob_matcher	bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#glob_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#matcher_hide_current_file#define	bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^function! unite#filters#matcher_hide_current_file#define() "{{{$/;"	f
unite#filters#matcher_hide_hidden_files#define	bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! unite#filters#matcher_hide_hidden_files#define() "{{{$/;"	f
unite#filters#matcher_migemo#define	bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! unite#filters#matcher_migemo#define() "{{{$/;"	f
unite#filters#matcher_project_files#define	bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^function! unite#filters#matcher_project_files#define() "{{{$/;"	f
unite#filters#matcher_project_ignore_files#define	bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! unite#filters#matcher_project_ignore_files#define() "{{{$/;"	f
unite#filters#matcher_regexp#define	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#define() "{{{$/;"	f
unite#filters#matcher_regexp#get_expr	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#get_expr(input, context) "{{{$/;"	f
unite#filters#matcher_regexp#regexp_matcher	bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#regexp_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#matcher_vimfiler_mask#define	bundle/vimfiler.vim/autoload/unite/filters/matcher_vimfiler_mask.vim	/^function! unite#filters#matcher_vimfiler_mask#define() "{{{$/;"	f
unite#filters#sorter_default#define	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#define() "{{{$/;"	f
unite#filters#sorter_default#get	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#get() "{{{$/;"	f
unite#filters#sorter_default#use	bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#use(sorters) "{{{$/;"	f
unite#filters#sorter_ftime#define	bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! unite#filters#sorter_ftime#define() "{{{$/;"	f
unite#filters#sorter_length#define	bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! unite#filters#sorter_length#define() "{{{$/;"	f
unite#filters#sorter_nothing#define	bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! unite#filters#sorter_nothing#define() "{{{$/;"	f
unite#filters#sorter_rank#_sort	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#_sort(candidates, input, has_lua) "{{{$/;"	f
unite#filters#sorter_rank#define	bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#define() "{{{$/;"	f
unite#filters#sorter_reverse#define	bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! unite#filters#sorter_reverse#define() "{{{$/;"	f
unite#filters#sorter_selecta#_sort	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! unite#filters#sorter_selecta#_sort(candidates, input)$/;"	f
unite#filters#sorter_selecta#define	bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! unite#filters#sorter_selecta#define()$/;"	f
unite#filters#sorter_word#define	bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! unite#filters#sorter_word#define() "{{{$/;"	f
unite#filters#vim_filter_head	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_head(candidates, input) "{{{$/;"	f
unite#filters#vim_filter_pattern	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_pattern(candidates, pattern) "{{{$/;"	f
unite#filters#vim_filter_patterns	bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#force_quit_session	bundle/unite.vim/autoload/unite.vim	/^function! unite#force_quit_session()  "{{{$/;"	f
unite#force_redraw	bundle/unite.vim/autoload/unite.vim	/^function! unite#force_redraw(...) "{{{$/;"	f
unite#get_all_sources	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_all_sources(...) "{{{$/;"	f
unite#get_candidates	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_candidates(...) "{{{$/;"	f
unite#get_context	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_context() "{{{$/;"	f
unite#get_cur_text	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_cur_text() "{{{$/;"	f
unite#get_current_unite	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_current_unite() "{{{$/;"	f
unite#get_data_directory	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_data_directory() "{{{$/;"	f
unite#get_filters	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_filters(...) "{{{$/;"	f
unite#get_input	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_input() "{{{$/;"	f
unite#get_kinds	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_kinds(...) "{{{$/;"	f
unite#get_marked_candidates	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_marked_candidates() "{{{$/;"	f
unite#get_profile	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_profile(profile_name, option_name) "{{{$/;"	f
unite#get_self_functions	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_self_functions() "{{{$/;"	f
unite#get_sources	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_sources(...) "{{{$/;"	f
unite#get_status_string	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_status_string() "{{{$/;"	f
unite#get_unite_candidates	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_unite_candidates() "{{{$/;"	f
unite#get_unite_winnr	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#get_vimfiler_candidates	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_candidates(...) "{{{$/;"	f
unite#get_vimfiler_source_names	bundle/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_source_names() "{{{$/;"	f
unite#handlers#_on_buf_unload	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_buf_unload(bufname)  "{{{$/;"	f
unite#handlers#_on_bufwin_enter	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_bufwin_enter(bufnr)  "{{{$/;"	f
unite#handlers#_on_cursor_hold	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold()  "{{{$/;"	f
unite#handlers#_on_cursor_hold_i	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold_i()  "{{{$/;"	f
unite#handlers#_on_cursor_moved	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved()  "{{{$/;"	f
unite#handlers#_on_cursor_moved_i	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved_i()  "{{{$/;"	f
unite#handlers#_on_insert_char_pre	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_char_pre()  "{{{$/;"	f
unite#handlers#_on_insert_enter	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_enter()  "{{{$/;"	f
unite#handlers#_on_insert_leave	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_leave()  "{{{$/;"	f
unite#handlers#_on_text_changed	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_text_changed()  "{{{$/;"	f
unite#handlers#_restore_updatetime	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_restore_updatetime()  "{{{$/;"	f
unite#handlers#_save_updatetime	bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_save_updatetime()  "{{{$/;"	f
unite#helper#adjustments	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#adjustments(currentwinwidth, the_max_source_name, size) "{{{$/;"	f
unite#helper#call_filter	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_filter(filter_name, candidates, context) "{{{$/;"	f
unite#helper#call_hook	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_hook(sources, hook_name) "{{{$/;"	f
unite#helper#call_source_filters	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_source_filters(filters, candidates, context, source) "{{{$/;"	f
unite#helper#choose_window	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#choose_window() "{{{$/;"	f
unite#helper#convert_source_name	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#convert_source_name(source_name) "{{{$/;"	f
unite#helper#cursor_prompt	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#cursor_prompt() "{{{$/;"	f
unite#helper#get_buffer_directory	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_buffer_directory(bufnr) "{{{$/;"	f
unite#helper#get_candidate_directory	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_candidate_directory(candidate) "{{{$/;"	f
unite#helper#get_choose_windows	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_choose_windows() "{{{$/;"	f
unite#helper#get_current_candidate	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate(...) "{{{$/;"	f
unite#helper#get_current_candidate_linenr	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate_linenr(num) "{{{$/;"	f
unite#helper#get_input	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_input(...) "{{{$/;"	f
unite#helper#get_marked_candidates	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_marked_candidates() "{{{$/;"	f
unite#helper#get_postfix	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_postfix(prefix, is_create, ...) "{{{$/;"	f
unite#helper#get_source_args	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_args(sources) "{{{$/;"	f
unite#helper#get_source_names	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_names(sources) "{{{$/;"	f
unite#helper#get_substitute_input	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input(input) "{{{$/;"	f
unite#helper#get_substitute_input_loop	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input_loop(input, substitute_patterns) "{{{$/;"	f
unite#helper#get_unite_bufnr	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_bufnr(buffer_name) "{{{$/;"	f
unite#helper#get_unite_winnr	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#helper#invalidate_cache	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#invalidate_cache(source_name)  "{{{$/;"	f
unite#helper#is_prompt	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#is_prompt(line) "{{{$/;"	f
unite#helper#join_targets	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#join_targets(targets) "{{{$/;"	f
unite#helper#parse_options	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options(cmdline) "{{{$/;"	f
unite#helper#parse_options_args	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_args(cmdline) "{{{$/;"	f
unite#helper#parse_options_user	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_user(args) "{{{$/;"	f
unite#helper#parse_project_bang	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_project_bang(args) "{{{$/;"	f
unite#helper#paths2candidates	bundle/unite.vim/autoload/unite/helper.vim	/^  function! unite#helper#paths2candidates(paths) "{{{$/;"	f
unite#helper#skip_prompt	bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#skip_prompt() "{{{$/;"	f
unite#init#_candidates	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates(candidates) "{{{$/;"	f
unite#init#_candidates_source	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates_source(candidates, source_name) "{{{$/;"	f
unite#init#_context	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_context(context, ...) "{{{$/;"	f
unite#init#_current_unite	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_current_unite(sources, context) "{{{$/;"	f
unite#init#_default_scripts	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_default_scripts(kind, names) "{{{$/;"	f
unite#init#_filters	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_filters() "{{{$/;"	f
unite#init#_kinds	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_kinds() "{{{$/;"	f
unite#init#_loaded_sources	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_loaded_sources(sources, context) "{{{$/;"	f
unite#init#_sources	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_sources(...) "{{{$/;"	f
unite#init#_tab_variables	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_tab_variables() "{{{$/;"	f
unite#init#_unite_buffer	bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_unite_buffer() "{{{$/;"	f
unite#is_win	bundle/unite.vim/autoload/unite.vim	/^function! unite#is_win() "{{{$/;"	f
unite#kinds#buffer#define	bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! unite#kinds#buffer#define() "{{{$/;"	f
unite#kinds#cdable#define	bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! unite#kinds#cdable#define() "{{{$/;"	f
unite#kinds#command#define	bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! unite#kinds#command#define() "{{{$/;"	f
unite#kinds#common#define	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#define() "{{{$/;"	f
unite#kinds#common#insert_word	bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#insert_word(word, ...) "{{{$/;"	f
unite#kinds#completion#define	bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! unite#kinds#completion#define() "{{{$/;"	f
unite#kinds#directory#define	bundle/unite.vim/autoload/unite/kinds/directory.vim	/^function! unite#kinds#directory#define() "{{{$/;"	f
unite#kinds#file#complete_overwrite_method	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#complete_overwrite_method(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#kinds#file#define	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#define() "{{{$/;"	f
unite#kinds#file#do_action	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_action(candidates, dest_dir, action_name) "{{{$/;"	f
unite#kinds#file#do_rename	bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_rename(old_filename, new_filename) "{{{$/;"	f
unite#kinds#file_base#define	bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! unite#kinds#file_base#define() "{{{$/;"	f
unite#kinds#file_vimfiler_base#define	bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! unite#kinds#file_vimfiler_base#define() "{{{$/;"	f
unite#kinds#guicmd#define	bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! unite#kinds#guicmd#define() "{{{$/;"	f
unite#kinds#jump_list#define	bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! unite#kinds#jump_list#define() "{{{$/;"	f
unite#kinds#openable#define	bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! unite#kinds#openable#define() "{{{$/;"	f
unite#kinds#source#define	bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! unite#kinds#source#define() "{{{$/;"	f
unite#kinds#tab#define	bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! unite#kinds#tab#define() "{{{$/;"	f
unite#kinds#uri#define	bundle/unite.vim/autoload/unite/kinds/uri.vim	/^function! unite#kinds#uri#define() "{{{$/;"	f
unite#kinds#window#define	bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! unite#kinds#window#define() "{{{$/;"	f
unite#kinds#word#define	bundle/unite.vim/autoload/unite/kinds/word.vim	/^function! unite#kinds#word#define() "{{{$/;"	f
unite#loaded_source_names	bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names() "{{{$/;"	f
unite#loaded_source_names_string	bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names_string() "{{{$/;"	f
unite#loaded_sources_list	bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_sources_list() "{{{$/;"	f
unite#mappings#_choose_action	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_choose_action(candidates, ...) "{{{$/;"	f
unite#mappings#_quick_match	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_quick_match(is_jump) "{{{$/;"	f
unite#mappings#cursor_down	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#cursor_down(is_skip_not_matched) "{{{$/;"	f
unite#mappings#cursor_up	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#cursor_up(is_skip_not_matched) "{{{$/;"	f
unite#mappings#define_default_mappings	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#define_default_mappings() "{{{$/;"	f
unite#mappings#do_action	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#do_action(...) "{{{$/;"	f
unite#mappings#get_current_filters	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#get_current_filters() "{{{$/;"	f
unite#mappings#loop_cursor_down	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_down(mode) "{{{$/;"	f
unite#mappings#loop_cursor_up	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_up(mode) "{{{$/;"	f
unite#mappings#narrowing	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#narrowing(word, ...) "{{{$/;"	f
unite#mappings#set_current_filters	bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#set_current_filters(filters) "{{{$/;"	f
unite#path2directory	bundle/unite.vim/autoload/unite.vim	/^function! unite#path2directory(path) "{{{$/;"	f
unite#print_error	bundle/unite.vim/autoload/unite.vim	/^function! unite#print_error(message) "{{{$/;"	f
unite#print_message	bundle/unite.vim/autoload/unite.vim	/^function! unite#print_message(message) "{{{$/;"	f
unite#print_source_error	bundle/unite.vim/autoload/unite.vim	/^function! unite#print_source_error(message, source_name) "{{{$/;"	f
unite#print_source_message	bundle/unite.vim/autoload/unite.vim	/^function! unite#print_source_message(message, source_name) "{{{$/;"	f
unite#quit_session	bundle/unite.vim/autoload/unite.vim	/^function! unite#quit_session()  "{{{$/;"	f
unite#redraw	bundle/unite.vim/autoload/unite.vim	/^function! unite#redraw(...) "{{{$/;"	f
unite#remove_previewed_buffer_list	bundle/unite.vim/autoload/unite.vim	/^function! unite#remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#resume	bundle/unite.vim/autoload/unite.vim	/^function! unite#resume(...) "{{{$/;"	f
unite#set_buffer_name_option	bundle/unite.vim/autoload/unite.vim	/^function! unite#set_buffer_name_option(buffer_name, option_name, value) "{{{$/;"	f
unite#set_context	bundle/unite.vim/autoload/unite.vim	/^function! unite#set_context(context) "{{{$/;"	f
unite#set_current_unite	bundle/unite.vim/autoload/unite.vim	/^function! unite#set_current_unite(unite) "{{{$/;"	f
unite#set_profile	bundle/unite.vim/autoload/unite.vim	/^function! unite#set_profile(profile_name, option_name, value) "{{{$/;"	f
unite#set_substitute_pattern	bundle/unite.vim/autoload/unite.vim	/^function! unite#set_substitute_pattern(buffer_name, pattern, subst, ...) "{{{$/;"	f
unite#smart_map	bundle/unite.vim/autoload/unite.vim	/^function! unite#smart_map(narrow_map, select_map) "{{{$/;"	f
unite#sources#action#define	bundle/unite.vim/autoload/unite/sources/action.vim	/^function! unite#sources#action#define()$/;"	f
unite#sources#alias#define	bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! unite#sources#alias#define()$/;"	f
unite#sources#bookmark#_append	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#_append(filename) "{{{$/;"	f
unite#sources#bookmark#define	bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#define() "{{{$/;"	f
unite#sources#buffer#define	bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! unite#sources#buffer#define() "{{{$/;"	f
unite#sources#buffer#variables#append	bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#append(bufnr) "{{{$/;"	f
unite#sources#buffer#variables#get_buffer_list	bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#get_buffer_list() "{{{$/;"	f
unite#sources#change#define	bundle/unite.vim/autoload/unite/sources/change.vim	/^function! unite#sources#change#define() "{{{$/;"	f
unite#sources#command#define	bundle/unite.vim/autoload/unite/sources/command.vim	/^function! unite#sources#command#define() "{{{$/;"	f
unite#sources#directory#define	bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! unite#sources#directory#define() "{{{$/;"	f
unite#sources#file#_clear_cache	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_clear_cache() "{{{$/;"	f
unite#sources#file#_get_files	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_files(input, context) "{{{$/;"	f
unite#sources#file#_get_input	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_input(path, context) "{{{$/;"	f
unite#sources#file#_get_path	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_path(args, context) "{{{$/;"	f
unite#sources#file#complete_directory	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_directory(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#complete_file	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_file(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#copy_files	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#copy_files(dest, srcs) "{{{$/;"	f
unite#sources#file#create_file_dict	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_file_dict(file, is_relative_path, ...) "{{{$/;"	f
unite#sources#file#create_vimfiler_dict	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_vimfiler_dict(candidate, exts) "{{{$/;"	f
unite#sources#file#define	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#define() "{{{$/;"	f
unite#sources#file#delete_files	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#delete_files(srcs) "{{{$/;"	f
unite#sources#file#get_file_source	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#get_file_source() "{{{$/;"	f
unite#sources#file#move_files	bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#move_files(dest, srcs) "{{{$/;"	f
unite#sources#file_list#define	bundle/unite.vim/autoload/unite/sources/file_list.vim	/^function! unite#sources#file_list#define() "{{{$/;"	f
unite#sources#file_point#define	bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! unite#sources#file_point#define() "{{{$/;"	f
unite#sources#find#define	bundle/unite.vim/autoload/unite/sources/find.vim	/^function! unite#sources#find#define() "{{{$/;"	f
unite#sources#function#define	bundle/unite.vim/autoload/unite/sources/function.vim	/^function! unite#sources#function#define() "{{{$/;"	f
unite#sources#grep#define	bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! unite#sources#grep#define() "{{{$/;"	f
unite#sources#history_input#define	bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! unite#sources#history_input#define()$/;"	f
unite#sources#history_unite#add	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! unite#sources#history_unite#add(unite)"{{{$/;"	f
unite#sources#history_unite#define	bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! unite#sources#history_unite#define()$/;"	f
unite#sources#history_yank#_append	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! unite#sources#history_yank#_append() "{{{$/;"	f
unite#sources#history_yank#define	bundle/unite.vim/autoload/unite/sources/history_yank.vim	/^function! unite#sources#history_yank#define() "{{{$/;"	f
unite#sources#interactive#define	bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! unite#sources#interactive#define()$/;"	f
unite#sources#jump#define	bundle/unite.vim/autoload/unite/sources/jump.vim	/^function! unite#sources#jump#define() "{{{$/;"	f
unite#sources#jump_point#define	bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! unite#sources#jump_point#define() "{{{$/;"	f
unite#sources#launcher#define	bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#define() "{{{$/;"	f
unite#sources#launcher#get_executables	bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#get_executables(path) "{{{$/;"	f
unite#sources#line#define	bundle/unite.vim/autoload/unite/sources/line.vim	/^function! unite#sources#line#define() "{{{$/;"	f
unite#sources#mapping#define	bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! unite#sources#mapping#define() "{{{$/;"	f
unite#sources#menu#define	bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! unite#sources#menu#define()$/;"	f
unite#sources#output#define	bundle/unite.vim/autoload/unite/sources/output.vim	/^function! unite#sources#output#define() "{{{$/;"	f
unite#sources#process#define	bundle/unite.vim/autoload/unite/sources/process.vim	/^function! unite#sources#process#define() "{{{$/;"	f
unite#sources#rec#_append	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#_append() "{{{$/;"	f
unite#sources#rec#define	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#define() "{{{$/;"	f
unite#sources#register#define	bundle/unite.vim/autoload/unite/sources/register.vim	/^function! unite#sources#register#define() "{{{$/;"	f
unite#sources#resume#define	bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! unite#sources#resume#define() "{{{$/;"	f
unite#sources#runtimepath#define	bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! unite#sources#runtimepath#define() "{{{$/;"	f
unite#sources#script#define	bundle/unite.vim/autoload/unite/sources/script.vim	/^function! unite#sources#script#define()$/;"	f
unite#sources#source#define	bundle/unite.vim/autoload/unite/sources/source.vim	/^function! unite#sources#source#define() "{{{$/;"	f
unite#sources#tab#define	bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! unite#sources#tab#define() "{{{$/;"	f
unite#sources#vimfiler_drive#define	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_drive.vim	/^function! unite#sources#vimfiler_drive#define() "{{{$/;"	f
unite#sources#vimfiler_execute#define	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_execute.vim	/^function! unite#sources#vimfiler_execute#define() "{{{$/;"	f
unite#sources#vimfiler_history#define	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_history.vim	/^function! unite#sources#vimfiler_history#define() "{{{$/;"	f
unite#sources#vimfiler_mask#define	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_mask.vim	/^function! unite#sources#vimfiler_mask#define() "{{{$/;"	f
unite#sources#vimfiler_popd#define	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^function! unite#sources#vimfiler_popd#define() "{{{$/;"	f
unite#sources#vimfiler_popd#pushd	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_popd.vim	/^function! unite#sources#vimfiler_popd#pushd() "{{{$/;"	f
unite#sources#vimfiler_sort#define	bundle/vimfiler.vim/autoload/unite/sources/vimfiler_sort.vim	/^function! unite#sources#vimfiler_sort#define() "{{{$/;"	f
unite#sources#vimgrep#define	bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! unite#sources#vimgrep#define() "{{{$/;"	f
unite#sources#window#define	bundle/unite.vim/autoload/unite/sources/window.vim	/^function! unite#sources#window#define() "{{{$/;"	f
unite#sources#window_gui#define	bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! unite#sources#window_gui#define() "{{{$/;"	f
unite#start	bundle/unite.vim/autoload/unite.vim	/^function! unite#start(...) "{{{$/;"	f
unite#start#_pos	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#_pos(buffer_name, direction, count) "{{{$/;"	f
unite#start#complete	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#complete(sources, ...) "{{{$/;"	f
unite#start#get_candidates	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_candidates(sources, ...) "{{{$/;"	f
unite#start#get_vimfiler_candidates	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_vimfiler_candidates(sources, ...) "{{{$/;"	f
unite#start#resume	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume(buffer_name, ...) "{{{$/;"	f
unite#start#resume_from_temporary	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume_from_temporary(context)  "{{{$/;"	f
unite#start#script	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#script(sources, ...) "{{{$/;"	f
unite#start#standard	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#standard(sources, ...) "{{{$/;"	f
unite#start#temporary	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#temporary(sources, ...) "{{{$/;"	f
unite#start#vimfiler_check_filetype	bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#vimfiler_check_filetype(sources, ...) "{{{$/;"	f
unite#start_complete	bundle/unite.vim/autoload/unite.vim	/^function! unite#start_complete(...) "{{{$/;"	f
unite#start_script	bundle/unite.vim/autoload/unite.vim	/^function! unite#start_script(...) "{{{$/;"	f
unite#start_temporary	bundle/unite.vim/autoload/unite.vim	/^function! unite#start_temporary(...) "{{{$/;"	f
unite#substitute_path_separator	bundle/unite.vim/autoload/unite.vim	/^function! unite#substitute_path_separator(path) "{{{$/;"	f
unite#take_action	bundle/unite.vim/autoload/unite.vim	/^function! unite#take_action(action_name, candidate) "{{{$/;"	f
unite#take_parents_action	bundle/unite.vim/autoload/unite.vim	/^function! unite#take_parents_action(action_name, candidate, extend_candidate) "{{{$/;"	f
unite#undef_filter	bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_filter(name) "{{{$/;"	f
unite#undef_kind	bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_kind(name) "{{{$/;"	f
unite#undef_source	bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_source(name) "{{{$/;"	f
unite#util#alternate_buffer	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#alternate_buffer() "{{{$/;"	f
unite#util#command_with_restore_cursor	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#command_with_restore_cursor(command) "{{{$/;"	f
unite#util#convert2list	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#convert2list(expr) "{{{$/;"	f
unite#util#escape_file_searching	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_file_searching(buffer_name)$/;"	f
unite#util#escape_match	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_match(str) "{{{$/;"	f
unite#util#escape_pattern	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_pattern(...)$/;"	f
unite#util#escape_shell	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_shell(str) "{{{$/;"	f
unite#util#expand	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#expand(path) "{{{$/;"	f
unite#util#get_last_errmsg	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_errmsg()$/;"	f
unite#util#get_last_status	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_status(...)$/;"	f
unite#util#get_name	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_name(list, name, default) "{{{$/;"	f
unite#util#get_vital	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_vital() "{{{$/;"	f
unite#util#glob	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#glob(pattern, ...) "{{{$/;"	f
unite#util#has_lua	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_lua()$/;"	f
unite#util#has_vimproc	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_vimproc(...)$/;"	f
unite#util#iconv	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#iconv(...)$/;"	f
unite#util#index_name	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#index_name(list, name) "{{{$/;"	f
unite#util#input	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input(prompt, ...) "{{{$/;"	f
unite#util#input_directory	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_directory(message) "{{{$/;"	f
unite#util#input_yesno	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_yesno(message) "{{{$/;"	f
unite#util#is_cmdwin	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_cmdwin() "{{{$/;"	f
unite#util#is_mac	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_mac(...)$/;"	f
unite#util#is_sudo	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_sudo() "{{{$/;"	f
unite#util#is_win	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_win(...)$/;"	f
unite#util#is_windows	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_windows(...)$/;"	f
unite#util#lcd	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#lcd(dir) "{{{$/;"	f
unite#util#move	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#move(src, dest) "{{{$/;"	f
unite#util#open	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#open(path) "{{{$/;"	f
unite#util#path2directory	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2directory(...)$/;"	f
unite#util#path2project_directory	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2project_directory(...)$/;"	f
unite#util#print_error	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#print_error(...)$/;"	f
unite#util#read_lines	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#read_lines(source, ...) "{{{$/;"	f
unite#util#set_default	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default(var, val, ...)  "{{{$/;"	f
unite#util#set_default_dictionary_helper	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#set_dictionary_helper	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#smart_execute_command	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_execute_command(action, word)$/;"	f
unite#util#smart_open_command	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_open_command(action, word)$/;"	f
unite#util#sort_by	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#sort_by(...)$/;"	f
unite#util#strchars	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strchars(...)$/;"	f
unite#util#strwidthpart	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart(...)$/;"	f
unite#util#strwidthpart_reverse	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart_reverse(...)$/;"	f
unite#util#substitute_path_separator	bundle/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(...)$/;"	f
unite#util#substitute_path_separator	bundle/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(path)$/;"	f
unite#util#system	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#system(...)$/;"	f
unite#util#system_passwd	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#system_passwd(...)$/;"	f
unite#util#truncate	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate(...)$/;"	f
unite#util#truncate_smart	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_smart(...)$/;"	f
unite#util#truncate_wrap	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_wrap(str, max, footer_width, separator) "{{{$/;"	f
unite#util#uniq	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq(...)$/;"	f
unite#util#uniq_by	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq_by(...)$/;"	f
unite#util#wcswidth	bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#wcswidth(string)$/;"	f
unite#variables#all_sources	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#all_sources(...) "{{{$/;"	f
unite#variables#current_unite	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#current_unite() "{{{$/;"	f
unite#variables#default_context	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#default_context() "{{{$/;"	f
unite#variables#disable_current_unite	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#disable_current_unite() "{{{$/;"	f
unite#variables#dynamic	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#dynamic() "{{{$/;"	f
unite#variables#enable_current_unite	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#enable_current_unite() "{{{$/;"	f
unite#variables#filters	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#filters(...) "{{{$/;"	f
unite#variables#kinds	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#kinds(...) "{{{$/;"	f
unite#variables#loaded_defaults	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_defaults() "{{{$/;"	f
unite#variables#loaded_sources	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_sources(...) "{{{$/;"	f
unite#variables#options	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#options() "{{{$/;"	f
unite#variables#set_current_unite	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#set_current_unite(unite) "{{{$/;"	f
unite#variables#sources	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#sources(...) "{{{$/;"	f
unite#variables#static	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#static() "{{{$/;"	f
unite#variables#use_current_unite	bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#use_current_unite() "{{{$/;"	f
unite#version	bundle/unite.vim/autoload/unite.vim	/^function! unite#version() "{{{$/;"	f
unite#view#_add_previewed_buffer_list	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_add_source_message	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_source_message(message, source_name) "{{{$/;"	f
unite#view#_bottom_cursor	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_bottom_cursor() "{{{$/;"	f
unite#view#_change_highlight	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_change_highlight()  "{{{$/;"	f
unite#view#_clear_match	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_match() "{{{$/;"	f
unite#view#_clear_message	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_message() "{{{$/;"	f
unite#view#_close	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close(buffer_name)  "{{{$/;"	f
unite#view#_close_preview_window	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close_preview_window() "{{{$/;"	f
unite#view#_convert_lines	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_convert_lines(candidates) "{{{$/;"	f
unite#view#_do_auto_highlight	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_highlight() "{{{$/;"	f
unite#view#_do_auto_preview	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_preview() "{{{$/;"	f
unite#view#_get_source_candidates_string	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_source_candidates_string(source) "{{{$/;"	f
unite#view#_get_source_name_string	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_source_name_string(source) "{{{$/;"	f
unite#view#_get_status_head_string	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_head_string() "{{{$/;"	f
unite#view#_get_status_plane_string	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_plane_string() "{{{$/;"	f
unite#view#_get_status_string	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_string(unite) "{{{$/;"	f
unite#view#_get_status_tail_string	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_tail_string() "{{{$/;"	f
unite#view#_init_cursor	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_init_cursor() "{{{$/;"	f
unite#view#_match_line	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_match_line(highlight, line, id) "{{{$/;"	f
unite#view#_preview_file	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_preview_file(filename) "{{{$/;"	f
unite#view#_print_error	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_error(message) "{{{$/;"	f
unite#view#_print_message	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_message(message, ...) "{{{$/;"	f
unite#view#_print_source_error	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_error(message, source_name) "{{{$/;"	f
unite#view#_print_source_message	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_message(message, source_name) "{{{$/;"	f
unite#view#_quick_match_redraw	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quick_match_redraw(quick_match_table, is_define) "{{{$/;"	f
unite#view#_quit	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quit(is_force, ...)  "{{{$/;"	f
unite#view#_redraw	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw(is_force, winnr, is_gather_all) "{{{$/;"	f
unite#view#_redraw_all_candidates	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_all_candidates() "{{{$/;"	f
unite#view#_redraw_candidates	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_candidates(...) "{{{$/;"	f
unite#view#_redraw_echo	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_echo(expr) "{{{$/;"	f
unite#view#_redraw_line	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_line(...) "{{{$/;"	f
unite#view#_redraw_prompt	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_prompt() "{{{$/;"	f
unite#view#_remove_previewed_buffer_list	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_resize_window	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_resize_window() "{{{$/;"	f
unite#view#_save_position	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_save_position() "{{{$/;"	f
unite#view#_search_cursor	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_search_cursor(candidate) "{{{$/;"	f
unite#view#_set_candidates_lines	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_candidates_lines(lines) "{{{$/;"	f
unite#view#_set_cursor_line	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_cursor_line() "{{{$/;"	f
unite#view#_set_syntax	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_syntax() "{{{$/;"	f
unite#view#_switch_unite_buffer	bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_switch_unite_buffer(buffer_name, context) "{{{$/;"	f
unite#vimfiler_check_filetype	bundle/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_check_filetype(...) "{{{$/;"	f
unite#vimfiler_complete	bundle/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unittest	bundle/jedi-vim/jedi/test/helpers.py	/^    import unittest$/;"	i
unittest	bundle/jedi-vim/jedi/test/helpers.py	/^    import unittest2 as unittest$/;"	i
unittest	bundle/jedi-vim/jedi/test/test_evaluate/absolute_import/local_module.py	/^import unittest$/;"	i
unittest	bundle/jedi-vim/jedi/test/test_evaluate/test_docstring.py	/^from ..helpers import unittest$/;"	i
unittest	bundle/jedi-vim/jedi/test/test_parser/test_tokenize.py	/^from ..helpers import unittest$/;"	i
unittest	bundle/jedi-vim/jedi/test/test_utils.py	/^from .helpers import unittest, cwd_at$/;"	i
unload	bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:unload() abort$/;"	f
unload	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! s:unload() abort$/;"	f
unmapping_file_operations	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:unmapping_file_operations() "{{{$/;"	f
unmarksigns	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f
unpack	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^    def unpack(self, func=None):$/;"	m	class:Arguments
unshift	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
upconvert	bundle/lightline.vim/autoload/lightline/colorscheme.vim	/^function! s:upconvert(nr) abort$/;"	f
update	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def update(self, source):$/;"	m	class:FastParser
url	bundle/jedi-vim/jedi/setup.py	/^      url='https:\/\/github.com\/davidhalter\/jedi',$/;"	v
urlcursorhighlight	bundle/vim-colorschemes/colors/landscape.vim	/^function! s:urlcursorhighlight()$/;"	f
urlcursormatch	bundle/vim-colorschemes/colors/landscape.vim	/^function! s:urlcursormatch(force)$/;"	f
urllib	bundle/jedi-vim/conftest.py	/^import urllib$/;"	i
urllib	bundle/jedi-vim/jedi/scripts/wx_check.py	/^    import urllib.request as urllib2$/;"	i
urllib2	bundle/jedi-vim/jedi/scripts/wx_check.py	/^    import urllib.request as urllib2$/;"	i
urllib2	bundle/jedi-vim/jedi/scripts/wx_check.py	/^    import urllib2$/;"	i
usages	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^    def usages(self, additional_module_paths=()):$/;"	m	class:Script
usages	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^from jedi.api import usages$/;"	i
usages	bundle/jedi-vim/jedi/jedi/api/usages.py	/^def usages(evaluator, definition_names, mods):$/;"	f
usages_add_import_modules	bundle/jedi-vim/jedi/jedi/api/usages.py	/^def usages_add_import_modules(evaluator, definitions):$/;"	f
use_filesystem_cache	bundle/jedi-vim/jedi/jedi/settings.py	/^use_filesystem_cache = True$/;"	v
use_guiattr	bundle/vim-colorschemes/colors/xterm16.vim	/^function s:use_guiattr( nattrs, n )$/;"	f
use_metaclass	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def use_metaclass(meta, *bases):$/;"	f
use_metaclass	bundle/jedi-vim/jedi/jedi/api/classes.py	/^from jedi._compatibility import unicode, use_metaclass$/;"	i
use_metaclass	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^from jedi._compatibility import use_metaclass, is_py3, unicode$/;"	i
use_metaclass	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^from jedi._compatibility import use_metaclass, unicode, Python3Method$/;"	i
use_metaclass	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^from jedi._compatibility import use_metaclass$/;"	i
used_memory	bundle/jedi-vim/jedi/scripts/memory_check.py	/^def used_memory():$/;"	f
used_names	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    used_names = {}  # To be consistent with modules.$/;"	v	class:CompiledObject
used_names	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def used_names(self):$/;"	m	class:FastModule
used_names	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def used_names(self, value):$/;"	m	class:FastModule
user_scope	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def user_scope(self):$/;"	m	class:UserContextParser
user_stmt	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def user_stmt(self):$/;"	m	class:UserContextParser
user_stmt_with_whitespace	bundle/jedi-vim/jedi/jedi/parser/user_context.py	/^    def user_stmt_with_whitespace(self):$/;"	m	class:UserContextParser
usrign	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f
utf8_repr	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^def utf8_repr(func):$/;"	f
utf8_repr	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^from jedi._compatibility import (Python3Method, encoding, is_py3, utf8_repr,$/;"	i
utils	bundle/jedi-vim/jedi/jedi/api/replstartup.py	/^import jedi.utils$/;"	i
utils	bundle/jedi-vim/jedi/test/test_utils.py	/^from jedi import utils$/;"	i
utils	bundle/jedi-vim/jedi_vim.py	/^            from jedi import utils$/;"	i
vacantdict	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f
validfile	bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f
value	bundle/jedi-vim/jedi/test/test_evaluate/not_in_sys_path/not_in_sys_path.py	/^value = 3$/;"	v
value	bundle/jedi-vim/jedi/test/test_evaluate/not_in_sys_path/not_in_sys_path_package/__init__.py	/^value = 'package'$/;"	v
value	bundle/jedi-vim/jedi/test/test_evaluate/not_in_sys_path/not_in_sys_path_package/module.py	/^value = 'package.module'$/;"	v
values	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def values(self):$/;"	m	class:LazyNamesDict
values	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def values(self):$/;"	m	class:Array
values	bundle/jedi-vim/jedi/jedi/evaluate/iterable.py	/^    def values(self):$/;"	m	class:MergedArray
values	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def values(self):$/;"	m	class:LazyInstanceDict
values	bundle/jedi-vim/jedi/jedi/parser/fast.py	/^    def values(self):$/;"	m	class:MergedNamesDict
values	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def values(self):$/;"	m	class:TestClass
var_class	bundle/jedi-vim/jedi/test/completion/classes.py	/^    var_class = TestClass(1)$/;"	v	class:TestClass
var_func	bundle/jedi-vim/jedi/test/completion/classes.py	/^    def var_func(self):$/;"	m	class:TestClass
variable_middle	bundle/jedi-vim/jedi/test/completion/functions.py	/^def variable_middle():$/;"	f
variable_rename	bundle/jedi-vim/jedi/test/completion/functions.py	/^def variable_rename(param):$/;"	f
version	bundle/jedi-vim/jedi/docs/conf.py	/^version = '.'.join(str(x) for x in version_info()[:2])$/;"	v
version	bundle/jedi-vim/jedi/jedi/cache.py	/^    version = 24$/;"	v	class:ParserPickling
version	bundle/jedi-vim/jedi/setup.py	/^      version=jedi.__version__,$/;"	v
version	bundle/jedi-vim/jedi/test/test_evaluate/init_extension_module/setup.py	/^      version='0.0',$/;"	v
version	bundle/jedi-vim/jedi_vim.py	/^            version = utils.version_info()$/;"	v
version	bundle/jedi-vim/jedi_vim.py	/^        version = jedi.__version__$/;"	v
version_info	bundle/jedi-vim/jedi/docs/conf.py	/^from jedi.utils import version_info$/;"	i
version_info	bundle/jedi-vim/jedi/jedi/utils.py	/^def version_info():$/;"	f
very	bundle/jedi-vim/jedi/test/test_integration_import.py	/^@pytest.mark.skipif('True', reason='The nested import stuff is still very messy.')$/;"	i
view_changelog	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	bundle/vundle/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vim	bundle/jedi-vim/initialize.py	/^import vim$/;"	i
vim	bundle/jedi-vim/jedi_vim.py	/^import vim$/;"	i
vim	bundle/vim-colorschemes/colors/xmaslights.vim	/^import vim$/;"	m
vim_command	bundle/jedi-vim/jedi_vim.py	/^def vim_command(string):$/;"	f
vim_eval	bundle/jedi-vim/jedi_vim.py	/^def vim_eval(string):$/;"	f
vimfiler	bundle/vimfiler.vim/plugin/vimfiler.vim	/^augroup vimfiler$/;"	a
vimfiler#columns#size#define	bundle/vimfiler.vim/autoload/vimfiler/columns/size.vim	/^function! vimfiler#columns#size#define()$/;"	f
vimfiler#columns#time#define	bundle/vimfiler.vim/autoload/vimfiler/columns/time.vim	/^function! vimfiler#columns#time#define()$/;"	f
vimfiler#columns#type#define	bundle/vimfiler.vim/autoload/vimfiler/columns/type.vim	/^function! vimfiler#columns#type#define()$/;"	f
vimfiler#complete	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#complete(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#complete_path	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#complete_path(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#custom#get	bundle/vimfiler.vim/autoload/vimfiler/custom.vim	/^function! vimfiler#custom#get() "{{{$/;"	f
vimfiler#custom#get_profile	bundle/vimfiler.vim/autoload/vimfiler/custom.vim	/^function! vimfiler#custom#get_profile(profile_name, option_name) "{{{$/;"	f
vimfiler#custom#profile	bundle/vimfiler.vim/autoload/vimfiler/custom.vim	/^function! vimfiler#custom#profile(profile_name, option_name, value) "{{{$/;"	f
vimfiler#default_settings	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#default_settings() "{{{$/;"	f
vimfiler#do_action	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#do_action(action) "{{{$/;"	f
vimfiler#do_switch_action	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#do_switch_action(action) "{{{$/;"	f
vimfiler#exists_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#exists_another_vimfiler() "{{{$/;"	f
vimfiler#exrename#create_buffer	bundle/vimfiler.vim/autoload/vimfiler/exrename.vim	/^function! vimfiler#exrename#create_buffer(files) " {{{$/;"	f
vimfiler#force_redraw_all_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#force_redraw_all_vimfiler(...) "{{{$/;"	f
vimfiler#force_redraw_screen	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#force_redraw_screen(...) "{{{$/;"	f
vimfiler#get_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_another_vimfiler() "{{{$/;"	f
vimfiler#get_context	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_context() "{{{$/;"	f
vimfiler#get_current_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_current_vimfiler() "{{{$/;"	f
vimfiler#get_datemark	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_datemark(file) "{{{$/;"	f
vimfiler#get_directory_files	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_directory_files(directory, ...) "{{{$/;"	f
vimfiler#get_escaped_marked_files	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_escaped_marked_files() "{{{$/;"	f
vimfiler#get_file	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_file(...) "{{{$/;"	f
vimfiler#get_file_directory	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_file_directory(...) "{{{$/;"	f
vimfiler#get_file_index	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_file_index(line_num) "{{{$/;"	f
vimfiler#get_file_offset	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_file_offset() "{{{$/;"	f
vimfiler#get_filename	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_filename(...) "{{{$/;"	f
vimfiler#get_filetype	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_filetype(file) "{{{$/;"	f
vimfiler#get_histories	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_histories() "{{{$/;"	f
vimfiler#get_line_number	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_line_number(index) "{{{$/;"	f
vimfiler#get_marked_filenames	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_marked_filenames() "{{{$/;"	f
vimfiler#get_marked_files	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_marked_files() "{{{$/;"	f
vimfiler#get_original_file_index	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_original_file_index(line_num) "{{{$/;"	f
vimfiler#get_status_string	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#get_status_string() "{{{$/;"	f
vimfiler#handler#_event_bufwin_enter	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_bufwin_enter(bufnr) "{{{$/;"	f
vimfiler#handler#_event_bufwin_leave	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_bufwin_leave(bufnr) "{{{$/;"	f
vimfiler#handler#_event_cursor_moved	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_cursor_moved() "{{{$/;"	f
vimfiler#handler#_event_handler	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_handler(event_name, ...)  "{{{1$/;"	f
vimfiler#helper#_complete	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#helper#_complete_path	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_complete_path(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#helper#_get_buffer_directory	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_buffer_directory(bufnr) "{{{$/;"	f
vimfiler#helper#_get_cd_path	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_cd_path(dir) "{{{$/;"	f
vimfiler#helper#_get_directory_files	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_directory_files(directory, ...) "{{{$/;"	f
vimfiler#helper#_get_file_directory	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_file_directory(...) "{{{$/;"	f
vimfiler#helper#_parse_path	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_parse_path(path) "{{{$/;"	f
vimfiler#helper#_set_cursor	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_set_cursor()$/;"	f
vimfiler#helper#_sort_files	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_sort_files(files) "{{{$/;"	f
vimfiler#helper#_sort_human	bundle/vimfiler.vim/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_sort_human(candidates, has_lua) "{{{$/;"	f
vimfiler#init#_candidates	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_candidates(candidates, source_name) "{{{$/;"	f
vimfiler#init#_columns	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_columns(columns, context) "{{{$/;"	f
vimfiler#init#_command	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_command(default, args) "{{{$/;"	f
vimfiler#init#_context	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_context(context) "{{{$/;"	f
vimfiler#init#_default_settings	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_default_settings() "{{{$/;"	f
vimfiler#init#_get_datemark	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_get_datemark(file) "{{{$/;"	f
vimfiler#init#_get_filetype	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_get_filetype(file) "{{{$/;"	f
vimfiler#init#_get_postfix	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_get_postfix(prefix, is_create) "{{{$/;"	f
vimfiler#init#_initialize	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_initialize() "{{{$/;"	f
vimfiler#init#_start	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_start(path, ...) "{{{$/;"	f
vimfiler#init#_switch_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_switch_vimfiler(bufnr, context, directory) "{{{$/;"	f
vimfiler#init#_vimfiler_directory	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_vimfiler_directory(directory, context) "{{{1$/;"	f
vimfiler#init#_vimfiler_file	bundle/vimfiler.vim/autoload/vimfiler/init.vim	/^function! vimfiler#init#_vimfiler_file(path, lines, dict) "{{{1$/;"	f
vimfiler#initialize_context	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#initialize_context(context) "{{{$/;"	f
vimfiler#mappings#_change_vim_current_dir	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#_change_vim_current_dir() "{{{$/;"	f
vimfiler#mappings#cd	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#cd(dir, ...) "{{{$/;"	f
vimfiler#mappings#cd_project	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#cd_project(...) "{{{$/;"	f
vimfiler#mappings#close	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#close(buffer_name) "{{{$/;"	f
vimfiler#mappings#create_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#create_another_vimfiler() "{{{$/;"	f
vimfiler#mappings#define_default_mappings	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#define_default_mappings(context) "{{{$/;"	f
vimfiler#mappings#do_action	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_action(action, ...) "{{{$/;"	f
vimfiler#mappings#do_current_dir_action	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_current_dir_action(action, ...) "{{{$/;"	f
vimfiler#mappings#do_dir_action	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_dir_action(action, directory, ...) "{{{$/;"	f
vimfiler#mappings#do_files_action	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_files_action(action, files, ...) "{{{$/;"	f
vimfiler#mappings#do_switch_action	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_switch_action(action) "{{{$/;"	f
vimfiler#mappings#expand_tree_rec	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#expand_tree_rec(file, ...) "{{{$/;"	f
vimfiler#mappings#search_cursor	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#search_cursor(path) "{{{$/;"	f
vimfiler#mappings#smart_cursor_map	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#smart_cursor_map(directory_map, file_map) "{{{$/;"	f
vimfiler#mappings#switch_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#switch_another_vimfiler(...) "{{{$/;"	f
vimfiler#parse_path	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#parse_path(path) "{{{$/;"	f
vimfiler#redraw_all_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#redraw_all_vimfiler() "{{{$/;"	f
vimfiler#redraw_screen	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#redraw_screen() "{{{$/;"	f
vimfiler#set_context	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#set_context(context) "{{{$/;"	f
vimfiler#set_current_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#set_current_vimfiler(vimfiler) "{{{$/;"	f
vimfiler#set_execute_file	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#set_execute_file(exts, command) "{{{$/;"	f
vimfiler#set_extensions	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#set_extensions(kind, exts) "{{{$/;"	f
vimfiler#set_histories	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#set_histories(histories) "{{{$/;"	f
vimfiler#smart_cursor_map	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#smart_cursor_map(directory_map, file_map) "{{{$/;"	f
vimfiler#start	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#start(path, ...) "{{{$/;"	f
vimfiler#util#alternate_buffer	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#alternate_buffer() "{{{$/;"	f
vimfiler#util#convert2list	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#convert2list(expr) "{{{$/;"	f
vimfiler#util#delete_buffer	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#delete_buffer(...) "{{{$/;"	f
vimfiler#util#escape_file_searching	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#escape_file_searching(...)$/;"	f
vimfiler#util#escape_pattern	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#escape_pattern(...)$/;"	f
vimfiler#util#expand	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#expand(path) "{{{$/;"	f
vimfiler#util#get_last_status	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#get_last_status(...)$/;"	f
vimfiler#util#get_vimfiler_winnr	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#get_vimfiler_winnr(buffer_name) "{{{$/;"	f
vimfiler#util#get_vital	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#get_vital() "{{{$/;"	f
vimfiler#util#has_lua	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#has_lua()$/;"	f
vimfiler#util#has_vimproc	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#has_vimproc(...)$/;"	f
vimfiler#util#hide_buffer	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#hide_buffer() "{{{$/;"	f
vimfiler#util#is_cmdwin	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_cmdwin() "{{{$/;"	f
vimfiler#util#is_sudo	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_sudo() "{{{$/;"	f
vimfiler#util#is_win_path	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_win_path(path)$/;"	f
vimfiler#util#is_windows	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_windows(...)$/;"	f
vimfiler#util#path2directory	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#path2directory(...)$/;"	f
vimfiler#util#path2project_directory	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#path2project_directory(...)$/;"	f
vimfiler#util#print_error	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#print_error(...)$/;"	f
vimfiler#util#resolve	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#resolve(filename) "{{{$/;"	f
vimfiler#util#restore_variables	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#restore_variables(variables_save) "{{{$/;"	f
vimfiler#util#set_default	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_default(...)$/;"	f
vimfiler#util#set_default_dictionary_helper	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_default_dictionary_helper(variable, keys, value) "{{{$/;"	f
vimfiler#util#set_dictionary_helper	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_dictionary_helper(...)$/;"	f
vimfiler#util#set_dictionary_helper	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
vimfiler#util#set_variables	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_variables(variables) "{{{$/;"	f
vimfiler#util#sort_by	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#sort_by(...)$/;"	f
vimfiler#util#substitute_path_separator	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#substitute_path_separator(...)$/;"	f
vimfiler#util#system	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#system(...)$/;"	f
vimfiler#util#truncate	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#truncate(...)$/;"	f
vimfiler#util#truncate_smart	bundle/vimfiler.vim/autoload/vimfiler/util.vim	/^function! vimfiler#util#truncate_smart(...)$/;"	f
vimfiler#variables#default_context	bundle/vimfiler.vim/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#default_context() "{{{$/;"	f
vimfiler#variables#get_clipboard	bundle/vimfiler.vim/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#get_clipboard() "{{{$/;"	f
vimfiler#variables#get_data_directory	bundle/vimfiler.vim/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#get_data_directory() "{{{$/;"	f
vimfiler#variables#options	bundle/vimfiler.vim/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#options() "{{{$/;"	f
vimfiler#view#_define_syntax	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_define_syntax() "{{{$/;"	f
vimfiler#view#_force_redraw_all_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_force_redraw_all_vimfiler(...) "{{{$/;"	f
vimfiler#view#_force_redraw_screen	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_force_redraw_screen(...) "{{{$/;"	f
vimfiler#view#_get_max_len	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_get_max_len(files) "{{{$/;"	f
vimfiler#view#_get_print_lines	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_get_print_lines(files) "{{{$/;"	f
vimfiler#view#_redraw_all_vimfiler	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_redraw_all_vimfiler() "{{{$/;"	f
vimfiler#view#_redraw_screen	bundle/vimfiler.vim/autoload/vimfiler/view.vim	/^function! vimfiler#view#_redraw_screen(...) "{{{$/;"	f
vimfiler#winnr_another_vimfiler	bundle/vimfiler.vim/autoload/vimfiler.vim	/^function! vimfiler#winnr_another_vimfiler() "{{{$/;"	f
vimlintOutput	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vital#	bundle/unite.vim/autoload/vital/_unite.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	bundle/vimfiler.vim/autoload/vital/_vimfiler.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	bundle/unite.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	bundle/vimfiler.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
void	bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:void(exrename)$/;"	f
vundle#begin	bundle/vundle/autoload/vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#bundle_dir	bundle/vundle/autoload/vundle.vim	/^let vundle#bundle_dir = expand('$HOME\/.vim\/bundle', 1)$/;"	v
vundle#bundles	bundle/vundle/autoload/vundle.vim	/^let vundle#bundles = []$/;"	v
vundle#config#activate_bundles	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	bundle/vundle/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	bundle/vundle/autoload/vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	bundle/vundle/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#lazy_load	bundle/vundle/autoload/vundle.vim	/^let vundle#lazy_load = 0$/;"	v
vundle#log	bundle/vundle/autoload/vundle.vim	/^let vundle#log = []$/;"	v
vundle#rc	bundle/vundle/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	bundle/vundle/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
vundle#updated_bundles	bundle/vundle/autoload/vundle.vim	/^let vundle#updated_bundles = []$/;"	v
walk	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def walk(self):$/;"	m	class:Scope
walker	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f
warn	bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warn	bundle/vimfiler.vim/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warning	bundle/jedi-vim/jedi/jedi/debug.py	/^def warning(message, *args):$/;"	f
warning	bundle/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
warnings	bundle/jedi-vim/jedi/conftest.py	/^        import warnings$/;"	i
warnings	bundle/jedi-vim/jedi/jedi/api/__init__.py	/^import warnings$/;"	i
warnings	bundle/jedi-vim/jedi/jedi/api/classes.py	/^import warnings$/;"	i
wcswidth	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	bundle/vimfiler.vim/autoload/vital/_vimfiler/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
weakref	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^import weakref$/;"	i
whatever	bundle/jedi-vim/jedi/test/test_integration_import.py	/^    check('\\nfrom os import whatever', ['import'], len('from os im'))$/;"	i
white	bundle/vim-colorschemes/colors/spectro.vim	/^let white  = "#ffffff"$/;"	v
whitespace	bundle/jedi-vim/jedi/jedi/parser/tokenize.py	/^whitespace = r'[ \\f\\t]*'$/;"	v
winshell	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
with_index	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_lambda	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^def with_lambda(callable_lambda, *args, **kwargs):$/;"	f
with_param	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^    def with_param(self):$/;"	m	class:C
with_param	bundle/jedi-vim/jedi/test/completion/parser.py	/^    def with_param($/;"	m	class:IndentIssues
with_statement	bundle/jedi-vim/jedi/setup.py	/^from __future__ import with_statement$/;"	i
with_statement	bundle/jedi-vim/jedi/test/refactor.py	/^from __future__ import with_statement$/;"	i
wrap	bundle/jedi-vim/jedi/jedi/evaluate/__init__.py	/^    def wrap(self, element):$/;"	m	class:Evaluator
wrap	bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap_accent	bundle/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrapper	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    def wrapper(self):$/;"	f	function:utf8_repr
wrapper	bundle/jedi-vim/jedi/jedi/cache.py	/^        def wrapper(*args, **kwargs):$/;"	f	function:time_cache._temp
wrapper	bundle/jedi-vim/jedi/jedi/cache.py	/^    def wrapper(self):$/;"	f	function:cache_star_import
wrapper	bundle/jedi-vim/jedi/jedi/cache.py	/^    def wrapper(self):$/;"	f	function:underscore_memoization
wrapper	bundle/jedi-vim/jedi/jedi/cache.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:memoize_method
wrapper	bundle/jedi-vim/jedi/jedi/common.py	/^    def wrapper(*args, **kwds):$/;"	f	function:reraise_uncaught
wrapper	bundle/jedi-vim/jedi/jedi/debug.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:increase_indent
wrapper	bundle/jedi-vim/jedi/jedi/evaluate/cache.py	/^        def wrapper(obj, *args, **kwargs):$/;"	f	function:memoize_default.func
wrapper	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^    def wrapper(evaluator, obj, parent=builtin, module=None):$/;"	f	function:compiled_objects_cache
wrapper	bundle/jedi-vim/jedi/jedi/evaluate/stdlib.py	/^        def wrapper(evaluator, obj, arguments):$/;"	f	function:argument_clinic.f
wrapper	bundle/jedi-vim/jedi/test/completion/decorators.py	/^        def wrapper(*args):$/;"	f	function:memoize
wrapper	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def wrapper(*args):$/;"	f	function:decorator
wrapper	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:dec
wrapper	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def wrapper(s):$/;"	f	function:dec
wrapper	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^    def wrapper(*args):$/;"	f	function:tricky_decorator
wrapper	bundle/jedi-vim/jedi/test/completion/dynamic_params.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:def_func
wrapper	bundle/jedi-vim/jedi/test/completion/functions.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:memoize
wrapper	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^    def wrapper(*args, **kwds):$/;"	f	function:my_decorator
wrapper	bundle/jedi-vim/jedi/test/helpers.py	/^        def wrapper(*args, **kwds):$/;"	f	function:cwd_at.decorator
wrapper	bundle/jedi-vim/jedi/test/test_speed.py	/^            def wrapper(self):$/;"	f	function:TestSpeed._check_speed.decorated
wrapper	bundle/jedi-vim/jedi_vim.py	/^        def wrapper(*args, **kwargs):$/;"	f	function:_check_jedi_availability.func_receiver
wrapper	bundle/jedi-vim/jedi_vim.py	/^    def wrapper(*args, **kwargs):$/;"	f	function:catch_and_print_exceptions
wrapper2	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def wrapper2(first_arg, *args2, **kwargs2):$/;"	f	function:dec2
wraps	bundle/jedi-vim/jedi/test/completion/imports.py	/^from functools import (partial, wraps)$/;"	i
write	bundle/vimfiler.vim/autoload/vimfiler/handler.vim	/^function! s:write(source_name, source_args, line1, line2, event_name)  "{{{$/;"	f
write_cache	bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:write_cache(context, directory, files) "{{{$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f
writecache	bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f
writefile	bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
writefile	bundle/vimfiler.vim/autoload/vital/_vimfiler/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
wrong_indents	bundle/jedi-vim/jedi/test/completion/invalid.py	/^def wrong_indents():$/;"	f
wx_core	bundle/jedi-vim/jedi/scripts/wx_check.py	/^wx_core = urllib2.urlopen(uri).read()$/;"	v
x	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^def x():$/;"	f
x	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def x(self):$/;"	m	class:X
x	bundle/jedi-vim/jedi/test/completion/definition.py	/^def x(): pass  # acts like EOF$/;"	f
x	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    x = RevealAccess(10, 'var "x"')$/;"	v	class:C
x	bundle/jedi-vim/jedi/test/completion/functions.py	/^    def x(self, a, b=1):$/;"	m	class:Something
x	bundle/jedi-vim/jedi/test/completion/functions.py	/^x = asdf(a=1,$/;"	v
x	bundle/jedi-vim/jedi/test/completion/goto.py	/^    x = 3$/;"	v	class:ClassVar
x	bundle/jedi-vim/jedi/test/completion/goto.py	/^def x():$/;"	f
x	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^x = []$/;"	v
x	bundle/jedi-vim/jedi/test/completion/ordering.py	/^    def x():$/;"	f	function:x
x	bundle/jedi-vim/jedi/test/completion/ordering.py	/^def x():$/;"	f
x	bundle/jedi-vim/jedi/test/completion/precedence.py	/^x = 'upp' + 'e'$/;"	v
x	bundle/jedi-vim/jedi/test/completion/precedence.py	/^x = [1, 'a', 1.0]$/;"	v
x	bundle/jedi-vim/jedi/test/completion/types.py	/^x = [3]$/;"	v
x	bundle/jedi-vim/jedi/test/completion/types.py	/^x = []$/;"	v
x	bundle/jedi-vim/jedi/test/static_analysis/attribute_error.py	/^    x = undefined$/;"	v
x	bundle/jedi-vim/jedi/test/test_api/test_api.py	/^    assert api.Script('import x', column=0).goto_definitions() == []$/;"	i
x_method	bundle/jedi-vim/jedi/test/completion/usages.py	/^    def x_method(self):$/;"	m	class:TestClass
xargs	bundle/jedi-vim/jedi/test/completion/functions.py	/^def xargs(*args):$/;"	f
xorz	bundle/jedi-vim/jedi/test/completion/complex.py	/^xorz = getattr(asdfy()(), 'asdf')$/;"	v
xy	bundle/jedi-vim/jedi/test/completion/lambdas.py	/^def xy(param):$/;"	f
xyz	bundle/jedi-vim/jedi/test/completion/basic.py	/^xyz = 'smörbröd.py'$/;"	v
y	bundle/jedi-vim/jedi/test/completion/arrays.py	/^def y(a):$/;"	f
y	bundle/jedi-vim/jedi/test/completion/comprehensions.py	/^y = 1.0$/;"	v
y	bundle/jedi-vim/jedi/test/completion/decorators.py	/^    def y(self):$/;"	m	class:X
y	bundle/jedi-vim/jedi/test/completion/descriptors.py	/^    y = 5.0$/;"	v	class:C
y	bundle/jedi-vim/jedi/test/completion/goto.py	/^def y():$/;"	f
y	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^        assert self._bool_is_definitions('from x import y') == [False, True]$/;"	i
y	bundle/jedi-vim/jedi/test/test_api/test_classes.py	/^        assert self._bool_is_definitions('from x.z import y') == [False, False, True]$/;"	i
yank_full_path	bundle/vimfiler.vim/autoload/vimfiler/mappings.vim	/^function! s:yank_full_path() "{{{$/;"	f
yielder	bundle/jedi-vim/jedi/test/completion/stdlib.py	/^def yielder():$/;"	f
yields	bundle/jedi-vim/jedi/jedi/evaluate/representation.py	/^    def yields(self):$/;"	m	class:FunctionExecution
yields	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def yields(self):$/;"	m	class:Function
yields	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^    def yields(self):$/;"	m	class:Lambda
z	bundle/jedi-vim/jedi/test/completion/goto.py	/^def z():$/;"	f
zero_position_modifier	bundle/jedi-vim/jedi/jedi/evaluate/compiled/__init__.py	/^from jedi.parser.tree import Param, Base, Operator, zero_position_modifier$/;"	i
zero_position_modifier	bundle/jedi-vim/jedi/jedi/parser/tree.py	/^zero_position_modifier = PositionModifier()$/;"	v
zip	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	bundle/vimfiler.vim/autoload/vital/_vimfiler/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_longest	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    from itertools import izip_longest as zip_longest  # Python 2$/;"	i
zip_longest	bundle/jedi-vim/jedi/jedi/_compatibility.py	/^    from itertools import zip_longest$/;"	i
zip_longest	bundle/jedi-vim/jedi/jedi/evaluate/param.py	/^from jedi._compatibility import unicode, zip_longest$/;"	i
zip_longest	bundle/jedi-vim/jedi_vim.py	/^    from itertools import izip_longest as zip_longest  # Python 2$/;"	i
zip_longest	bundle/jedi-vim/jedi_vim.py	/^    from itertools import zip_longest$/;"	i
zipfile	bundle/jedi-vim/conftest.py	/^import zipfile$/;"	i
