{"name":"vim","tagline":"","body":"## Description\r\n\r\nMinimal VIM configuration file based on KISS principle\r\n\r\n## How to install?\r\n\r\n```\r\ncd ~\r\ngit clone https://github.com/aliev/vim.git\r\nmv ~/vim ~/.vim\r\ngit clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle\r\necho \"source ~/.vim/vimrc\" > .vimrc\r\nvim +BundleInstall +qall # Install all plugins\r\n\r\n# Syntax check for python users\r\nsudo pip install pylama\r\n\r\n# Syntax check for javascript users\r\nsudo npm install -g jslint\r\n\r\n# Tern library for javascript\r\ncd ~/.vim/bundle/tern_for_vim/\r\nsudo npm install tern\r\n```\r\n\r\n# Installing YouCompleteMe\r\n\r\n```\r\ncd ~/.vim/bundle/YouCompleteMe/\r\n./install.sh\r\n```\r\n\r\n## For Mac users\r\n\r\nYou must install newtest macvim using brew (please, install XCode first):\r\n\r\n```\r\nbrew install macvim --override-system-vim\r\n```\r\n\r\nThis command will replace old system vim\r\n\r\n## Important\r\n\r\nIf jedi-vim autocomplete doesn't work correctly, you must upgrade you vim to latest version (currently 7.4), or disable ```g:airline#extensions#tabline#enabled``` option\r\n\r\n## More goodies for console users\r\n\r\n### My .psqlrc config file\r\n\r\n[Here](https://gist.github.com/aliev/a25f0e8cf88fc02ef516)\r\n\r\n### Powerline for tmux\r\n\r\nhttps://github.com/erikw/tmux-powerline\r\n\r\nif you use tmux, possible for you will use the following configuration\r\n\r\n```\r\n# don't wait for an escape sequence after hitting\r\n# Esc. fixes insert mode exit lag in vim\r\nset -sg escape-time 0\r\nset -g terminal-overrides 'xterm*:smcup@:rmcup@'\r\n\r\nset-option -g default-terminal \"screen-256color\"\r\n# ---------------------\r\n# Enable mouse\r\n# ---------------------\r\nset -g mode-mouse on\r\nset -g mouse-resize-pane on\r\nset -g mouse-select-pane on\r\nset -g mouse-select-window on\r\n\r\n# No delay for escape key press\r\nset -sg escape-time 0\r\n\r\nset-window-option -g mode-keys vi\r\nbind-key -t vi-copy 'v' begin-selection\r\nbind-key -t vi-copy 'y' copy-selection\r\n```\r\n\r\nIf you want to enable powerline for your tmux, you can use [this installation instruction](http://powerline.readthedocs.org/en/latest/installation.html)\r\n\r\nFor example, i've installed my powerline by using command like this:\r\n\r\n```\r\nsudo pip install powerline\r\n```\r\n\r\nAfter installation i've added similar lines in my .tmux.conf (for os x only):\r\n\r\n```\r\nsource /Library/Python/2.7/site-packages/Powerline-beta-py2.7.egg/powerline/bindings/tmux/powerline.conf\r\n```\r\n\r\nIt seems all is well until it comes to using iTerm2 on OSX. Suddenly scrolling\r\nback in the outer terminal shows history from prior to the start of tmux. There\r\nare no end of suggestions about how to fix this, including \"disable the status bar\"\r\nand \"it should just work\". Actually itâ€™s fairly simple.\r\n\r\nEnable the option under \"Preferences -> Profiles -> Terminal\" called\r\n``` Save lines to scrollback when an app status bar is present ```\r\n\r\ntaken from here http://dan.carley.co/blog/2013/01/11/tmux-scrollback-with-iterm2/\r\n\r\nEnable clipboard between the Mac OS and tmux: https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard\r\n\r\n### CtrlP Note\r\n\r\nTo work correctly CtrlPBufTag you must install exuberant ctags.\r\n\r\nFor MacOS X Users:\r\n\r\n```\r\nbrew install ctags\r\n```\r\n\r\nFor Ubuntu Users:\r\n\r\n```\r\nsudo apt-get install exuberant-ctags\r\n```\r\n\r\n### Patched Menlo fonts for powerline you can get here\r\n\r\nhttps://github.com/abertsch/Menlo-for-Powerline\r\n\r\n### Prezto (awesome zsh configuration)\r\n\r\nhttps://github.com/sorin-ionescu/prezto\r\n\r\n\r\n### Oh-my-zsh (my favorite configuration)\r\n\r\nNote: If tmux will not recognize the fonts, uncomment the following line to the file. zshrc\r\n\r\n```\r\n# You may need to manually set your language environment\r\nexport LANG=en_EN.UTF-8\r\n```\r\n\r\nTo console has become even more beautiful, you can use the following extensions\r\n\r\nZsh substring search\r\nhttps://github.com/zsh-users/zsh-history-substring-search\r\n\r\nZsh asutosuggestions\r\nhttps://github.com/tarruda/zsh-autosuggestions\r\n\r\nZsh syntax highlighting\r\nhttps://github.com/zsh-users/zsh-syntax-highlighting\r\n\r\nAn example of how I connected the extensions\r\n\r\n```\r\n# Must be enabled before zsh-autosuggestions!\r\nsource ~/zsh-history-substring-search/zsh-history-substring-search.zsh\r\n\r\n# Setup zsh-autosuggestions\r\nsource ~/.zsh-autosuggestions/autosuggestions.zsh\r\n\r\n# Enable autosuggestions automatically\r\nzle-line-init() {\r\n    zle autosuggest-start\r\n}\r\nzle -N zle-line-init\r\n\r\nsource ~/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\r\n```\r\n\r\nAnd that's what I came\r\n\r\n![zsh autosuggestions highlighting](https://raw.github.com/aliev/vim/master/zsh.png \"Oh my zsh with autosuggestions and syntax highlighting\")\r\n\r\n### Vim indent line\r\n\r\nhttps://github.com/Yggdroot/indentLine\r\n\r\nNote, option:\r\n\r\n```\r\nlet g:indentLine_faster=1\r\n```\r\n\r\nwill speed up the indentLine\r\n\r\n### Vim GoCode (like jedi-vim for golang)\r\n\r\nhttps://github.com/Blackrush/vim-gocode\r\n\r\n### Tern based JavaScript editing\r\n\r\nhttps://github.com/marijnh/tern_for_vim\r\n\r\n### Multilanguage syntax checking\r\n\r\nhttps://github.com/scrooloose/syntastic\r\n\r\n## Screenshots\r\n\r\n![vim indent guides](https://raw.github.com/aliev/vim/master/vim.png \"Vim with indent guides and trailing characters\")\r\n![zsh django](https://raw.github.com/aliev/vim/master/zsh-django-autocomplete.png \"Zsh with django autocomplete\")\r\n![zsh vim](https://raw.github.com/aliev/vim/master/zsh-vim.png \"Zsh with vim\")\r\n![zsh search](https://raw.github.com/aliev/vim/master/zsh-search.png \"Zsh search\")","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}